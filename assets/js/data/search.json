[ { "title": "OpenRoads模板清除表土组件设置", "url": "/posts/ord-template-topsoil-stripping-component/", "categories": "OpenRoads, 断面模板", "tags": "组件, 表土, 土方, 模板", "date": "2022-09-29 09:38:00 +0800", "snippet": "1、进入模板设置2、添加overlay/Stripping组件3、设置组件参数：特征设为Mesh\\Grading\\TC_Topsoil，Top option和Bottom option均设置为Follow Surface，Surface Depth按清除表土厚度值设定，标签按规则命名。4、为路面组件和放坡末端条件逐一设置覆盖组件:5、将Topsoil Stripping组件的父组件设置为各放坡末端条件组件:6、测试组件是否符合预期:6、廊道(道路)模型和剖面效果: Video:Topsoil Stripping With Components" }, { "title": "MicroStation三维操作技巧", "url": "/posts/mstn-3d-tips-and-tricks/", "categories": "MicroStation, 基础", "tags": "key-in, 技巧, 曲面, 裁剪, 极坐标, 直角坐标", "date": "2022-09-29 09:38:00 +0800", "snippet": " 1、曲面裁剪 2、裁剪顺序 3、相对坐标 4、坐标切换 5、大曲面裁剪 6、曲面无法剪裁的解决办法 7、曲面求交线 8、工程模型与地形模型修剪1、曲面裁剪曲面裁剪时被裁剪对象需要转换成Smart Surface，如果被裁剪对象有多个区域在裁剪面以外需要裁剪，裁掉一部分后剩余部位依然与被裁剪面连在一起，但有裁剪痕迹线存在，此时只要将其转换成B-spline Surface一次就可以将剩余手动删除掉了。2、裁剪顺序裁剪时被裁剪面和裁剪面无法按顺序选择时可以选中裁剪第一个或是第二个面改变被裁剪对象的顺序，默认被裁剪对象的选中部分为留下部分，如果需要留住部分无法选中（裁剪面遮挡），则需要点选下部的反转第一个或第二个。3、相对坐标将指定对象移动到一定高程时输入绝对坐标时可用#、也可用相对坐标：0,0，5004、坐标切换直角坐标与极坐标切换快捷键为：M，按X、Y也可切换到直角坐标，换A可切换到极坐标角度输入、按D可锁定距离输入；5、大曲面裁剪在进行曲面裁剪时若遇裁剪边界太大造成裁剪结果出错时，可将裁剪边界分成裁剪当前边的一部分范围(Split Surface的两点方式)。6、曲面无法剪裁的解决办法若曲面始终无法剪裁，则需要将裁剪边界曲面分割再缝合，分割时使用（At Crease Iso Curves\\折缝上的轴测曲线 — 在折缝上的轴曲线处进行分割），缝合时注意不要留下小的间隔。7、曲面求交线Modeling&gt;Surface&gt;Surface Utilities&gt;Compute Surface&gt;Intersections8、工程模型与地形模型修剪（早期办法，后续列出更快捷操作过程） a、先用地形模型剪切建筑模型； b、由修剪完美的建筑模型提取与地形相交的边线； c、新建2D设计文件，参考并复制边线，将其由三维转换成二维； d、在地形模型内参考并复制入二维边线，将其封闭、生成面域、然后拉伸与地形模型相交； e、将由边线拉伸的伸曲面由相交边线分割成B样条曲面； f、将分割成的多个B样条曲缝合成一个整体； g、最后使用缝合成的智能曲面裁剪地形曲面即可。" }, { "title": "MicroStation通过Key-in命令给元素增加Links信息", "url": "/posts/mstn-keyins-to-add-links-to-element/", "categories": "MicroStation, 基础", "tags": "key-in, 元素", "date": "2022-09-28 20:38:00 +0800", "snippet": "在Microstation下我们可以手动操作给元素增加Links信息，Links可以使元素与磁盘上的文件关联、与URL关联、与Key-in命令关联、与dgn文件中的某一个模型关联、与dgn文件中的Saved View关联，元素和外部对象的关联方便了信息的访问，在工程设计中有一定的实用价值。如何通过程序自动给元素增加Links信息呢？很遗憾Mdl及VBA没有公开类似的API接口。能否通过Key-in命令来实现呢，继而程序员通过Mdl的发送命令接口(如mdlInput_sendKeyin())来实现程序自动创建的目的呢？答案是肯定的，但是这组Key-in命令并没有公开，下面介绍几组未公开的Key-in命令来实现给元素添加不同种类的Links信息：添加文件Links: ELEMENT CREATE LINK FILE D:\\mydoctmp\\books.xml添加URL Links: ELEMENT CREATE LINK URL http://www.bentley.com添加Key-in Links: ELEMENT CREATE LINK KEYIN \"ustnkeyin:place line;xy=500,125;xy=537,165\"添加模型Links: ELEMENT CREATE LINK DGNMODEL \"C:\\test.dgn\" my3d添加保存的视图Links: ELEMENT CREATE LINK DGNVIEW \"C:\\test.dgn\" \"my3d\" \"mySavedV1\"如果直接输入：element create link则会弹出添加链接对话框：点击“…”选择文件，提示选择链接对象：按“OK”后选择需要添加链接的元素对象即可，然后点击元素上的链接标志可以直接链接目标。" }, { "title": "MicroStation高程标高标注", "url": "/posts/mstn-elevation-level-laveling/", "categories": "MicroStation, 基础", "tags": "高程, 标注", "date": "2022-09-28 19:58:00 +0800", "snippet": " 标高标注 高程标注标高标注MS中带有一个专门用于标注标高的工具，名字叫做Ordinate Dimensioning。对于MSCE来说，可从如下位置找到它：该工具使用起来稍有令人迷惑的地方，主要就是需要明确各个点的含义。下面详述操作步骤：点击该图标后出现如下图所示的工具设置框，其中的Datum Value默认值为0，表示你基准线的高程。然后你在当前视图中指定一个点为基准点，然后第二个点定义标注高程的方向，一般就是冲上，当然也可以沿着水平方向去标注。第三个点为标注基准线的终点，而后的第四、第五等等点则为真正你想要标注的高程位置的点。如下图所示来指定各个点的位置：高程标注MicroStation带有坐标标注工具，默认是标注X、Y、Z，可以通过键入命令关闭平面坐标X、Y的显示，只标注Z坐标，键入命令为：label hidexy on，若要重新打开三维坐标标注，输入命令label hidexy off即可。" }, { "title": "MicroStation极坐标绘图", "url": "/posts/mstn-accudraw-polar-coordination-drawing/", "categories": "MicroStation, 基础", "tags": "AccuDraw, 极坐标", "date": "2022-09-28 14:33:00 +0800", "snippet": " 精确绘图设置 直角坐标、极坐标切换 角度的格式 双点分隔 冒号分隔 度分秒符号分隔 角度起始边精确绘图设置自动聚焦区域：（仅极坐标）如果打开，则 &lt;A&gt; 和 &lt;D&gt; 精确绘图快捷键将焦点设置为所选区域并锁定当前值。如果关闭，则 &lt;A&gt; 和 &lt;D&gt; 精确绘图快捷键将锁定当前值而不影响焦点。直角坐标、极坐标切换精确绘图快捷键“M”可在直角坐标和极坐标间切换。 CE版的空格为唤出快捷菜单，不再是坐标系切换快捷键。角度的格式双点分隔MicorStation中的角度可以用两个点分隔度分秒，比如108°36’25”可以如下格式输入“108..36..25”，在每次输入第二个点后会变成“：”，输入回车即可：冒号分隔角度可以用冒号分隔度分秒，如10°23’45”可以输入“10:23:45”：度分秒符号分隔度分秒符号分隔格式：度符号为上角符号“^”，分为单引号“‘”，秒为双引号““”，如108°36’25”可以输为：“108^36’25“”，该格式为多数软件采用的通用格式。角度起始边要以某条边为角度旋转起始边进行极坐标绘图，需要使用精确绘图快捷键“R、E”将绘图小平面的坐标轴与起始边对齐，再输入角度与距离绘出下一点：输入快捷键“R、E”将绘图小平面与起始边对齐：快捷键“R、E”将就近使用坐标轴与元素对齐，因此如果是绘图小平面的Y轴（绿色）与元素对齐的，还需要使用“R、Z”将绘图小平面沿Z轴旋转90度使得X轴（角度起始轴）与起边元素重合为止。" }, { "title": "MicroStation精确绘图快捷键入命令的完整列表", "url": "/posts/mstn-accudraw-commands-hotkeys-list/", "categories": "MicroStation, 基础", "tags": "AccuDraw, 命令, 快捷键", "date": "2022-09-28 13:50:00 +0800", "snippet": "下表列出了每个键盘快捷键、对应的键入命令及其效果。有关各个键盘快捷键的效果的更多信息，请参阅精确绘图过程的一般讨论。这些快捷键仅在精确绘图窗口具有焦点时有效。 键 键入命令 作用 &lt;Enter&gt; ACCUDRAW LOCK SMART 智能锁 - 锁定坐标轴或极轴、角度。 &lt;M&gt; ACCUDRAW MODE 在“直角坐标”和“极坐标”之间切换。 &lt;O&gt; ACCUDRAW SETORIGIN 将绘图平面原点移动到当前指针位置。 &lt;V&gt; ACCUDRAW ROTATE VIEW 旋转绘图平面以与视图轴对齐。 &lt;T&gt; ACCUDRAW ROTATE TOP 旋转绘图平面以与标准顶视图中的轴对齐。 &lt;F&gt; ACCUDRAW ROTATE FRONT 旋转绘图平面以与标准前视图中的轴对齐。 &lt;S&gt; ACCUDRAW ROTATE SIDE 旋转绘图平面以与标准侧视图中的轴对齐。 &lt;B&gt; ACCUDRAW ROTATE BASE TOGGLE 旋转绘图平面以与激活 ACS 对齐 &lt;E&gt; ACCUDRAW ROTATE CYCLE 在三个主平面之间旋转：顶视图、前视图和侧视图 &lt;X&gt; ACCUDRAW LOCK X 切换 X 值的锁状态。 &lt;Y&gt; ACCUDRAW LOCK Y 切换 Y 值的锁状态。 &lt;Z&gt; ACCUDRAW LOCK Z 切换 Z 值的锁状态。 &lt;D&gt; ACCUDRAW LOCK DISTANCE 切换距离值的锁状态。 &lt;A&gt; ACCUDRAW LOCK ANGLE 切换角度值的锁状态。 &lt;L, I&gt; ACCUDRAW LOCK INDEX 锁定当前索引状态。 &lt;L, P&gt; ACCUDRAW LOCK GRIDPLANE 切换 ACS 平面和 ACS 平面捕捉锁 &lt;L, A&gt; LOCK ACS TOGGLE 切换 ACS 平面锁。 &lt;L, S&gt; LOCK SNAP CONSTRUCTION TOGGLE 切换 ACS 平面捕捉锁。 &lt;L, Z&gt; ACCUDRAW LOCK STICKYZ 切换粘性 Z 轴锁 &lt;R, A&gt; ACCUDRAW ROTATE ACS 用于永久旋转绘图视图。 &lt;R, C&gt; ACCUDRAW ROTATE CURRENTACS 将绘图平面旋转到当前 ACS。 &lt;R, E&gt; ACCUDRAW ROTATE ELEMENT 旋转绘图平面以匹配选定元素的方向。 &lt;R, V&gt; ACCUDRAW ROTATE ORIENTVIEW 旋转激活视图以匹配当前绘图平面。 &lt;R, X&gt; ACCUDRAW ROTATE X 绕 x 轴将绘图平面旋转 90 度。 &lt;R, Y&gt; ACCUDRAW ROTATE Y 绕 y 轴将绘图平面旋转 90 度。 &lt;R, Z&gt; ACCUDRAW ROTATE Z 绕 z 轴将绘图平面旋转 90°。 &lt;?&gt; ACCUDRAW DIALOG SHORTCUTS 打开“精确绘图快捷键”窗口。 &lt;~&gt; ACCUDRAW BUMP TOOLSETTING 更改工具设置对话框中的控制选项（快捷键为 ~ &lt;G, T&gt; DIALOG TOOLSETTING 将焦点移动到“工具设置”窗口。 &lt;G, K&gt; DIALOG CMDBROWSE 打开（或将焦点移动到）“键入命令”窗口 &lt;G, S&gt; ACCUDRAW DIALOG SETTINGS 打开（或将焦点移动到）“精确绘图设置”对话框。 &lt;G, A&gt; ACCUDRAW DIALOG GETACS 打开“获得 ACS”对话框 &lt;W, A&gt; ACCUDRAW DIALOG SAVE ACS 打开“写入 ACS”对话框 &lt;P&gt; POINT KEYIN SINGLE 打开“数据点键入命令”对话框以输入单个数据点。 &lt;M&gt; POINT KEYIN MULTIPLE 打开“数据点键入命令”对话框以输入多个数据点。 &lt;I&gt; SNAP INTERSECT 激活捕捉交点模式。 &lt;N&gt; SNAP NEAREST 激活“最近点”捕捉模式。 &lt;C&gt; SNAP CENTER 激活捕捉中心点模式。 &lt;K&gt; ACCUDRAW DIALOG SNAPDIVISOR 打开“关键点捕捉等分数”对话框。 &lt;H, A&gt; ACCUDRAW Toggle 暂停当前工具操作的精确绘图。 &lt;H, S&gt; ACCUSNAP Toggle 打开或关闭精确捕捉。 &lt;H, U&gt; ACCUSNAP SUSPEND 暂停当前工具操作的精确捕捉。 &lt;Q&gt; ACCUDRAW QUIT 停用精确绘图。 除精确绘图快捷键外，ACCUDRAW LOCK GRIDPLANE 键入命令还会映射到 F8 功能键。它的功能与 &lt;L、P&gt; 快捷键相同，用于切换 ACS 平面和 ACS 平面捕捉锁，以及所有视图的栅格视图特性。注释: 键盘快捷键不区分大小写。" }, { "title": "OpenRoads普通三维线段转化为Civil几何路线", "url": "/posts/ord-plan-by-3D-element-smartline-create-alignment/", "categories": "OpenRoads, 平面几何", "tags": "平面几何, 竖面几何, 路线, 几何", "date": "2022-09-27 21:03:00 +0800", "snippet": " 使用条件 操作步骤使用plan by 3D element将3D线段生成具有土木规则的几何路线。使用条件本功能必须在由2D种子生成的文件创建3D对象后出现的2D-3D环境中的3D视图内绘三维线段才能生成具有纵断面的平面路线（生成专用的2D-3D视图文件保存为种子）。由2D种子创建文件后生成3D对象就会自动生成这种环境，其中2D视图窗口以参考3D模型的方式显示3D模型中对象的2D影像。 不能在以下方法中使用此功能： 由2D种子生成文件，参考3D文件中绘制的3D线段 由3D种子创建文件并在模型中直接绘3D线段 以上是参照视频教程操作多次后总结出来的。操作步骤 将视图置为平面/3D视图： 在3D视图内绘制三维线段 ORD-Modeling\\Model Detailing\\3D tools\\plan by 3D element 在3D视图内选择线段完成平面路线的创建 选中平面视图窗口，打开参考，卸载掉参考进来的3D视图 选择路线后可在指定窗口显示对应的线路纵剖面。" }, { "title": "MicroStation里如何使用OpenRoads带有土木规则的3D平面线", "url": "/posts/ord-mstn-how-to-use-civil-rules-3d-line-in-microstation/", "categories": "OpenRoads, 土木规则", "tags": "平面几何, 立面几何, 规则, OpenRoads, MicroStation", "date": "2022-09-27 15:29:00 +0800", "snippet": " 问题描述 解决方案 第一种方法 第二种方法 问题描述带有土木规则Civil Rules的3D平面线如何在MicroStation软件里应用？因为带有土木规则的平面线，Microstation的一些基本工具是用不了的，比如移动等，现在介绍两种方法，解决这个问题。解决方案第一种方法 第一步，新建一个3D文件，文件名为TEST； 第二步，在TEST文件里把Powercivil设计完成的3D平面线参考进来； 注：Inroads、GeoPak及Powercivil是OpenRoads的早期版本，OpenRoads的大部分功能与这些软件相同或相似。 第三步，在参考的对话框里，点击“合并到主文件里Merge into Master”； 第四步，第三步操作完成后，带有3D的平面线即可在Microstation进行操作。第二种方法 第一步，在3D的平面线文件里，放置围栅Place Fence，把路线全部放在围栅里； 第二步，在围栅的工具，找到”Copy/Move Fence Contents to File,并打开这个工具； 第三步，在Output File里选择一个文件为保存拷贝Fence里内容； 第四步，第三步操作完成后，带有3D的平面线即可在Microstation进行操作。" }, { "title": "OpenRoads如何修改平面线的方向", "url": "/posts/ord-how-to-change-alignment-direction/", "categories": "OpenRoads, 平面几何", "tags": "方向, 平面线", "date": "2022-09-27 14:50:00 +0800", "snippet": " 问题描述 解决方案 第一种方法： 第二种方法： 问题描述如下图，原路线的走向是由左到右，如何修改让路线的走向变成由右到左？解决方案一共有2个解决方案：第一种方法： 第一步，打散元素Drop Element； 第二步，利用Complex by Element工具，把各线段串到一起； 第三步，操作工具拾取各个线段的时候，确定路线的方向（箭头的方向即时路线的方向）； 第四步，最终结果。第二种方法： 第一步，线绘制平面线； 第二步，利用常规几何General Geometry&gt;导出到本地Export to Native； 第三步，几何图形Geometry&gt;公用设施Utilities&gt;转置Transpose。备注：如果在SS2里，可以忽略第二步。" }, { "title": "OpenRoads横断面模板编辑规则（参考）", "url": "/posts/ord-template-point-line-component-definition-rules/", "categories": "OpenRoads, 断面模板", "tags": "横断面, 模板, 规则, 规范", "date": "2022-09-27 14:29:00 +0800", "snippet": " 横断面模板Points编辑规则 横断面模板Components编辑规则为了更好适应后期出图功能，横断面模板在编辑过程中某些主要特征点、构件、边坡名称应满足相应规则。横断面模板Points编辑规则以下点均要求在横断面模板定制时要求采用的点名称，下表仅介绍了三级边坡所有横断面左侧点的命名规则，横断面右侧及多级边坡以此类推。 序号 点名称 含义 Override名称 1 XS-CL 路线中心点 无 2 XCD-SP-L 左侧行车道起点 无 3 XCD-EP-L 左侧行车道终点 无 4 YLJ-EP-L 左侧硬路肩终点 无 5 TLJ-EP-L 左侧土路肩终点 无 6 BG-GD-L 左侧边沟沟底中点 无 7 BG-EP-L 左侧边沟终点 无 8 WF1-L 左侧挖方一级边坡终点 无 9 WF-PT-1-L 左侧挖方一级平台终点 无 10 WF2-L 左侧挖方二级边坡终点 无 11 WF-PT-2-L 左侧挖方二级平台终点 无 12 WF3-L 左侧挖方三级边坡终点 无 13 TF1-L 左侧填方一级边坡终点 无 14 TF-PT-1-L 左侧填方一级平台终点 无 15 TF2-L 左侧填方二级边坡终点 无 16 TF-PT-2-L 左侧填方二级平台终点 无 17 TF3-L 左侧填方三级边坡终点 无 18 PSG-GD-L 左侧填方一级排水沟沟底中心点 PSG-GD-L 19 PSG-EP-L 左侧填方一级排水沟终点 PSG-EP-L 20 PSG-WF-L 左侧填方一级排水沟挖方终点 PSG-WF-L 21 PSG-TF-L 左侧填方一级排水沟填方终点 PSG-TF-L 22 PSG-GD-L1 左侧填方二级排水沟沟底中心点 PSG-GD-L 23 PSG-EP-L1 左侧填方二级排水沟终点 PSG-EP-L 24 PSG-WF1-L 左侧填方二级排水沟挖方终点 PSG-WF-L 25 PSG-TF1-L 左侧填方二级排水沟填方终点 PSG-TF-L 26 PSG-GD-L2 左侧填方三级排水沟沟底中心点 PSG-GD-L 27 PSG-EP-L2 左侧填方三级排水沟终点 PSG-EP-L 28 PSG-WF2-L 左侧填方三级排水沟挖方终点 PSG-WF-L 29 PSG-TF2-L 左侧填方三级排水沟填方终点 PSG-TF-L 横断面模板Components编辑规则以下点均要求在横断面模板定制时要求采用的构件名称，下表仅介绍了三级边坡所有横断面左侧构件的命名规则，横断面右侧及多级边坡以此类推。 序号 构件名称 含义 Override名称 1 XCD-L 左侧行车道 无 2 YLJ-L 左侧硬路肩 无 3 TLJ-L 左侧土路肩 无 4 边沟L 左侧边沟 无 5 挖方边坡L 左侧挖方边坡 无 6 填方边坡L 左侧填方一级边坡 填方边坡L 7 填方边坡L2 左侧填方二级边坡 填方边坡L 8 填方边坡L3 左侧填方三级边坡 填方边坡L 9 排水沟L 左侧填方一级排水沟 无 10 排水沟L2 左侧填方二级排水沟 无 11 排水沟L3 左侧填方三级排水沟 无 12 挖方边坡PSG-L 左侧填方一级排水沟挖方边坡 挖方边坡PSG-L 13 填方边坡PSG-L 左侧填方一级排水沟填方边坡 填方边坡PSG-L 14 挖方边坡PSG1-L 左侧填方二级排水沟挖方边坡 挖方边坡PSG-L 15 填方边坡PSG1-L 左侧填方二级排水沟填方边坡 填方边坡PSG-L 16 挖方边坡PSG2-L 左侧填方三级排水沟挖方边坡 挖方边坡PSG-L 17 填方边坡PSG2-L 左侧填方三级排水沟填方边坡 填方边坡PSG-L " }, { "title": "OpenRoads中国公路超高规范", "url": "/posts/china-road-superelevation-rules/", "categories": "OpenRoads, 道路廊道", "tags": "中国, 公路, 超高, 规范", "date": "2022-09-27 14:29:00 +0800", "snippet": " 中国公路超高规范-路拱为2%时 中国公路超高规范-路拱大于2%时中国公路超高规范-路拱为2%时&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;OpenRoadsSuperelevation logFile=\"\" xmlns=\"OpenRoads\"&gt; &lt;Units length=\"meter\" stationRoundingValue=\"1\" crossSlopeRoundingValue=\"0.01\" /&gt; &lt;CreationByCorridorSettings eSelection=\"120mkph 10% Max\" lSelection=\"JTG center\" designSpeed=\"120\" pivotMethod=\"Crown\" /&gt; &lt;RuntimeVariables&gt; &lt;RuntimeVariable name=\"S Curves\" type=\"boolean\" value=\"True\" overRideInternalOptionVariable=\"lengthsAreTotalTransition\" description=\"Only Runoff Length\" /&gt; &lt;/RuntimeVariables&gt; &lt;MaximumERateCalculations&gt; &lt;RateTable name=\"10%\"&gt; &lt;DesignSpeedRateTable speed=\"120\"&gt; &lt;RateEntry radius=\"2950\" eRate=\"NC\" /&gt; &lt;RateEntry radius=\"2080\" eRate=\".03\" /&gt; &lt;RateEntry radius=\"1590\" eRate=\".04\" /&gt; &lt;RateEntry radius=\"1280\" eRate=\".05\" /&gt; &lt;RateEntry radius=\"1070\" eRate=\".06\" /&gt; &lt;RateEntry radius=\"910\" eRate=\".07\" /&gt; &lt;RateEntry radius=\"790\" eRate=\".08\" /&gt; &lt;RateEntry radius=\"680\" eRate=\".09\" /&gt; &lt;RateEntry radius=\"570\" eRate=\".1\" /&gt; &lt;/DesignSpeedRateTable&gt; &lt;/RateTable&gt;\t&lt;RateTable name=\"8%\"&gt; &lt;DesignSpeedRateTable speed=\"60\"&gt; &lt;RateEntry radius=\"870\" eRate=\"NC\" /&gt; &lt;RateEntry radius=\"590\" eRate=\".03\" /&gt; &lt;RateEntry radius=\"430\" eRate=\".04\" /&gt; &lt;RateEntry radius=\"320\" eRate=\".05\" /&gt; &lt;RateEntry radius=\"240\" eRate=\".06\" /&gt; &lt;RateEntry radius=\"170\" eRate=\".07\" /&gt; &lt;RateEntry radius=\"125\" eRate=\".08\" /&gt; &lt;/DesignSpeedRateTable&gt; &lt;/RateTable&gt; &lt;RateEquation name=\"120mkph 10% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"120mkph 10% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"570\" outputValue=\"0.1\" /&gt; &lt;TableEntry inputValue=\"680\" outputValue=\"0.09\" /&gt; &lt;TableEntry inputValue=\"790\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"910\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"1070\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"1280\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1590\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"2080\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2950\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 5500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"120\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"120mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"120mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"650\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"790\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"980\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"1190\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1500\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1990\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2860\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 5500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"120\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"120mkph 6% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"120mkph 6% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"710\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"970\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1340\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1840\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2730\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 5500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"120\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"120mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"120mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"810\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"1070\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1410\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1910\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2780\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 5500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"120\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"100mkph 10% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"100mkph 10% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"360\" outputValue=\"0.1\" /&gt; &lt;TableEntry inputValue=\"450\" outputValue=\"0.09\" /&gt; &lt;TableEntry inputValue=\"540\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"640\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"760\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"920\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1160\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1520\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2180\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 4000 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"100\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"100mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"100mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"400\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"530\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"690\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"860\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1100\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1480\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2150\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 4000 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"100\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"100mkph 6% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"100mkph 6% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"440\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"630\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"920\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1320\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2000\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 4000 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"100\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"100mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"100mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"565\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"770\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1040\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1410\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2090\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 4000 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"100\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"80mkph 10% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"80mkph 10% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"220\" outputValue=\"0.1\" /&gt; &lt;TableEntry inputValue=\"280\" outputValue=\"0.09\" /&gt; &lt;TableEntry inputValue=\"340\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"410\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"500\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"610\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"770\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1020\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"1460\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 2500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"80\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"80mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"80mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"250\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"320\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"420\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"550\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"710\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"960\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"1410\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 2500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"80\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"80mkph 6% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"80mkph 6% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"270\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"400\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"600\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"890\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"1360\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 2500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"80\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"80mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"80mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"360\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"490\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"680\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"940\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"1390\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 2500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"80\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph 10% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph 10% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"115\" outputValue=\"0.1\" /&gt; &lt;TableEntry inputValue=\"150\" outputValue=\"0.09\" /&gt; &lt;TableEntry inputValue=\"190\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"240\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"290\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"360\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"470\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"620\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"900\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"125\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"170\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"240\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"320\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"430\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"590\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"870\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph 6% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph 6% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"135\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"200\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"320\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"500\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"800\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph 4% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph 4% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"150\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"270\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"610\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"205\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"290\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"410\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"570\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"860\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1500 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"55\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"160\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"220\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"310\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"470\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 600 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph 6% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph 6% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"150\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"250\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"410\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 600 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph 4% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph 4% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"70\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"130\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"330\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 600 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph 2% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph 2% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"75\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 600 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"130\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"190\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"280\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"430\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 600 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"170\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"250\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph 6% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph 6% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"35\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"50\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"140\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"230\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph 4% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph 4% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"35\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"150\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph 2% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph 2% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"55\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"180\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"270\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"15\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"50\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"70\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"140\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 150 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph 6% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph 6% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"15\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"70\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"110\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 150 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph 4% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph 4% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"15\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"70\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 150 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph 2% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph 2% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"20\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 150 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"25\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 150 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;/MaximumERateCalculations&gt; &lt;TransitionCalculations&gt; &lt;TransitionEquation name=\"JTG center\" equation=\"TransitionLength\"&gt; &lt;Variable name=\"gradient\" description=\"Delta G (%) from JTG Table 7.5.4\"&gt; &lt;Table inputVariableName=\"speed\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"20\" outputValue=\"0.01\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.008\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.006666667\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.005714286\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.005\" /&gt; &lt;TableEntry inputValue=\"100\" outputValue=\"0.004444444\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.004\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"TransitionLength\" equation=\"(WidthLane*NRotatedLanes)*(MaxE-InitialCrossSlope)*bw/gradient\" description=\"Calculated transition length\" /&gt; &lt;/TransitionEquation&gt; &lt;TransitionEquation name=\"JTG edge\" equation=\"TransitionLength\"&gt; &lt;Variable name=\"gradient\" description=\"Delta G (%) from JTG Table 7.5.4\"&gt; &lt;Table inputVariableName=\"speed\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"20\" outputValue=\"0.02\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.013333333\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.01\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.008\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.006666667\" /&gt; &lt;TableEntry inputValue=\"100\" outputValue=\"0.005714286\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.005\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"TransitionLength\" equation=\"(WidthLane*NRotatedLanes)*(MaxE-InitialCrossSlope)/gradient\" description=\"Calculated transition length\" /&gt; &lt;/TransitionEquation&gt; &lt;/TransitionCalculations&gt; &lt;TransitionOptions interpolateTables=\"false\" percentTransitionOnTangent=\"0.6\" useSpiralLength=\"true\" lengthsAreTotalTransition=\"true\" transitionType=\"Linear\" nonLinearCurveLength=\"0\" startInsideLaneRotationWithOutside=\"false\" /&gt; &lt;RunoutOptions isFixedLength=\"false\" length=\"0\" /&gt; &lt;CustomKeyStations&gt; &lt;Variable name=\"FivePercentStation\" equation=\" ReverseCrownStation * 2 + ReverseCrownStation / 2\" /&gt; &lt;CustomKeyStation type=\"Custom\" equation=\"FivePercentStation\" crossSlopeEquation=\"0.05\" /&gt; &lt;/CustomKeyStations&gt; &lt;TransitionOverlapOptions&gt; &lt;ReverseCurveAdjustmentOption adjustmentType=\"PlanarTransition\" minimumTransitionGap=\"0\" /&gt; &lt;CurveCurveAdjustmentOption adjustmentType=\"PlanarTransition\" minimumTransitionGap=\"0\" /&gt; &lt;/TransitionOverlapOptions&gt;&lt;/OpenRoadsSuperelevation&gt;中国公路超高规范-路拱大于2%时&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;OpenRoadsSuperelevation logFile=\"\" xmlns=\"OpenRoads\"&gt; &lt;Units length=\"meter\" stationRoundingValue=\"1\" crossSlopeRoundingValue=\"0.01\" /&gt; &lt;CreationByCorridorSettings eSelection=\"120mkph 10% Max\" lSelection=\"JTG center\" designSpeed=\"120\" pivotMethod=\"Crown\" /&gt; &lt;RuntimeVariables&gt; &lt;RuntimeVariable name=\"S Curves\" type=\"boolean\" value=\"True\" overRideInternalOptionVariable=\"lengthsAreTotalTransition\" description=\"Only Runoff Length\" /&gt; &lt;/RuntimeVariables&gt; &lt;MaximumERateCalculations&gt; &lt;RateTable name=\"10%\"&gt; &lt;DesignSpeedRateTable speed=\"120\"&gt; &lt;RateEntry radius=\"7550\" eRate=\"NC\" /&gt; &lt;RateEntry radius=\"2950\" eRate=\"RC\" /&gt; &lt;RateEntry radius=\"2080\" eRate=\".03\" /&gt; &lt;RateEntry radius=\"1590\" eRate=\".04\" /&gt; &lt;RateEntry radius=\"1280\" eRate=\".05\" /&gt; &lt;RateEntry radius=\"1070\" eRate=\".06\" /&gt; &lt;RateEntry radius=\"910\" eRate=\".07\" /&gt; &lt;RateEntry radius=\"790\" eRate=\".08\" /&gt; &lt;RateEntry radius=\"680\" eRate=\".09\" /&gt; &lt;RateEntry radius=\"570\" eRate=\".1\" /&gt; &lt;/DesignSpeedRateTable&gt; &lt;/RateTable&gt;\t&lt;RateTable name=\"8%\"&gt; &lt;DesignSpeedRateTable speed=\"60\"&gt; &lt;RateEntry radius=\"1900\" eRate=\"NC\" /&gt; &lt;RateEntry radius=\"870\" eRate=\"RC\" /&gt; &lt;RateEntry radius=\"590\" eRate=\".03\" /&gt; &lt;RateEntry radius=\"430\" eRate=\".04\" /&gt; &lt;RateEntry radius=\"320\" eRate=\".05\" /&gt; &lt;RateEntry radius=\"240\" eRate=\".06\" /&gt; &lt;RateEntry radius=\"170\" eRate=\".07\" /&gt; &lt;RateEntry radius=\"125\" eRate=\".08\" /&gt; &lt;/DesignSpeedRateTable&gt; &lt;/RateTable&gt; &lt;RateEquation name=\"120mkph 10% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"120mkph 10% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"570\" outputValue=\"0.1\" /&gt; &lt;TableEntry inputValue=\"680\" outputValue=\"0.09\" /&gt; &lt;TableEntry inputValue=\"790\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"910\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"1070\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"1280\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1590\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"2080\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2950\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 7550 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"120\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"120mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"120mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"650\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"790\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"980\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"1190\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1500\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1990\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2860\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 7550 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"120\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"120mkph 6% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"120mkph 6% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"710\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"970\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1340\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1840\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2730\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 7550 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"120\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"120mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"120mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"810\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"1070\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1410\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1910\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2780\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 7550 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"120\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"100mkph 10% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"100mkph 10% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"360\" outputValue=\"0.1\" /&gt; &lt;TableEntry inputValue=\"450\" outputValue=\"0.09\" /&gt; &lt;TableEntry inputValue=\"540\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"640\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"760\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"920\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1160\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1520\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2180\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 5250 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"100\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"100mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"100mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"400\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"530\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"690\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"860\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1100\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1480\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2150\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 5250 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"100\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"100mkph 6% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"100mkph 6% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"440\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"630\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"920\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1320\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2000\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 5250 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"100\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"100mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"100mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"565\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"770\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"1040\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1410\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"2090\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 5250 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"100\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"80mkph 10% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"80mkph 10% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"220\" outputValue=\"0.1\" /&gt; &lt;TableEntry inputValue=\"280\" outputValue=\"0.09\" /&gt; &lt;TableEntry inputValue=\"340\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"410\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"500\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"610\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"770\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"1020\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"1460\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 3350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"80\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"80mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"80mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"250\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"320\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"420\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"550\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"710\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"960\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"1410\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 3350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"80\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"80mkph 6% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"80mkph 6% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"270\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"400\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"600\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"890\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"1360\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 3350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"80\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"80mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"80mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"360\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"490\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"680\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"940\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"1390\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 3350 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"80\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph 10% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph 10% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"115\" outputValue=\"0.1\" /&gt; &lt;TableEntry inputValue=\"150\" outputValue=\"0.09\" /&gt; &lt;TableEntry inputValue=\"190\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"240\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"290\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"360\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"470\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"620\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"900\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1900 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"125\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"170\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"240\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"320\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"430\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"590\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"870\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1900 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph 6% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph 6% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"135\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"200\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"320\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"500\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"800\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1900 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph 4% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph 4% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"150\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"270\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"610\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1900 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"60mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"60mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"205\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"290\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"410\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"570\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"860\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 1900 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"60\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"55\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"160\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"220\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"310\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"470\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 800 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph 6% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph 6% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"150\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"250\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"410\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 800 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph 4% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph 4% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"70\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"130\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"330\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 800 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph 2% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph 2% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"75\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 800 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"40mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"40mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"130\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"190\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"280\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"430\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 800 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"40\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"170\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"250\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 450 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph 6% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph 6% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"35\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"50\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"140\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"230\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 450 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph 4% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph 4% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"35\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"150\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 450 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph 2% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph 2% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 450 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"30mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"30mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"55\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"180\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"270\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 450 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"30\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph 8% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph 8% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"15\" outputValue=\"0.08\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.07\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"50\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"70\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"90\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"140\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 200 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph 6% Max\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph 6% Max\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"15\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"70\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"110\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 200 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph 4% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph 4% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"15\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"70\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 200 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph 2% Max \" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph 2% Max \"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"20\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 200 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;RateEquation name=\"20mkph snow and frost\" equation=\"eRate\"&gt; &lt;Variable name=\"SupRate\" description=\"20mkph snow and frost\"&gt; &lt;Table inputVariableName=\"R\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"25\" outputValue=\"0.06\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.05\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.04\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.03\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.02\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"R\" equation=\"abs(Radius)\" description=\"R\" /&gt; &lt;Variable name=\"eRate\" equation=\"if( R&amp;lt; 200 ) ? SupRate:InitialCrossSlope\" description=\"eRate\" /&gt; &lt;Speeds&gt; &lt;Speed speed=\"20\" /&gt; &lt;/Speeds&gt; &lt;/RateEquation&gt; &lt;/MaximumERateCalculations&gt; &lt;TransitionCalculations&gt; &lt;TransitionEquation name=\"JTG center\" equation=\"if( InitialTransitionLength &amp;lt;=10?10: ceiling( InitialTransitionLength / 5) * 5)\"&gt; &lt;Variable name=\"InitialTransitionLength\" equation=\"(WidthLane*NRotatedLanes)*(MaxE-InitialCrossSlope)/gradient\" description=\"Calculated transition length\" /&gt; &lt;Variable name=\"gradient\" description=\"Delta G (%) from JTG Table 7.5.4\"&gt; &lt;Table inputVariableName=\"speed\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"20\" outputValue=\"0.01\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.008\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.006666667\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.005714286\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.005\" /&gt; &lt;TableEntry inputValue=\"100\" outputValue=\"0.004444444\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.004\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"TransitionLength\" equation=\"if( InitialTransitionLength &amp;lt;=10?10: ceiling( InitialTransitionLength / 5) * 5)\" /&gt; &lt;/TransitionEquation&gt; &lt;TransitionEquation name=\"JTG edge\" equation=\"TransitionLength\"&gt; &lt;Variable name=\"gradient\" description=\"Delta G (%) from JTG Table 7.5.4\"&gt; &lt;Table inputVariableName=\"speed\" interpolationType=\"useLowerBound\"&gt; &lt;TableEntry inputValue=\"20\" outputValue=\"0.02\" /&gt; &lt;TableEntry inputValue=\"30\" outputValue=\"0.013333333\" /&gt; &lt;TableEntry inputValue=\"40\" outputValue=\"0.01\" /&gt; &lt;TableEntry inputValue=\"60\" outputValue=\"0.008\" /&gt; &lt;TableEntry inputValue=\"80\" outputValue=\"0.006666667\" /&gt; &lt;TableEntry inputValue=\"100\" outputValue=\"0.005714286\" /&gt; &lt;TableEntry inputValue=\"120\" outputValue=\"0.005\" /&gt; &lt;/Table&gt; &lt;/Variable&gt; &lt;Variable name=\"InitialTransitionLength\" equation=\"(WidthLane*NRotatedLanes)*(MaxE-InitialCrossSlope)/gradient\" description=\"Calculated transition length\" /&gt; &lt;Variable name=\"TransitionLength\" equation=\"if( InitialTransitionLength &amp;lt;=10?10: ceiling( InitialTransitionLength / 5) * 5)\" /&gt; &lt;/TransitionEquation&gt; &lt;/TransitionCalculations&gt; &lt;TransitionOptions interpolateTables=\"false\" percentTransitionOnTangent=\"0.6\" useSpiralLength=\"true\" lengthsAreTotalTransition=\"true\" transitionType=\"Linear\" nonLinearCurveLength=\"0\" startInsideLaneRotationWithOutside=\"false\" /&gt; &lt;RunoutOptions isFixedLength=\"false\" length=\"0\" /&gt; &lt;CustomKeyStations&gt; &lt;Variable name=\"FivePercentStation\" equation=\" ReverseCrownStation * 2 + ReverseCrownStation / 2\" /&gt; &lt;CustomKeyStation type=\"Custom\" equation=\"FivePercentStation\" crossSlopeEquation=\"0.05\" /&gt; &lt;/CustomKeyStations&gt; &lt;TransitionOverlapOptions&gt; &lt;ReverseCurveAdjustmentOption adjustmentType=\"PlanarTransition\" minimumTransitionGap=\"0\" /&gt; &lt;CurveCurveAdjustmentOption adjustmentType=\"PlanarTransition\" minimumTransitionGap=\"0\" /&gt; &lt;/TransitionOverlapOptions&gt;&lt;/OpenRoadsSuperelevation&gt;" }, { "title": "MicroStaton键入脚本key-in命令批量绘点、线、文本", "url": "/posts/mstn-script-keyin-draw-points-lines-texts/", "categories": "MicroStation, 键入", "tags": "脚本, key-in", "date": "2022-09-27 13:32:00 +0800", "snippet": " 1、点 2、线 3、文本可以将一批键入命令写入脚本文件里（纯文本文件），然后在“键入命令”窗口中，键入 @&lt;script_file&gt;。script_file 必须包括脚本文件的完整路径和文件名。最简单的软件应用程序是键入命令脚本。键入命令脚本是存储在文本文件中的一系列键入命令。例如，以下脚本设置激活层、激活颜色和激活线宽：active level Level 3active color blueactive weight 21、点place point;XY=388218.835,1566315.816;place point;XY=388219.911,1566320.28;place point;XY=388216.28,1566320.868;place point;XY=388215.36,1566316.473;place point;XY=388211.706,1566317.245;place point;XY=388212.713,1566321.593;以上格式即可以在key-in里输入也可以存为point.txt后以＠f:\\point.txt脚本执行。2、线在key-in里用以下格式：place smartline;xy=388218.835,1566315.816;place smartline;xy=388219.911,1566320.28;place smartline;xy=388216.28,1566320.868;place smartline;xy=388215.36,1566316.473;place smartline;xy=388211.706,1566317.245;place smartline;xy=388212.713,1566321.593;若是要存为文本脚本则以下格式：place smartline;xy=388218.835,1566315.816;xy=388219.911,1566320.28;xy=388216.28,1566320.868;xy=388215.36,1566316.473;xy=388211.706,1566317.245;xy=388212.713,1566321.593;以上存为line.txt，在key-in里输入@f:\\line.txt执行即可。3、文本可以将以下代码写入f:盘下的text.txt：place text;SB1;xy=363756.733,3252942.92,616.6;SB2;xy=363871.568,3253480.798,616.6;SW1;xy=363739.821,3252863.705,616.6;SZ1;xy=363763.572,3252951.486,613.6;SZ2;xy=363806.619,3253000.903,590.9;a1;xy=363848.573,3253090.802,575;SZ3;xy=363906.624,3253215.191,553;SZ4;xy=363923.118,3253292.45,553;a2;xy=363905.412,3253357.029,575;SZ5;xy=363874.345,3253470.337,613.6;reset;" }, { "title": "OpenRoads公路(廊道)组件工程量及挖填方量统计计算", "url": "/posts/ord-road-component-volumes-earthwork-quantities/", "categories": "OpenRoads, 体积方量", "tags": "公路, 廊道, 工程量, 组件, 方量, 挖填方", "date": "2022-09-27 09:01:00 +0800", "snippet": " 廊道及组件方量统计：Corridors\\Review\\Corridor Reports，然后选择廊道（图一）；图一 动态显示横断面：Dynamic Sections 两期地形方量计算：如果计算廊道需先使用Terrain\\Additional Methods\\Create Corridor Alternate Surfaces创建廊道模型地形（图二），然后使用Terrain\\Analyze Volume计算两期地形方量（图三） 图二图三 创建挖填方量体积模型：Home\\Model Analysis and Reporting\\Civil Analysis\\Create Cut and Fill Volume（图四）；图四 断面法土方计算： 放置命名边界（图五）图五 选择路线中心，输入起、止点（图六）图六 生成的命名边界如（图七）图七 返回Home，执行Civil Analysis\\End Area Volumes Report（图八）图八 生成的方量报表如（图九）图九 41 - OpenRoads Designer Earthwork Quantities in OpenRoads Designer_1080p.mp4" }, { "title": "OpenRoads中将CASS格式文本坐标数据导入测量手簿", "url": "/posts/ord-survey-fields-book-import-cass-points/", "categories": "OpenRoads, 测量数据", "tags": "坐标, 手簿", "date": "2022-09-27 08:35:00 +0800", "snippet": "OpenRoads中将CASS格式文本测量地形数据导入测量手簿的步骤： 打开资源管理器，找到Survey，在Field Books点右建新建一手簿， 在新建的手簿上点右键，导入、文本导入向导，按提示完成即可。" }, { "title": "OpenRoads地形模型添加(增补)地形点", "url": "/posts/ord-terrain-add-points/", "categories": "OpenRoads, 地形模型", "tags": "地形, 地形点", "date": "2022-09-27 08:30:00 +0800", "snippet": "创建三维点，将创建的点对象添加到现有地形模型。在ORD建模工作流： 地形、分析、点、分析点，在需要添加点的位置读出地模的高程（图1）；图1 几何、平面、点添加高程点，特征设为地形随机点、高程点（图2、3）；图2图3 地形、编辑、特征编辑、添加特征（图4），将点添加进选中的地形模型，先选择地模，再选择需要添加进地模的点，按右键结束选择（图5），按左键确认添加完成（图6）。图4图5图6" }, { "title": "OpenRoads从地形模型提取等高线", "url": "/posts/ord-terrain-extract-level-lines/", "categories": "OpenRoads, 地形模型", "tags": "等高线, key-in", "date": "2022-09-27 08:25:00 +0800", "snippet": " 水平剖切法 STM地形模型法OpenRoads国际版没有单根等高线提取功能，中国本地化版增强功能中可以提取指定高程的等高线。若要在OpenRoads中从地形模型提取等高线，可以使用以下方法：水平剖切法ORD中提取等高线的最简便方法是水平剖切，剖切时先创建一水平面对象，使用对象剖切，勾选无限平面选项：STM地形模型法ORD地形模型不能直接提取等高线，要提取等高线必须借助STM地形模型，方法与步骤： 按一般地形模型创建地形模型，2D种子，用地形数据创建地模型，编辑修改，调整好三角形； 将一般地形模型导出为DTM文件； 新建并打开一空白ORD文件，种子必须使用3D（STM必须在3D中创建）； 打开STM管理对话框：stm stmmanagerdlg dialog open； STM对话框内新建一STM文件，在弹出的属性设置对话框内设置必要参数，点击确定保存； 在STM高程源编辑器中添加高程数据，可以选文本格式数据文件，也可选DTM格式数据； 添加高程数据后点击工具栏最右侧的创建按钮生成STM； 在顶视图绘一多边形框住STM； 使用STM管理器对话框的编辑菜单，提取等高线子菜单命令，提取出STM的等高线； 卸载掉STM； 提取的等高线是一个整体，将其Drop分解即可。 STM提取的等高线是折线，与C3D提取的等高线一致。" }, { "title": "OpenRoads模板多级边坡的实现方法", "url": "/posts/ord-multi-slope-template-methods/", "categories": "OpenRoads, 断面模板", "tags": "断面, 模板, 边坡", "date": "2022-09-27 08:20:00 +0800", "snippet": " 新建一个末端条件，从坡脚至第一级马道内侧（3个点）； 按边坡坡比及马道宽设置各点约束条件； 给该一级边坡组件命名； 双击一级边坡组件。选中“工作台计数”（Benching Count）实现组件迭代来完成多级边坡，数值为0表示迭代至地模，也可以估计出最高迭代级数，比如10级边坡就设为10，表示最高迭代到10级边坡； 点击无数据按钮可设置迭代条件：" }, { "title": "OpenRoads计算工程量(挖填方量)的三种方法", "url": "/posts/ord-earthwork-quantities-3-methods/", "categories": "OpenRoads, 体积方量", "tags": "挖填方, 工程量, 方量", "date": "2022-09-26 20:56:00 +0800", "snippet": " 1、廊道挖填方量报表 2、廊道地形模型、激活地形模型挖填体积分析 3、平行断面法报表1、廊道挖填方量报表对于已存在的廊道，生成廊道方量报表步骤：ORD-Modeling▶Corridor▶Review▶Corridor Reports，选择廊道，生成部件体积报表，表中包含挖、填方量。使用Dynamic Sections动态查看横断面，视图属性中打开挖填图形、挖填方量值显示：2、廊道地形模型、激活地形模型挖填体积分析 由廊道创建对应地形模型：ORD-Modeling▶Terrain▶Create▶Additional Methods▶Create Corridor Alternate Surface，选中廊道，生成廊道对应地形模型； 两期地形计算方量：ORD-Modeling▶Terrain▶Analysis▶Volumes▶Analyze Volume，选择Terrain Model To Terrain Model Volume方式，按提示指定两期模型，结果放置在指定位置。存在两期地形的情况下也可以使用ORD-Modeling▶Analysis▶Volumes▶Create Cut Fill Volumes生成挖、填体积块。注意其中一期地形必须为Exsisting类型。3、平行断面法报表 创建挖、填体积块：ORD-Modeling▶Home▶Model Analysis and Reporting▶Civil Analysis▶Create Cut Fill Volumes（ORD-Modeling▶Analysis▶Volumes▶Create Cut Fill Volumes），在存在两期地形模型时可以生成挖填体积块，在存在廊道和现有地形模型的情况应该也可以直接生成体积块，是否需要先由廊道生成对应地形模型尚待验证。 放置命名边界（平行横断面法必须先放置命名边界）：ORD-Modeling▶Drawing Production▶Named Boundaries▶Place Named Boundary放置横断面命名边界（Place Named Boundary Civil Cross Section），按提示指定范围。 横断面工程量报表：ORD-Modeling▶Home▶Model Analysis and Reporting▶Civil Analysis▶End Area Volumes Report生成横断面工程量报表。上述三种方法计算统计挖、填工程量数值差异不大，可相互对照验证。Earthwork Quantities in OpenRoads Designer" }, { "title": "OpenRoads两期工程量(挖填)方量计算", "url": "/posts/ord-Cut-and-Fill-by-Named-Boundaries-two-mesh-volumes/", "categories": "OpenRoads, 体积方量", "tags": "挖填方, 工程量, 方量", "date": "2022-09-26 20:56:00 +0800", "snippet": " 分别生成各期地形，由Create Terrain Model From Ascii File展点； 其中至少一期地形特征设为Existing组特征 创建挖填体积（Terrain\\Analysis\\Create Cut Fill Volumes或Home\\Model Analysis and Reporting\\Civil Analysis\\Create Cut Fill Volumes）； 查看挖填方量报表（Home\\Model Analysis and Reporting\\Civil Analysis\\Quantities Report By Names Boundary）,直接点击确定，命名边界选无； 也可直接在分析地形模型的体型（Terrain\\Analysis\\Analyze Volume）,选地模至地模方式。 如果想划定区域计算方量，则可以用两点方式添加命名边界（Drawing Production\\Named Boundaries），再统计命名边界体积报表：创建挖填方体后可以直接查询体积块网格的体积属性，也可以使用Home\\Model Anaslysis and Reporting\\Civil Analysis\\Quantities Report By Named Boundary即命名边界工程量报表，提示选择命名边界时，选择None（无）即可。生成的报告中含挖填方量。工具位于：Home\\Model Anaslysis and Reporting\\Civil Analysis\\Quantities Report By Named Boundary模型中必须存在填挖方体。create cut fill volumesCut and Fill by Named Boundaries单个廊道：3_根据命名边界出工程量表 (bentley-learn.com)多个廊道：4_多个廊道工程量 (bentley-learn.com)创建填挖方体_1_Existing Design Subgrade None创建填挖方体_2_非适用性材料创建填挖方体_3_回填创建填挖方体_4_超挖创建填挖方体_5_地层（土石方、土石分界、土方、石方）Earthwork Quantities in OpenRoads DesignerEarthwork Quantities in OpenRoads Designer_哔哩哔哩_bilibiliSession 6 - Computing Earthwork and Generating ReportsModule 5 - Advanced 3D Volumes &amp; EarthworkModule 3 - 3D Volumes &amp; Earthwork" }, { "title": "OpenRoads特征定义", "url": "/posts/ord-Feature-Definitions-custom/", "categories": "OpenRoads, 土木规则", "tags": "OpenRoads, 特征", "date": "2022-09-21 08:44:00 +0800", "snippet": "修改、创建特征定义在Explorer中实现，可以打开对应的.dgnlib进行修改以实现环境设置。在浏览器中的标准栏内进行特征、符号、标注样式定义：1、在Feature Definitions里进行特征定义：在特征的属性列表中查找特征符号项：2、在特征符号栏对特征使用的符号进行设置：查看其属性列表：可对其使用的元素模板、线条文本标样式进行设置(Annotation Group)。3、在Annotation Groups可对特征符号中使用的线条、文本标样式格式进行修改：点击Annotation List右侧的三点按钮，在对现的格式设置对话框中进行样式调整：" }, { "title": "OpenRoads道路模板参数修改", "url": "/posts/ord-corridor-modify-settings/", "categories": "OpenRoads, 断面模板", "tags": "OpenRoads, 模板, 廊道, 道路, 参数", "date": "2022-09-21 08:35:00 +0800", "snippet": "创建廊道后除了可以在模板中修改约束参数的值外，还以在廊道、模板修改工具中对使用的模板在一定桩号范围内进行值调整：使用以下命令修改项：在如下对话框内选择约束变量及相应范围，Start、Stop的值对应的是起始桩号对应的变量值：对廊道的所有约束参数修改都可以在上图这个水桶样图标中进行设置修改。" }, { "title": "MicroStation将两个SmartSurface的交集构成实体", "url": "/posts/mstn-two-smartsurface-trim-to-solid/", "categories": "MicroStation, 曲面", "tags": "曲面, 实体, MicroStation", "date": "2022-09-20 08:17:00 +0800", "snippet": "1、对两个SmartSurface执行Trim Surfaces操作选项如下设置：操作的结果是，两个SmartSurface相互剪切，保留了相交的部分。但此时仍然是SmartSurface。注意Flip 1st和Flip 2nd一定要勾选！2、执行Stitch Surfaces工具则两个面构成了一个体。" }, { "title": "MicroStation求两个曲面间的交线", "url": "/posts/mstn-surface-SurfaceIntersection/", "categories": "MicroStation, 曲面", "tags": "曲面, 交线, MicroStation", "date": "2022-09-20 08:01:00 +0800", "snippet": "【软件名称】：MicroStation【软件版本】：CONNECT Edition 10.16.02.34【用户需求】：请大家先下载如下DGN文件查看其中的图形。它含有两个网格面，目前我们想要获得这两个面的交线。SurfaceIntersection.dgn【解决思路】：首先想到的第一个工具可能是Mesh Intersect但测试后发现该工具仅能将最终的曲线嵌入到平面上成为一体。达不到我们的目的。其次想到的工具可能会是Surface下的Compute Surface Intersections该工具确实能求得一般两个面的交线，但对于该图形操作失败。后来发现是这两个面比较大，超过了500m的SWA（实体工作范围）的限制。用缩放工具将这两个面缩小100倍后就可以得到交线了。然后再将交线放大100倍，移动会原来的位置。这是一个变通的手段，最终是能达到目的但操作太繁琐。最后发现工具Planar Slice最合适。启动该工具后直接选那个平面，就能得到交线了。更神奇的是，该工具的名称虽然叫做Planar Slice（平面切分），但它还支持非平面的切分，这一点提请大家注意。所以说，MS中的三维工具有太多的Trick，需要我们不断摸索总结。" }, { "title": "MicroStation三维模型输出至GoogleEarth谷歌地球", "url": "/posts/mstn-3d-model-to-google-earth/", "categories": "MicroStation, 基础", "tags": "MicroStation, 三维模型, Google, 坐标系", "date": "2022-09-19 00:00:00 +0800", "snippet": "将MicroStation三维模型设置正确的地理坐标系后导出为交换格式后导入到GoogleEarth实现三维卫星地图上展示建筑模型的方法。 将三维模型文件备份为新文件并整理，如将参考合并，清除多余的线、文字等无用对象； 进入顶视图，将所有对象向右平移（宁蓄41000000），为东坐标添加投影带号； Drawing工作流、Utilities、Geographic、Coordinates System定义投影参数（投影、西安80、3度、41带）； Drawing工作流、Utilities、Geographic、Google Earth Setting作如下设置：格式为KML and Collada、Altitude为Absolute Drawing工作流、Utilities、Geographic、Export Google Earth File导出KMZ文件； 打开Google地球（桌面、网页版）添加新项目打开输出的KMZ文件 如果位置有偏，在MS里进行适当调整重新导出KMZ再导入GoogleEarth，反复操作直至目视位置合理为止，如果能在卫星地图上找到图上相同的参考点，可根据参考点进行纠偏。" }, { "title": "AutoCAD Civil 3D道路三要素", "url": "/posts/c3d-road-modeling-essential/", "categories": "Civil3D, 道路", "tags": "道路, 廊道, 平面几何, 纵剖几何, 横断面, 装配", "date": "2022-09-18 00:00:00 +0800", "snippet": "今天给大家讲一下在civil3d中如何创建道路模型，以及在创建道路模型时需要注意的一些事项。在civil3d中创建道路模型叫做Create Corridor，这里的Corridor泛指一切带状的对象，除了道路，也可以是渠道、隧道、防洪堤，也可以是大坝，尽量发挥你的想象吧。那么创建一个道路模型需要准备三个对象（道路创建的三要素）：一个是平面路线（Alignment）用于控制平面的走向，一个是纵断面对象（profile）用于控制竖向的起伏，一个是横断面对象也就是装配（Assembly）用户控制横截面的结构形式。好了，有了这三样对象（前面几节已经讲过），我们就可以创建一个道路模型了，注意这是一个道路模型，之所以称之为道路模型是因为这个模型本身具有很多有用的数据，比如她可以生成横断面图、生成曲面计算填挖方量、提取边界等。下面我们就在前面几节的基础上进行工作，创建一个简单的渠道模型。首先点击【道路】弹出【创建道路】对话框，在名称栏中起一个有意义的名字，最好以“模型”结尾，比如“渠道模型”、“1#隧道模型”，以后大家就知道这样做的好处了。点击确定后会弹出如下左边的对话框，【设定所有目标】这个比较重要，当你修改横断面部件时，比如添加部件时需要点击该按钮查看所设定的逻辑目标是否正确，关于这个逻辑目标我会在后面单独会讲一下。点击确定后即可创建道路模型，选择道路模型，右键进行三维查看如下。这里有一点需要注意了，如果创建的道路模型如下，那么很有可能就是纵断面出现了问题，这时我们找到纵断面图的末端处，发现设计纵断面的末端和地形纵断面的末端桩号（也就是知道没图的末端桩号）没有重合，那么将设计纵断面的末端点移动到纵断面图的末端桩号即可，也可以将设计纵断面的末端端点和地形纵断面的末端端点重合，然后右键进行重新生成一下就好了。由于时间有限，在下一节中我会将条件部件在道路模型中的表现和有关道路的挖填方量计算一并讲了。转载自：[沙漠骆驼]（https://www.cnblogs.com/whlkx/）" }, { "title": "AutoCAD Civil 3D有关道路的逻辑目标", "url": "/posts/c3d-road-logic-target/", "categories": "Civil3D, 道路", "tags": "道路, 模型, 部件, 装配, 曲面", "date": "2022-09-18 00:00:00 +0800", "snippet": " 曲面目标 宽度目标 高程逻辑目标今天给大家讲一下道路中逻辑目标，这个比较有用。刚开始接触这个概念时估计有点不太好理解，需要经过多次的尝试后才会掌握它。右键道路模型，打开道路特性对话框，点击【参数】面板，点击【设定所有目标】，打开【目标映射】对话框，在该对话框中你可以发现逻辑目标有三种：曲面目标、宽度目标、高程目标。下面我们就开始吧，看看逻辑目标是怎么运行的。曲面目标主要是条件部件和指向曲面的连接坡度部件进行搜寻的目标，如下草图。宽度目标主要用于控制宽度方向，部件使用逻辑目标的宽度数据，不使用部件本身所设定的宽度。结合平面路线使用，当某段平面路线在宽度方向需要加宽时就可以使用宽度目标了。下面给如下图的连接宽度和宽度部件添加一个宽度目标按下图步骤所示，将宽度目标（一个多段线）添加到部件中。使用宽度逻辑目标后对比如下：高程逻辑目标主要用于控制高程方向，也就是使用逻辑目标对象的高程数据，而不使用部件本身设定的高度。首先在纵断面图中创建一个纵断面对象如下图：然后按下图步骤将纵断面对象添加到高程逻辑目标中：使用高程逻辑目标后对比如下，左侧为没有使用高程逻辑目标，右侧为使用了高程逻辑目标。好了，今天就讲这么多了，大家一定要自己动手多做几次，然后慢慢体会它的妙处。此外逻辑目标还有很深的用处，我也在探索之中，如果大家有用的好的话，也可以留言分享一下哦。转载自：[沙漠骆驼]（https://www.cnblogs.com/whlkx/）" }, { "title": "AutoCAD Civil 3D道路的挖填方量计算及条件部件", "url": "/posts/c3d-road-earthwork/", "categories": "Civil3D, 道路", "tags": "道路, 方量, 部件, 装配, 挖填方", "date": "2022-09-18 00:00:00 +0800", "snippet": " 条件部件 道路的填挖方计算上一节中讲了道路创建的三要素：平面路线（Alignment）、纵断面（Profile）、横断面（Assembly），今天就讲一下条件部件在道路模型中的表现以及道路的挖填方计算。条件部件首先创建一个简单的条件部件如下图，实现的功能就是：填方时：当填方高度小于5m时，直接一坡到地面；当填方高度大于5m时，会出现一级平台，然后再一坡到地面；挖方时：当挖方高度小于5m时，直接一坡到地面；当挖方高度大于5m时，会出现一级平台，然后再一坡到地面。根据上节的步骤进行创建道路模型，见下图所示，仔细观察条件部件在道路模型中的表现。道路的填挖方计算假定道路模型已经创建完成，本例中使用的横断面见下图：若要进行道路的填挖方计算，首先要创建道路曲面，然后再创建采样线（sampleLine），civil3d根据采样线进行填挖方计算。右键道路模型【特性】调出道路模型特性对话框，在这里根据道路模型创建道路曲面。操作顺序见下图。最后点击确定即可创建道路曲面，这时【曲面】下面会包含类似于下图所示的曲面对象。下面创建采样线，在【常用】选项卡中点击【采样线】如下图：随后屏幕会出现一个拾取框，这时按一下空格键，会弹出从列表选择路线对话框，然后选择要采样的路线，点击确定，弹出【创建采样线编组】对话框，设置如下：点击确定后，【采样线工具】条被激活，如下图：点击【按桩号范围…】进行创建采样线：点击后弹出如下对话框，设置如下，需要注意的是采样线的宽度，当道路模型比较宽时，采样线也要设置的宽一些。点击确定按钮，同时关闭【采样线工具】条。创建的采样线如下图，这时注意左侧的目录树中的【路线】–【路线中线】–“道路中心线”–【采样线编组】下会显示刚刚创建的采样线编组，在这就可以看出采样线是路线下的子对象，采样线依附于路线，也就是说路线是采样线的容器。一个路线下面可以同时创建多个独立的采样线编组。最后一步就是计算填挖方量（在civil中叫计算材质ComputeMaterials）首先拾取任意一个前面创建的采样线，菜单面板中会自动显示更采样线有关的操作，如下图：点击【计算材质】命令后，跳出如下临时对话框，选择路线及采样线编组点击确定后，跳出【计算材质】对话框，设置如下，需要注意的是自然地面使用地形曲面，设计曲面使用道路模型生成的曲面。点击确定后，程序就会按照采样线设定的桩号间距根据平均断面面积进行计算，计算完成后采样线仍然处于选中状态，暂时不要按ESC键。点击上图中左侧的【添加表】—【总体积】命令，弹出如下对话框：最后单击确定按钮，在空白处插入总体积表，如下：到此填挖方计算的基本步骤已经讲完，这个过程需要多次使用，才能体会其中的细节。还有就是上面的总体积表的显示样式也是可以定制的，有兴趣的可以先摸索一下，后面也会有介绍的。谢谢，祝大家开心。转载自：[沙漠骆驼]（https://www.cnblogs.com/whlkx/）" }, { "title": "OpenRoads Designer端面积法（平行断面法）方量计算步骤", "url": "/posts/ord-end-area-volume/", "categories": "OpenRoads, 体积方量", "tags": "OpenRoads, 方量, 体积, 端面积法, 断面, 命名边界, 报表", "date": "2022-09-17 00:00:00 +0800", "snippet": " place named boundary; create cut fill volumes; end area volumes report.XS End Area Volume ORD" }, { "title": "OpenRoads Designer设计模型与现有地形创建三维挖填方体计算方量", "url": "/posts/ord-design-model-3d-volume-solid/", "categories": "OpenRoads, 体积方量", "tags": "MicroStation, OpenRoads, 方量, 挖填方", "date": "2022-09-13 00:00:00 +0800", "snippet": "OpenRoads中使用MicroStation创建的设计模型网格赋于特征与地形模型创建挖填三维方体进行挖填方工程量的计算。 3D Volumes &amp; Earthwork Overview Earthwork quantities are now calculated from 3D mesh elements. You no longer need to create a set of cross sections to get cut and fill volumes. Earthwork quantities are now truly 3D. The Create Cut Fill Volumes tool creates a 3D mesh element for cut and a 3D mesh element for fill. These meshes can then be used to extract earthwork quantities and reports directly from the 3D Model.3D cut/fill meshes can be created from terrains, corridors, linear templates, civil cells or any 3D mesh element that has a civil feature definition.The software scans the DGN file for Feature Definitions that represent Existing and Design elements. For Design elements a bottom mesh is automatically formulated (in memory) and is used to compare to the existing elements (typically an existing ground terrain). The result of this process is 3D cutfill mesh elements that represent cut and fill volumes.对于设计模型，在转换成网格并缝合成一个整体后，还需添加土木特征方可参与计算方量： 新建一ORD文件，种子为2D； 创建原始地形（或其它地形），类型为Exsisting类型； 创建地形后会自动添加3D模型，转到3D模型内； 将设计模型网格参考、合并进3D模型； 添加土木特征：ORD-Modeling、Geometry、General Tools、Standards、Set Feature Definition，选中设计模型网格，类型选Mesh，特征可选列表中任意一种即可； 使用Create Cut Fill Volumes工具，创建3D挖填方量，按提示完成即可； 创建3D体积块后，除了可以查询体积块的体积属性外，还可以使用命名边界工程量报表工具生成报表，在提示选择命名边界时，选无确定即可。 视频名称：Module 3 - 3D Volumes &amp; Earthwork" }, { "title": "ORD 3D线段放坡到地形模型创建坡脚线", "url": "/posts/ord-3d-line-slope/", "categories": "OpenRoads, 地形模型", "tags": "OpenRoads, 地形模型, 放坡", "date": "2022-09-13 00:00:00 +0800", "snippet": "在渣料挖填平衡中，填筑场地指定高程平台按1：2放坡到原始地形，首先按高程平台外口线平衡复制改变其高程设置1：2边坡坡脚的方式创建的指定高程平台地模边坡底部超出原始地形，无法裁剪，改变坡脚线创建方式为3D放坡至地模生成1：2坡脚，然后按范围线、坡顶边、放坡至地模创建的坡脚线按元素创建地模，效果理想。三维元素放坡至地模操作步骤及注意事项： 三维元素放坡操作需同间打开平面、3D视图（视图右键菜单，选Plan/3D视图）； 在平面视图内在坡顶线上创建一水平几何线段，特征选线性中任意一种； 对该几何线段创建纵断面，选中该线段，在弹出菜单上选纵断面，指定视图，用纵断面绘图工具绘制指定高程的水平纵断面线； 在创建纵断面时视图内会出现两条纵断面线，一条是由地模产生的纵断面线，另一条是自行创建的，需要将自行创建的纵断面线设为激活纵断面（关键） 使用三维元素放坡至目标创建坡脚线即可； 用范围等高线、坡顶线、坡脚线创建地模； 根据需要对边界线外的三角形进行删除。" }, { "title": "ORD剪切地形模型分区域两期计算挖填方量", "url": "/posts/clip-terrain-volume/", "categories": "OpenRoads, 地形模型", "tags": "OpenRoads, 地形模型, 剪切, 方量", "date": "2022-09-13 00:00:00 +0800", "snippet": " 一、分区的创建 二、地形 三、裁剪分区利用剪切地形对开挖区域进行分区然后计算各区域挖填方量极其方便，步骤如下：一、分区的创建 将各分区多边形建成一个设计文件； 如果分区多边形不封闭，可以使用Region泛填方式生成Shape，shape可以作为剪切地形时的边界对象使用； 将区域设计文件参考，并合并进地形文件；二、地形 生成用于计算方量的两期地形； 一般对位于上层的地形进行裁剪分区；三、裁剪分区 使用地形模型、创建、Additional Methods内的创建剪切地模型； 选择被剪切分区的地形模型、设置剪切方式为外部、指定新生成的地形模型的特征属性和名称，选择需要分区的区域对象（在区域内部点击选取即可）； 按提示完成操作即可； 新生成的剪切地形为被剪切地形的一个副本，并添加了边界属性； 若需修改新生成的分区地形的属性，直接在浏览器内选中分区地形的名称，修改属性即可，勿选择下部的原地形副本名称。四、方量计算 地形模块、Analysis区内的Volumes下的Analyze Vulume 按地形对地形方式计算选择区域内的方量即可：" }, { "title": "MicroStation两期地形网格创建三维挖填方体计算方量", "url": "/posts/mstn-volume-two-mesh/", "categories": "MicroStation, 网格", "tags": "MicroStation, 方量, Mesh", "date": "2022-09-12 00:00:00 +0800", "snippet": "本文简述MicroStation将两期地形生成地形网格按相交网格逻辑求交的方法创建挖填三维方体进行挖填工程量方量的计算。1、将地形点读入：Drawing&gt;Annotate&gt;Terrain Model&gt;Import Coordinates2、Modeling&gt;Mesh&gt;Create&gt;Mesh from Points生成网格3、适当删除边界上多余的小平面，并调整部分小平面边与实际相符；4、同上将另一期地形展点、并生成曲面放置于不同的层；5、使用拉伸网格体积块命令（建模&gt; 网格&gt; 创建&gt; 拉伸或增厚网格&gt; 拉伸网格体积块）制作两个相交的网格体积块，上面的地形网格向下拉伸，下面的地形网格向上位伸：6、使用网格相交工具（建模&gt; 网格&gt; 修改网格）由两相交网格体积块创建挖填体积块：7、查看属性中的体积数据就可得到挖填方量：8、以上网格体积块本身具有体积属性，也可将以上生成的网格体积块转换为实体（建模&gt; 实体&gt; 实体实用工具）：两期网格三维开挖方体效果见下图：使用此方法只适用较简单的地形网格，对于复杂的地形，需要使用OpenRoads Designer创建三维挖填方体。" }, { "title": "MicroStation料堆实体法方量计算", "url": "/posts/mstn-stockpile-volume-solid/", "categories": "MicroStation, 实体", "tags": "MicroStation, 方量", "date": "2022-09-12 00:00:00 +0800", "snippet": " C3D内展点、生成曲面，调整曲面 Output工具导出LandXML MS导入交换格式LandXML Drop成网格（以上步骤可参考网格法料堆方量计算中由地形点创建网格的过程） Mesh&gt;Mesh Utilities&gt;Extract Boundary提取边界 SurFace&gt;Surface Utilities&gt;Conver To Surface Home&gt;Groups&gt;Create Complex Shape将前面提取的边界生成Shape Surface&gt;Modify Surfaces&gt;Stitch Surface将网格曲面与底张缝合成一个曲面 将封闭曲面转换成实体，查询此实体体积即可：" }, { "title": "MicroStation料堆网格法方量计算", "url": "/posts/mstn-stockpile-volume-mesh/", "categories": "MicroStation, 网格", "tags": "MicroStation, 方量, Mesh", "date": "2022-09-12 00:00:00 +0800", "snippet": "1、将地形点读入：Drawing&gt;Annotate&gt;Terrain Model&gt;Import Coordinates2、Modeling&gt;Mesh&gt;Create&gt;Mesh from Points生成网格3、适当删除边界上多余的小平面，并调整部分小平面边与实际相符4、Modeling&gt;Mesh&gt;Mesh Utilities&gt;Extract Boundary提取网格边界（如前图中红色部分）5、提取的边界是线串，需将其转换成Complex Shape后才能使用Mesh From Element转换成网格6、使用Modify Meshes&gt;Stitch into Mesh将两个Mesh缝合成一个封闭的网格7、选中网格，查询属性即可得到体积数据" }, { "title": "MicroStation中如何通过键入命令旋转视图", "url": "/posts/mstn-rotate-view/", "categories": "MicroStation, 基础", "tags": "MicroStation, 视图, key-in", "date": "2022-09-10 00:00:00 +0800", "snippet": " 如何旋转视图与指定的直线垂直？ 键入命令将一个视图旋转到ISO视图如何旋转视图与指定的直线垂直？有两种方法实现该功能：【方法一】：键入命令rotate view element;%d;dx=0;rv=,90;dx=0选直线后确定即可。【方法二】：点击可视化任务下的“设置相机(Setup Camera)”命令，选视图，选线的起点和终点。最后记住要将视图属性对话框中的“相机”属性关闭。旋转前为顶视图：旋转后视图垂直于图中水平直线：在三维建模中绘垂直于轴线的截面极其方便。对于部分对象如果在旋转后视图方向不垂直于元素，则可以使用精确绘图的RX、RY或E快捷键旋转绘图小平面。使用以上键入命令旋转视图垂直于图中各元素：在垂直于各元素视图上绘制剖面结构线示例：键入命令将一个视图旋转到ISO视图 在键入命令区键入Rotate View Absolute -54.7356,0,45 用鼠标点击要旋转的视图以确定之。【解释】：Rotate View Absolute是基于标准的顶视图(Top View)来旋转的。命令后跟的三个值分别代表绕着X、Y和Z轴进行旋转的角度。" }, { "title": "MicroStation绘制路径放置LumenRT车辆", "url": "/posts/mstn-lumenrt-car-path/", "categories": "MicroStation, 渲染", "tags": "MicroStation, LumenRT, 车辆, 路径", "date": "2022-09-10 00:00:00 +0800", "snippet": " MicroStation使用LumenRT车辆 LumenRT单元库路径视频教程：LumenRT软件操作视频_哔哩哔哩_bilibiliMicroStation使用LumenRT车辆 在MS里绘制路径，样条曲、智能线等，将其设置为构造类型，并移到地面高程； 可视化工作流、动画模拟（Animate）、交通，创建车道、单车道或双车道； 点击1处的…挖钮： 点上图1处新建车辆集名称，在2处命令车辆集名称； 点上图3处加载LRT车辆单元： 在添加车辆对话框内点浏览按钮，找到交通工具单元库目录： 在打开的单元库里选择需要的车辆：注意如果要使车辆没路径行走，需将车辆旋转角设置为90度。 回到创建车道对话框、设置好参数，选择前面创建的路径即可： 选择路径和方向确定后如下完成车道添加在放置车辆后需在MicroStation里将车辆所在图层Vehicles关闭，否则会在LumenRT里同路径上存在停止不行走的车辆。添加路径和车辆前需要存在至少一个行驶平面。LumenRT单元库路径在MicroStation中使用的LumenRT单元库文件已保存备份在：\\华为云盘\\LumenRT\\MicroStation中使用的LRT资源 The install location for the LumenRT content cell libraries on my PC is C:\\ProgramData\\Bentley\\connectsharedcontent\\CellsForLumenRT Cell libraries include: Cars.cel Construction_Equipment.cel LRT_Buildings.cel LRT_Characters.cel LRT_Misc_Transporation.cel LRT_Plants.cel LRT_Rocks.cel Semi._Trucks.cel SUV &amp; PU Trucks.cel Vans and Buses.cel原文：Traffic Problem - Visualization Forum - Visualization - Bentley Communities" }, { "title": "MicroStation坐标标注（Label Coordinate）工具简介", "url": "/posts/mstn-label-point-tool/", "categories": "MicroStation, 基础", "tags": "MicroStation, 坐标, AccuDraw, key-in, 标注", "date": "2022-09-10 00:00:00 +0800", "snippet": "【工具简介】 对元素上的某个点进行对应坐标标注时，可以使用Label Coordinate工具。调用位置是MicroStation主菜单的Tools&gt;Dimensions&gt;XYZ Text&gt;Label Coordinate, 然后选择需要标注的点即可。 也可以直接输入Key-in命令：Label Point 来调用此工具 如果只想标注Z坐标值，则先输入Key-in命令：label hidexy on，然后再使用该工具，即可如下图所示只标注Z坐标的值。" }, { "title": "OpenRoads Designer道路设计建模超高横坡应用技巧", "url": "/posts/ord-superelevation/", "categories": "OpenRoads, 道路廊道", "tags": "OpenRoads, 道路, 超高", "date": "2022-09-07 00:00:00 +0800", "snippet": " 01 无中间带超高旋转轴 03 硬路肩、土路肩横坡 ORD超高应用工作流成 横断面设计 01 应用细节 02 创建横断面模板 创建超高 01 分别创建超高区间和超高车道 02 计算超高值 03 超高旋转形式 04 导入超高值 OpenRoads Designer（以下简称ORD）可以加快设计、生成智能三维模型从而实现以施工为驱动的工程设计、在整个项目团队中共享信息以及助力项目交付。通过ORD，可以实现涵盖道路、桥梁、铁路、岩土工程以及场地优化的通用建模环境。在应用ORD进行公路设计建模时，很多人对如何按照国内规范的要求进行超高横坡的计算、编辑和应用存在疑问，如超高旋转轴如何定义、超高数据如何编辑、硬路肩和土路肩的横坡如何跟随行车道变化等。笔者结合自身对规范及ORD软件的理解，将简单介绍如何用ORD进行超高应用。01 无中间带超高旋转轴➣新建工程宜采用绕内侧车道边缘旋转的方式；➣改建工程应采用绕路中线旋转的方式；➣路基外缘高程受限制或路容美观有特殊要求时，可采用绕外侧车道边缘旋转的方式。02 有中间带超高旋转轴（a）有中间带的公路均可采用绕中央分隔带边缘旋转的方式；（b）中间带宽度较小的公路还可采用绕中间带中心线旋转的方式；（c）车道数大于4条的公路可采用分别绕行车道中线旋转的方式。03 硬路肩、土路肩横坡根据规范规定，曲线路段内、外侧硬路肩横坡的横坡值及其方向： 当曲线超高小于或等于5%时，其横坡值和方向应与相邻车道相同； 当曲线超高大于5%时，其横坡值应不大于5%，且方向相同。土路肩的横坡： 位于直线路段或曲线路段内侧，且车道或硬路肩的横坡值大于或等于3%时，土路肩的横坡应与车道或硬路肩横坡值相同； 小于3%时，土路肩的横坡应比车道或硬路肩的横坡值大1%或2%。位于曲线路段外侧的土路肩横坡，应采用3%或4%的反向横坡值。ORD超高应用工作流成ORD可以实现高精度、精细化、参数化的道路设计，包含了所有的设计细节及设计参数，并可通过图形进行交互修改，真正实现了参数和设计图形的高度融合。应用横断面设计及超高应用工作流程横断面设计01 应用细节以一段高速公路为例介绍超高的应用细节。道路宽度26m,设计时速100km/h02 创建横断面模板a）超高标记制作横断面模板的时候，需要勾选路面的超高旋转轴和旋转点的超高标记，同时保持超高旋转轴和设计线高程一致。路面和边坡的细节可根据建模深度自行深化。b）硬路肩、土路肩设置规范中对硬路肩和土路肩的横坡极值有不同要求，通过对横断面模板编辑器中边坡“翻转值”的设置，可分别实现规范要求。如下图，右侧硬路肩横坡取值范围[-5%,5%]。如下图，当右侧参考坡度大于-4%时，土路肩横坡为-4%，当参考横坡创建超高01 分别创建超高区间和超高车道一般情况下，相同路幅形式和设计标准的区段创建一个超高区间，超高区间内超高形式和计算规则一致。02 计算超高值03 超高旋转形式分别对应不同超高旋转形式，超高计算成果可以在表格、超高车道图形破土或者超高视图中进行编辑调整。04 导入超高值也可以通过编辑超高数据文件，导入超高。 超高数据格式如下： 分配超高到廊道 查看横断面视图" }, { "title": "OpenRoads Designer练练自定义线型创建护栏", "url": "/posts/ord-custom-linestyle-guardrail/", "categories": "OpenRoads, 道路廊道", "tags": "OpenRoads, 线型, 标识标线", "date": "2022-09-07 00:00:00 +0800", "snippet": " ➢新建“护栏文件”—种子选择3D—创建护栏节点单元（或者导入外部节点单元） ➢线型-管理-线型编辑器 编辑—创建—笔划图案 编辑—创建—点 编辑—创建—复合 文件—导入—Microstation资源文件（RSC）—自定义护栏 传统护栏单元往往需要一个接一个手动定位摆放，而自定义线型即可一步成型，快速创建道路护栏，为设计人员带来极大的便利，极高地提升了出图效率。➢新建“护栏文件”—种子选择3D—创建护栏节点单元（或者导入外部节点单元）➢线型-管理-线型编辑器通过编辑—创建—笔划图案—点—复合，最终合成所需的自定义线型。编辑—创建—笔划图案笔划图案既是护栏之间的间隔，亦是自定义节点的间距，通过调节间距可以创建不同规格的护栏模型。编辑—创建—点点可以是护栏的立柱节点，也可以是护栏的一个标准段，通过创建不同的节点可以展现多种多样的护栏模型，使护栏外观更出色。编辑—创建—复合复合即将立柱节点和护栏间隔组合到一起，通过复合可以将不同的节点和间隔组合在一起，从而满足护栏的多样性、美观性。文件—导入—Microstation资源文件（RSC）—自定义护栏当新建一个项目时，需要先导入自主创建的自定义护栏文件夹；同时，也能将文件夹进行分享，实现资源共享，使建模更加便捷。完成以上步骤后，可以运用画线命令将线型修改为自定义护栏线型，从而实现快速创建道路护栏。通过自定义线型可以实现画线命令快速创建护栏，极大地提高了建模者的工作效率。并且，此方法可以运用于公路及市政项目，也为快速放置标线标牌提供了新思路。" }, { "title": "MicroStation快速水平剖切", "url": "/posts/mstn-horizontal-section-fast/", "categories": "MicroStation, 剖切", "tags": "MicroStation, 剖面, 断面, key-in", "date": "2022-09-05 00:00:00 +0800", "snippet": " 剖面对话框 水平剖切步骤： 注意事项剖面对话框使用Dialog Section键入命令打开剖面对话框进行剖切可以快速输出到新的设计文件。水平剖切步骤：1. 将模型置为顶视图；2. 绘出一个含三个点的直线折线对象（用于三点定位水平面）；3. 使用Set Elevation将定位对象设置为剖切高程；4. 使用Section By Plane进行剖切，捕捉定位对象上的三个端点，再在其它位置点左键确认完成剖切。1、将定位平面线对象设置为86高程2、打开Dialog Section对话框，打开或创建输出文件（新建必须用3D种子）3、使用平面剖切4、捕捉平面定位对象上的三个点，再按左键确定完成剖切注意事项• 对于复杂的模型，使用Project Element剖切或对象剖切可能都会有问题，此时可从断面布置线上绘一垂直的矩形，使用Element进行剖切成功，其它剖切方式可能都会出现杂乱对象。• 对于参考进来的模型，若模型对象是参数化对象，需转换为网格或曲面方可剖切出来。• 点击对象剖切命令后选择对象，点击左键两次完成剖切。" }, { "title": "OpenRoads Designer平面几何路线断链（长、短链）设置", "url": "/posts/ord-align-station-equation/", "categories": "OpenRoads, 平面几何", "tags": "OpenRoads, 断链, 长链, 短链, 平面几何, 路线", "date": "2022-09-03 00:00:00 +0800", "snippet": " 短链、长链 断链设置方式 断链输入技巧短链、长链短链：因改线线路变短，将实际桩号变大、长链：因改线变长，将实际桩号变小。断链设置方式用OpenRoads做道路建模的时候，遇到有短链和长链的时候，对于断链，可以在“几何图形”选项卡中的“修改”中通过设置断链来实现。添加断链时先输入后桩号（注意后桩号是以线路本身实际长度定位的，不是对前面已添加断链进行改正后的标示桩号，是线路距起点的实际距离，这也是ORD里设置断面时要输入距离的原因吧。可以根据标示桩号与断链尺寸进行计算，标示桩号减去前面的所有短链尺寸，加上所有长链尺寸就是当前点的实际线路点），前桩号是设计标示桩号（非实际线路长度）。在输入前桩号时，前桩号里必须含一个字母（不分大小写），用来区分后桩号。 断链 长度 桩号 BK7+590=BK7+592.578 短链：2.578 - BK8+584.158=BK8+595 短链：10.842 8581.580 BK10+102.754=BK10+120 短链：17.246 10089.334 例如：K100=K200，后桩号里输入100，前桩号输入A200.断链输入技巧1、输入断链时前桩号前面必须加一个字母又区分断链后面（线路前方）的桩号（因长链存在桩号重复），此断链后的桩号可以以此字母为前缀输入，前桩号的前缀字母不能重复；2、第一个断链前桩号加Ｋ：3、第二个断链的后桩号可以以K加第一断链后的桩号输入定位、第二个断链前桩号以B区分：4、第三个断链的后桩号以B为前缀输入：依此类推。" }, { "title": "OpenRoads Designer工作环境行业标准、公司和项目标准设置", "url": "/posts/ord-standards-workspace-setting/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 设置, 标准", "date": "2022-09-02 00:00:00 +0800", "snippet": " 1、行业层级标准（目录Organization-Civil内） 2、公司层级标准（目录WorkSpace内） 3、项目层级标准（WorkSet） 4、库文件、种子文件位置 5、自定义行业标准、公司标准及相关文件备份与恢复说明所在目录：C:\\ProgramData\\Bentley\\OpenRoads Designer CE\\Configuration行业级、公司级（WorkSpace）通过复制目录与配制文件完成，项目级（WorkSet）在ORD初始界面中对应WorkSpace中直接创建。1、行业层级标准（目录Organization-Civil内）C:\\ProgramData\\Bentley\\OpenRoads Designer CE\\Configuration\\Organization-Civil进入此目录后将目录“_Civil Default Standards - Metric”和文件“_Civil Default Standards - Metric.cfg” **复制并原地粘贴更名为“水利水电行业标准”和“水利水电行业标准.cfg”：如上即完成行业层级标准的创建。2、公司层级标准（目录WorkSpace内）进入C:\\ProgramData\\Bentley\\OpenRoads Designer CE\\Configuration\\WorkSpaces将目录“Metric Standards”和文件“Metric Standards.cfg”复制并原地粘贴更名为“Water12”、“Water12.cfg”如下图：用记事本打开“Water12.cfg”将“CIVIL_ORGANIZATION_NAME”变量值设定为以上行业标准名称“水利水电行业标准”：如上完成公司层级标准的创建并与行业层级标准建立关联。3、项目层级标准（WorkSet）启动软件，在“Water12”工作空间内创建工作集，按项目创建，设计文件夹、标准文件夹均保持默认即可。在项目中创建文件时不要把dgn文件放在项目的DGN目录内，一是该目录较深，二是重装后会被清除。4、库文件、种子文件位置特征库与种子文件均位于行业标准目录下：特征库：C:\\ProgramData\\Bentley\\OpenRoads Designer CE\\Configuration\\Organization-Civil\\水利水电行业标准\\Dgnlib\\Feature Definitions种子文件：C:\\ProgramData\\Bentley\\OpenRoads Designer CE\\Configuration\\Organization-Civil\\水利水电行业标准\\Seed地形特征等均包含在库文件中。公司层级特征库文件与种子文件位置工作空间WorkSpaces下的公司名中的标准目录内：库：C:\\ProgramData\\Bentley\\OpenRoads Designer CE\\Configuration\\WorkSpaces\\Water12\\Standards\\Dgnlib\\Feature Definitions种子：C:\\ProgramData\\Bentley\\OpenRoads Designer CE\\Configuration\\WorkSpaces\\Water12\\Standards\\Seed5、自定义行业标准、公司标准及相关文件备份与恢复说明备份：C:\\ProgramData\\Bentley\\OpenRoads Designer CE\\Configuration，将此目录压缩备份（即在目录C:\\ProgramData\\Bentley\\OpenRoads Designer CE中）成Configuration.zip恢复：将Configuration.zip解压后复制到C:\\ProgramData\\Bentley\\OpenRoads Designer CE目录中。" }, { "title": "MicroStation导入Civil 3D地形曲面并转换成智能曲面", "url": "/posts/c3d-surface-to-mstn-trim/", "categories": "MicroStation, 曲面", "tags": "MicroStation, Civil3D, 曲面", "date": "2022-09-02 00:00:00 +0800", "snippet": "1、在C3D里生成曲面，调整好三角网，在OUTPUT选项卡里导出为LandXML文件；2、在MSTN里导入LandXML，选中导入后生成的对象修改属性将三角网打开显示（如已显示可忽略此步）；3、将三角网Drop成网格，参数如下：4、在曲面中的曲面应用选择Convert to SmartSurfae将三角网格转换成SmartSurface：注意：对于较大的地形，在转换后出现丢失部位的情况与SolidArea大小有关，在设置中调大此参数后就可以了，调整此参数后的地形在被引用时主图的大小需与此一致，否则无法裁剪。至此C3D里的曲面三角网就生成了SmartSurface，参考到建模中即可用于裁剪其它曲面，无需并入主文件。如果需要调整显示透明度，请将此曲面的透明度设为40左右，参考时在参考对话框内将此参考的设置中较正颜色：其中的透明度设为1即可，大于此值会导致透明度太大，设置为0则无法让被参考模型内的透明度产生效果。" }, { "title": "三维对齐将剖面结构图（断面）快速放置至剖切面", "url": "/posts/align3d-section-plane2plane/", "categories": "MicroStation, 剖切", "tags": "断面, 剖面, MicroStation", "date": "2022-09-01 00:00:00 +0800", "snippet": " MicroStation三维对齐操作方法 剖面断面图选中及定位:在进行三维建模时，需将剖面结构图（横断面图）放置到3D轴线端点剖切面上（铅垂、或垂直于3D轴线平面），一般通过跨视图拷贝、粘贴的方式完成，即在顶视图上拷断面剖结构图对象，再到剖切平面进行粘贴。通过跨视图拷贝、粘贴需在两个视图窗口内分别置为顶视图、剖切面视图，在顶视图窗口内拷贝对象，到剖切面视图窗口中粘贴即可。将窗口置为剖切面视图另文说明。在MS里有更方便快捷的操作方法，那就是三维对齐工具，以下为通过三维对齐快速进行复制定位的操作步骤。MicroStation三维对齐操作方法● 将剖面结构图生成一个线串、形状等单一图形对象，如果是多个对象，需分别操作，三维对齐每次只对操作一个对象；● 使用三维对齐命令，方法为平面对平面（Plane to Plane）;● 捕捉移动对象的定位基点（通常为与轴线的交点）作为平面原点；● 点击移动对象的一个特征点作为定义平面X轴的方向；● 点选第三个点定义平面的Y轴方向；● 三点中第一个点即原点定位基点、X轴的方向点必须与目标位置一致，基点必须重合，X轴方向点一致，但不需重合；● Y轴方向点的移动对象与目标定位对象可不一致，只需分别在各自平面Y轴方向的任意一点即可；● 移到剖切面上，点选基点，目标平面X轴的正向点、Y轴正方向上任意一点，确认完成：剖面断面图选中及定位:1、捕捉定位基点并选中移动对象2、捕捉对象平面X轴正向点3、捕捉对象平面Y轴正向上任意一点4、移动对象三点后效果5、剖切面上的定位基点即平面原点6、与移动对象平面X轴对应的正点定位点7、目标平面Y轴正向上任意一点,可与移动对象平面第三点位置不重合8、确认完成移动对齐" }, { "title": "MicroStation更正地形网格中的错误高程点", "url": "/posts/MSTN-modify-mesh-vertex-ele/", "categories": "MicroStation, 网格", "tags": "网格, Mesh, MicroStation", "date": "2022-09-01 00:00:00 +0800", "snippet": "地形网格生成后，由于数据中个别点高程不正确，出现个别飞点，如下图：此时可以通过网格编辑中的移动网格顶点方式来更正网格不正确顶点，在Modify Facets界面选择Move Vertex:打开精确绘图的坐标输入窗口（快捷键P、P或M），输入以下数据： #,#,290.22其中290.22即为该点正确的高程值。" }, { "title": "MicroStation绘空间圆弧Helix", "url": "/posts/microstation-helix/", "categories": "MicroStation, 基础", "tags": "MicroStation, 三维", "date": "2022-08-31 00:00:00 +0800", "snippet": " 说明 绘制步骤及参数说明说明圆弧段轴线在空间上是一段螺旋线，不能用一般的圆弧绘制命令完成，需使用螺旋线绘制命令进行绘制。不论是AutoCAD还是MicroStation中，螺旋线的绘制有固定的参数计算设置和绘制步骤。绘制步骤及参数说明1、以2D绘出螺旋线的关键点如圆心、瑞点用于定位，调整视图为TOP；2、螺旋曲线（建模 &gt; 曲线 &gt; 创建曲线、绘图 &gt; 主页 &gt; 放置 &gt; 创建曲线拆分按钮）；3、旋向：从低往高定方向、轴：Drawing Z、高度为两端点高差，螺距按两端点高差与夹角计算一个全圆的高度。特别注意不要将公差清零，公差清零后会出现绘出无数端点的线串，在精确捕捉打开的情况下会出现呆滞现象，导致旋转移动无法操作；4、点选圆心，再输入一个点确认绘出螺旋线；5、通过放转命令将其旋转到正确位置（方法：三点[3]，圆心、一个端点、该端点正确位置）；5、移动到合适的高程位置。出现圆弧短于预期，则根据高度、将角度稍调大再计算出螺距重新绘制，对于圆弧长于预期无法裁剪，可用元素中断进行裁剪。" }, { "title": "2D线段修改为3D线段端点分别设置高程", "url": "/posts/microstation-line-elevation/", "categories": "MicroStation, 基础", "tags": "MicroStation, AccuDraw", "date": "2022-08-30 00:00:00 +0800", "snippet": " 将线串中的顶点移动到 Z 值为 10 的位置将线串中的顶点移动到 Z 值为 10 的位置 按键盘快捷键&lt;P&gt;。 将打开一个弹出菜单。 再次按&lt;P&gt; 键或从弹出菜单中选择点键入(单个)，按&lt;M&gt;为多点输入。 将打开“数据点键入”对话框。 选择“修改元素”工具。 捕捉到要移动的顶点，然后输入一个数据点。 在“数据点”对话框中，键入 xy=#,#,10顶点将移动到 Z 值为 10 的位置，同时保留 x 和 y 坐标的当前值。" }, { "title": "MicroStation Plan Section Callout剖断面并提取断面线", "url": "/posts/callout-extract-section-line/", "categories": "MicroStation, 剖切", "tags": "MicroStation, 剖面, 断面", "date": "2022-06-03 00:00:00 +0800", "snippet": " 创建剖切对象模型 在顶视图内剖切 放置剖切面 生成平面图模型显示切面线 提取剖切面断面线 Q&amp;A创建剖切对象模型使用Mesh From Point工具生成Mesh元素或其它建模工具生成需剖切的三维模型。在顶视图内剖切移到Top View，其它方向剖切需先转换到相应（或垂直）的视图方向。放置剖切面使用Drawing Composition〉Place Pan Callout工具，放置Callout的同时，生成相应的Drawing Model和Sheet Model。CE版在Drawing、Annotate、Detailing栏目内，使用Plan Callout或Section Callout都可以。Section Callout的区别是放置过程中需设置剪切范围高度。生成平面图模型显示切面线移到生成的Drawing Model，抽出断面（Cross Section）或者断面线。 关键点：只显示Cut面，关掉Forward和Backward的显示。生成Drawing是必需的，而Sheet则看是否需生成图纸，可选可不选，Sheet Model是参考Drawing Model。后续的提取断面线需在打开Drawing视图（Plan View）后在参考管理对话框内进行，只有Drawing才可以将剖面的剖切边界线设置为Legacy。提取剖切面断面线将抽出的断面线转成合法的Line String元素类型。 关键点：把参考过来图形的Visible Edges设置从Dynamic改称Legacy就可以。在视图窗口左下角打开视图列表，选择相应的Plan view(或Section View)激活相应的Drawing视图窗口，然后打开参考管理，在参考列表中对相应的参考进行设置：1、选中参考，在属性列表中对Presentation进行设置，关闭前、后剖切方各，只留Cut剖切面；2、对参考设置Visible Edges为Legacy。Q&amp;A 为什么在Design Model的View Attributes窗口中看不到Clip Volume Settings选项？ 打开Design Model，把鼠标放在已放置的Callout Icon上，会显示一个Popup的工具条，中间有一个工具叫做“Clip Model by Callout”，点击一次此工具之后，就会在View Attributes窗口中看到Clip Volume Settings选项了。 为什么在Drawing Model的View Attributes窗口中看不到Clip Volume Settings选项？ 打开Drawing Model，并打开Reference窗口，通过菜单Settings&gt; Presentation打开Reference Presentation窗口，其中有Clip Volume Settings设置，关闭Forward和Backward，只留Cut面的显示就可以。 因为Drawing Model是参考了Design Model中的内容，所以它的Clip Volume Settings设置不在View Attributes下，而在各自的Reference Presentation中进行。 为什么在Sheet Model的Reference窗口中Visible Edges列没有Dynamic，Cached，Legacy的设置？ Sheet Model是Design Model的第二层嵌套参考，你需要回到第一层嵌套参考的Drawing Model中进行Reference的Visible Edges设置。 断面线的生成过程请演示视频请参阅：Bentley 中国优先社区本地文件：Plan(Section)Callout生成剖面提取断面线(MeshCreateCrossSectionLine).wmv" }, { "title": "OpenRoads Designer教程-第1节 软件介绍及地形的创建", "url": "/posts/ord-tut-01/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 地形模型", "date": "2022-05-16 00:00:00 +0800", "snippet": " 概述 目标 启动OpenRoads Designer并选择工作空间 初识界面 从ConceptStation 导入地形数据概述本单元将带你熟悉OpenRoads Designer的界面和进行导入现有地形数据的操作。目标 软件后台配置 搜索功能区 与ConceptStation功能集成启动OpenRoads Designer并选择工作空间1、启动OpenRoads Designer 软件。注: 开始界面中包含有示例视频、培训课程、产品新闻、最新公告等。在EAP版发布时开始界面中内容还不是太多，但将来在正式商业版中会有很丰富的内容。 ![](/img/2022/2022-09-09-15-18-26.png)2、点击窗口右侧的启动工作会话（Start a Work Session）箭头。3、设置工作空间和工作集。本培训教程所使用的工作空间与工作集分别为OpenRoads – Metric和Integrated Highway Lifecycle，此工作空间和工作集 在OpenRoads Designer软件安装时就被成功配置。a. 在工作空间（Workspace）菜单中选择OpenRoads ‐ Metric工作空间。b. 在工作集（Workset）菜单中选择Integrated Highway Lifecycle工作集。4、 创建一个3D地形文件。a. 点击新建文件(New File )按钮。b. 在接下来弹出的对话框中选择当前的浏览路径为c:\\Bentley Training\\Getting Started with OpenRoads Designer\\Module 1 (Overview and Terrain) ，如果你把本课程的数据文件解压到其它位置，就在对话框中选择当前解压路径。c. 设置种子文件为Seed3D‐IHL.dgn。d. 创建一个名称为Terrain3D.dgn的文件.初识界面这时功能区菜单变成了我们熟悉的以OpenRoads Designer软件的功能进行分类的工具栏，我们称它为ribbon tabs（功能区选项卡）。开始-包含特性（特征）、浏览器、参考、模型、元素选择、围栅和报告等常用的工具。地形-包含地形相关的元素选择和地形建模工具。几何图形-功能包含与几何绘图相关的元素选择、Civil AccuDraw（土木精确绘图） 、几何工具包括直线、圆弧、点。廊道-廊道元素选择，超高和廊道建模工具。模型细节设计-元素选择、Civil Cells*（土木单元）、三维线模板和三维面模板等工具。图纸生成（Drawing Production）-图纸元素选择、批注、文字、注释、平面图纸（平面、纵断面、横断面）等工具。绘图- MicroStation中常用的绘图工具。也可以使用MicroStation全部的工具，用激活当前工作流的方式可以切换到绘图、模型和实景建模等功能。视图-常用的视图控制等工具。2、搜索功能区选项卡中的工具。当你不确定要在功能区选项卡中的哪个位置找到你需要的工具时，界面右上角的搜索功能就是你最好的助手。a. 输入“Template”作为检索词 。b. 光标放在被检索出的“Create Template”选项上。这时此检索结果就会展开显示，显示内容含有这个工具所在的功能区选项卡的名称。c. 用鼠标点击“Create Template”就会启动这个工具。 注：创建模板工具开始运行，但是功能区选项卡并没有变化。d. 关闭“Create Template”对话框。e. 重新输入“Template”关键词 。f. 把光标停放在Create Template关键词上，这时会展开搜索到的选项。g. 选择选项“OpenRoads Designer → Corridors → Create → Template”。h. 这时会自动切换到包含有创建模板工具的功能区选项卡中。3、自动隐藏功能区a. 双击功能区选项卡（比如廊道选项卡）的标签位置，这时整个功能区菜单将被隐藏。b. 再次双击功能区选项卡的标签位置，这时整个功能区菜单将会重新显示。4、软件配置的介绍a. 点击文件（File）功能区标签可以进入软件配置界面。b. 点击设置（Settings）按钮。设计文件的设置、首选项、定制等功能选项都可以在软件配置界面中找到。可以把光标停留在以上功能选项上，会有高亮显示。c. 点击软件左上角的箭头图标返回到设计区域。5、如果打开了精确绘图功能，请关闭它。从ConceptStation 导入地形数据1、选择地形（Terrain）功能区选项卡中的从文件（From File）图标。2、选择Module 1 (Overview and Terrain)文件夹中的OG.tin文件。3、在“Terrain &gt; Existing &gt; Existing Boundary”功能中设置特征属性。地形数据也可以来源于ConceptStation, InRoads, GEOPAK或者其他软件。4、单击导入（Import）按钮。5、关闭导入地形（Import Terrain Model）对话框。6、选择全景视图（Fit View）按钮查看地形模型。7、点击保存设置（Save Settings）图标。注：这个图标在屏幕顶端的快速访问工具栏中。8、退出OpenRoads Designer软件。入门手册中的每一单元都会带读者学习一个独立的功能。在每一单元学习完成并关闭软件之后，请把本单元的成果文件放置在下一单元中。" }, { "title": "OpenRoads Designer教程-第2节 几何图形", "url": "/posts/ord-tut-02/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 几何", "date": "2022-05-13 00:00:00 +0800", "snippet": " 概述 目标 连接原始地形 导入几何图形 注释几何图形概述本单元我们将会学习导入并注释ConceptStation的几何图形。.目标 功能集成 注释 特征定义连接原始地形1、打开OpenRoads Designe软件，并确保工作集（Workset）设置为Integrated Highway Lifecycle。2、单击浏览（Browse）按钮打开Module 2 (Geometry)文件夹下的Geometry.dgn文件。3、连接Terrain3D.dgn文件作为参考并设置方向（orientation）属性设置为重合-全局（Coincident-World）。注：参考工具在主页（Home）功能区选项卡中。4、全景显示视图。5、激活原始地形为当前地形模型。6、选择保存设置（Save Settings）按钮。导入几何图形1、导入平面几何数据a. 选取导入几何（Import Geometry）按钮。b. 浏览并选取Geometry.alg文件。c. 勾选几何（Geometry）选项下的所有路线（alignments）选项的复选框.。d. 选取创建Civil规则（Create Civil Rules）选项。e. 单击导入（Import）按钮。2、为平面线形设置特征定义a. 选取所有的平面元素到选择集中。b. 选择设置特征定义（Set Feature Definition）按钮。c. 设置特征定义的参数及定位方式。 Feature Type（特征类型） = Alignment Feature Definition（特征定义） = Alignment &gt; Geom_Baselined. 选取取消选择（Select None）按钮，清空选择集。注释几何图形1、缩放这条东西走向的线形(Rt97_Extension)到屏幕的合适位置。2、注释单条线形。a. 点取图纸生成（Drawing Production）功能选项卡中的元素注释（Annotate Element）按钮。b. 选取名称为Route97_Extension的道路中心线（那条东西走向的线形）。c. 重新设置线形的注释。3、改变注释比例a. 选取绘图（Drawing）功能选项卡中的注释比例（Annotation Scale）下拉列表并改变比例尺为1:500，这时注释字体尺寸变大.4、移除单条线形的注释。a. 点取在图纸生成（Drawing Production）功能区选项卡中的移除元素批注（Remove Element Annotations）按钮。b. 选取Route97_Extension 中心线。c. 清除注释。5、注释多条线形。a. 全景显示所有要注释的线形。b. 选取所有的几何元素到选择集。c. 点取图纸生成（Drawing Production）功能区选项卡中的元素注释（Annotate Element）按钮。d. 全屏显示视图并保存设置。6、选取绘图（Drawing）功能选项卡中的注释比例（Annotation Scale）下拉列表并改变比例尺为1:200，更新所有的注释比例。7、全屏显示视图并保存设置。8、退出OpenRoads Designer软件。 入门手册中的每一单元都会带读者学习一个独立的功能。在每一单元学习完成并关闭软件之后，请把本单元的成果文件放置在下一单元中。" }, { "title": "OpenRoads Designer教程-第3节 建模", "url": "/posts/ord-tut-03/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 模型", "date": "2022-05-12 00:00:00 +0800", "snippet": " 简述 目标 匝道C模型 沿匝道C创建桥梁模型 路线Route 97 Extension建模简述本单元将带你对一个立交桥模型进行建模，其中包括道路出入口以及桥梁的临时模型。目标 参照参考图 一般建模操作 文件参考 性能匝道C模型1、打开OpenRoads Designe软件，并确保工作集（Workset）设置为Integrated Highway Lifecycle。2、打开Module 3 (Modeling)文件夹下的Corridor_RampC.dgn文件。3、单击视图1（View 1）按钮设置其为激活状态。4、在廊道（Corridors）功能区选项卡中选取新建廊道（New Corridor）功能，创建一条以路线起点为起始桩号以1+000为终止桩号的廊道。 Feature Definition （特征定义） = Conceptual (set in the Tool Settings dialog 设置在工具设置对话框) Profile（纵断面） = Active Profile Feature Name（特征名称） = RampC‐1 Template（模板） = Templates &gt; IHL &gt; Ramp RT Tie Start Station（起始桩号） = Beginning of Alignment（线形起始桩号） End Station（终止桩号） = 1+000 Drop Interval = 5 Drop Interval（划分间距） = 5 Minimum Transition Before Drop （三维路面前最小过渡段长） = 0 Minimum Transition After Drop（三维路面后最小过渡段长） = 05、改变廊道特征定义。a. 选择廊道.b. 选择廊道属性（Properties）按钮.c. 设置廊道的Feature Definition （特征定义） = Corridor &gt; Final 注：这时横断面在三维图形中划分的间隔变密。d. 关闭属性窗口。6、创建另外一条起始桩号在桥梁的终止位置（桩号1+550）终止桩号为线形终点的廊道。 Feature Definition（特征定义） = Corridor &gt; Final Profile（纵断面） = Active Profile Feature Name（特征名称） = RampC‐2 Template（模板） = Templates &gt; IHL &gt; Ramp RT Tie Start Station（起始桩号） = 1+550 End Station （终止桩号）= End of Alignment Drop Interval（划分间距） = 5 Minimum Transition Before Drop （三维路面前最小过渡段长） = 0 Minimum Transition After Drop （三维路面后最小过渡段长） = 0 沿匝道C创建桥梁模型1、打开文件名为Bridge_RampC.dgn的文件。2、单击视图1（View 1）按钮设置其为激活状态。3、创建一个形状与将要导入的桥梁比较接近的廊道。这个廊道以后要被在OpenBridge Modeler软件中创建的桥梁模型所替换。 Feature Definition（特征定义） = Corridor &gt; Final Profile（纵断面） = Active Profile Feature Name（特征名称） = Bridge‐RampC Template（模板） = Templates &gt; IHL &gt; Ramp BridgeRT Tie Start Station（起始桩号） = 1+000 End Station（终止桩号） = 1+550 Drop Interval （划分间距） = 5 Minimum Transition Before Drop （三维路面前最小过渡段长） = 0 Minimum Transition After Drop（三维路面后最小过渡段长） = 04、选择创建参数约束（Create Parametric Constraint）按钮并选取桥梁匝道C的廊道，然后改变桥梁面板的厚度来模拟上部结构。a. Start Station （起点）= 1+000b. Stop Station（终点） = 1+550c. Constraint Label（约束标签） =BR_Deck_Depthd. Start Value（起始值） = ‐2.4e. Stop Value (结束值)= ‐2.45、查看三维模型。 注：临时桥梁模板的厚度与上部结构高度一致。路线Route 97 Extension建模1、打开文件名为Corridor_Rt97_Extension.dgn的文件。2、单击视图1（View 1）按钮设置其为激活状态。3、在Corridor_Rt97_Extension.dgn文件中创建一个廊道（沿着那条东西走向长度9.8千米的线形） Feature Definition（特征定义） = Corridor &gt; Final Profile （纵断面） = Active Profile Feature Name（特征名称） = Route97_Extension Template（模板） = Templates &gt; IHL &gt; 4 Lane Divided Highway Start Station（起始桩号） = Beginning of Alignment End Station（终止桩号） = End of Alignment Drop Interval（划分间距） = 5 Minimum Transition Before Drop（三维路面前最小过渡段长） = 0 Minimum Transition After Drop（三维路面后最小过渡段长） = 04、查看三维模型。5、退出OpenRoads Designer。入门手册中的每一单元都会带读者学习一个独立的功能。在每一单元学习完成并关闭软件之后，请把本单元的成果文件放置在下一单元中。" }, { "title": "OpenRoads Designer教程-第4节 超高", "url": "/posts/ord-tut-04/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 超高", "date": "2022-05-11 00:00:00 +0800", "snippet": " 概述 目标 定义匝道C的超高 查看并编辑匝道C的超高 将超高指定给匝道C的廊道 将超高指定给廊道Bridge-RampC概述本章你将学习到定义和编辑超高数据，并对多个廊道设置超高。目标一般超高设置 超高建模定义匝道C的超高 打开OpenRoads Designe软件，并确保工作集（Workset）设置为Integrated Highway Lifecycle。 打开Module 4 (Superelevation)文件夹下的Superelevation.dgn文件。 创建匝道C的超高定义。 点击廊道（Corridors）功能区选项卡中的创建超高区间（Create Superelevation Sections）按钮。 Feature Definition（特征定义） = Superelevation &gt; Superelevation (在工具设置对话框中设置) Name（名称） = RampC Start Station（起始桩号） = Beginning of Alignment Stop Station（终止桩号） = End of Alignment Minimum Tangent Length（最小切线长度） = 10000 这时创建超高车道（Create Superelevation Lane）工具自动运行，如果没有运行，请点击工具按钮。 Name（名称） = RampC Type(类型) = Primary Side of Centerline （中心线侧）= Left Inside Edge Offset（内边缘偏移） = 0 Width（宽度） = 3.65 Normal Cross Slope（普通横坡） = ‐2% 停止定义超高车道。 这时超高计算（Calculate Superelevation）工具应该自动运行，如果没有，请点击工具按钮运行。 Standards File Name（标准文件名称） = AASHTO Method 5 ‐ Metric.xml e selection （e选择）= AASHTO Method 5 L Selection（L选择） = AASHTO Design Speed （设计速度）= 50 Pivot Method （旋转方式）= Crown Open Editor （打开编辑器）= No 查看并编辑匝道C的超高 选择超高区间 把光标放置在超高区间上，直到菜单出现。 点击菜单中的打开超高模型（Open Superelevation Model）按钮。 点击视图2（View 2）按钮并显示模型。 选择超高过渡线。 缩放超高线的超高过渡线和图形底部到合适大小。 改变超高区域的桩号位置。 Start Station（起始桩号） = 0+940 End Station（终止桩号） = 1+620 将超高指定给匝道C的廊道 打开文件Corridor_RampC.dgn。 将视图1（View 1）设置为2D模式。 把Corridor_RampC.dgn的2D模型参考到当前的缺省模型。 指定超高给廊道Ramp-1。 点取廊道（Corridors）功能区选项卡中的指定给廊道（Assign to Corridor）按钮。 选择匝道C（Ramp C）的超高区间。 重新选择超高区间。 选择廊道RampC-1。 确认模板可以自动设置超高与枢轴点（Pivot points）。 点击确定（OK）按钮关联超高与廊道。 关联超高与廊道RampC-2。将超高指定给廊道Bridge-RampC 打开文件Bridge_RampC.dgn。 将视图1（View 1）设置为2D模式。 把Corridor_RampC.dgn.的2D模型参考到当前的缺省模型中来。 将超高指定给廊道Bridge-RampC。 动态显示廊道Bridge-RampC的横断面。 退出OpenRoads Designer软件。入门手册中的每一单元都会带读者学习一个独立的功能。在每一单元学习完成并关闭软件之后，请把本单元的成果文件放置在下一单元中。" }, { "title": "OpenRoads Designer教程-第5节 集成桥梁模型", "url": "/posts/ord-tut-05/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 桥梁, 模型", "date": "2022-05-10 00:00:00 +0800", "snippet": " 概述 目标 集成OpenBridge Modeler中的桥梁模型概述本单元将学习把OpenBridge Modeler中的桥梁模型集成到道路模型中。目标集成OpenBridge Modeler模型集成OpenBridge Modeler中的桥梁模型 打开OpenRoads Designe软件，并确保工作集（Workset）设置为Integrated Highway Lifecycle。 打开Module 5 (Integration)文件夹下的Corridor_RampC.dgn文件。 关闭OpenRoads Designer中临时桥梁模型的显示。 点取主页（Home）功能区选项卡中的参考（References）工具按钮。 点击进入三维视图中查看，确保所需要参考文件没有被修改，显示如图中的4个参考文件。 选取Bridge_RampC.dgn文件。 取消其显示（Display）属性。 链接OBM Bridge RampC.dgn文件到三维视图，其中方向（orientation）属性设置为重合-全局（Coincident-World）。 这时可以看到模型中已经包含了详细的桥梁模型。 退出OpenRoads Designer软件。 入门手册中的每一单元都会带读者学习一个独立的功能。在每一单元学习完成并关闭软件之后，请把本单元的成果文件放置在下一单元中。 " }, { "title": "OpenRoads Designer教程-第6节 地下设施", "url": "/posts/ord-tut-06/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 给排水", "date": "2022-05-09 00:00:00 +0800", "snippet": " 目标 认识并熟悉界面 学习用模型构建器导入数据 水力分析—用分析方案管理器 查看图形元素的属性和分析结果 创建剖面走向图 查看三维模型 目标 检查地下设施的工作流程 进行水压力分析 创建剖面视图 查看三维模型认识并熟悉界面 打开OpenRoads Designe软件，并确保工作集（Workset）设置为Integrated Highway Lifecycle。 打开Module 6(Subsurface Utilities)文件夹下的Storm Drainage.dgn文件。 如果提示关联水工模型与CE项目，请勾选忽略提示（Never prompt）和点击确定（OK）。 注：这个提示出现在文件打开进度（File Open Progress）对话框弹出之后，移动Subsurface Utilities Engineering对话框后可以看到下面的文件打开进度对话框。 熟悉地下设施模块的界面选择软件左上角的地下设施（Subsurface Utilities）工作流。这时功能区菜单就会显示地下设施模块的工具。其中一些功能区选项卡与OpenRoads Designer工作流中的是相同的。在地下设施工作流中的一些功能是和其它工作流是是相同的，另外就是一些特有的功能了。 布局-包含创建及导入设施的一些工具。 分析-包含水文、水力、压力设施（比如雨水或公共场所管网）的分析计算工具。 组件-包含一下通用组件的标准库。在对软件不同的授权方式下，此功能区选项卡中的显示内容会有所不同。 视图-一些对设施布设情况检验的工具 工具-一些其他方面的工具，比如模型构建器及碰撞检查方面的工具。 报告-包含管网及水压力方面的报告学习用模型构建器导入数据雨水管网模型已经用模型构建器导入到了本文件中。在这个文件中也可以看到已经被设置为透明状态的道路廊道，这样雨水管网模型就可以很容易地看到了。注：集水区设置为两种颜色—红和绿。当模型导入时，会被自动设置特征定义，自动设置的根据是每个流水区域的径流系数，还有人行道或边坡草皮的特征定义。同样的技术也应用于滤污的铁格子，它也是根据已有的数据来确定其大小。 如下图所示，缩放视图来显示在道路北侧的排水口。 点取主页（Home）功能选项卡中的参考（References）按钮。 选取Storm Drainage.dgn ‐ Default‐3D模型。 取消其显示（Display）属性，这时三维模型被隐藏。现在视图中仅显示包含有二维雨水排泄设施的’Default’模型。显示二维图形是为了更容易的选择图形元素。水力分析—用分析方案管理器现在排水管网的数据已经导入，下一步可以进行水力分析了。导入数据后设施模型已经创建完成，接下来需要对从DGN Library中复制到当前激活文件下的分析方案和降雨信息进行设置。接下来将讲解怎么样复制降雨信息。 点取分析（Analysis）功能区选项卡中的方案（Scenarios）按钮。需要确保方案（Scenarios）对话框中的方案名为Analysis的标签设置为了当前（图标上会显示一个红色的标记）。如果没有标记的话，请点取Analysis标签并点取设置为当前（Make Current）的工具栏按钮。加载所有的备选方案、计算状态设置和分析方案。计算状态设置是对怎么分析这个系统所做的设置，而不是设置怎么进行设计系统。加载的数据包括：降雨信息,管口尺寸,等等。 点右键，选取Compute -&gt;Scenario菜单。系统进行初始化后，弹出名为GVF-Rational Calculation Summary（水流变化合理性估算与统计）的对话框。这时会看到已经设置完成了的方案名称和雨水信息。对话框中会提示已经有三段管道，并且都已经与集水井等连接完毕。这时水流变化的估算已经完成，而不仅仅只简单的对水流峰值量计算。标准深度和临界深度的计算都是迭代进行的。所以最终获得收敛的结果是很重要的。 点击详细（Details）按钮。 选取详细估算一览表（Calculation Detailed Summary）对话框中的连接构件一览表（Link Summary）标签。在表格中的列中可以看到表头为深度（进口）（Depth (In) ）和深度（出口）（Depth (Out)）的数据，从而确认水流变化分析已经完成。 点击选取详细估算一览表（Calculation Detailed Summary）对话框上的关闭（Close）按钮。 点击水流变化合理性估算与统计（GVF-Rational Calculation Summary）对话框上的关闭（Close）按钮。 关闭方案（Scenarios）对话框。 查看图形元素的属性和分析结果 在图形中选取编号为SS-22的水管。SS-22水管的延伸方向与主水管有一定角度，并通往路边的排水口。 把鼠标停留在水管上，并点取弹出菜单上的设施属性（Utility Properties）按钮。 选择水力分析（Hydraulic Analysis）标签。 使用卷轴滚动到结果（Results）属性位置。 结果包含流量、深度、速度等等. 关闭属性（Properties）对话框。创建剖面走向图现在已经在系统中估算了水压力，你可以在立面视图中查看水压结果。这是一种查看水管中水流深度的很好的方法。 选取取消选择（Select None）按钮，清空选择集。 点击主页（Home）功能区选项卡中的资源管理器（Explorer）按钮来打开资源管理器。 选取地下设施模型（Subsurface Utilities Model）分类节点。 展开地下设施模型（Subsurface Utilities Model）。 展开名称为Storm Drainage.dgn的节点. 右键点击剖面走向图（Profile Runs），并且点取弹出的自动创建剖面走向图（Auto Create New Profile Run）菜单项. 点击选择要自动创建剖面的元素（Auto Create Profile Element Select）对话框的浏览（Browse）按钮。 如图所示，在图形中选择排水口。 点击确定（OK）按钮。注：这时我们需要等几秒钟，剖面就生成了。 关闭后再从新打开资源管理器（Explorer）窗口。在EAP版中必须要重启资源管理器来完成正常刷新。 展开地下设施模型（Subsurface Utilities Model） &gt; Storm Drainage.dgn &gt;剖面走向图（Profile Runs）。 右键点击DI‐ to HW‐2节点，并且点取打开剖面图分析（Open Analysis Profile）菜单项。 这时弹出剖面图分析对话框，并显示有管道在剖面的走向、水压梯度线（Hydraulic Grade Line）、能量梯度线（Energy Grade Line）。 关闭剖面（Profile）对话框查看三维模型现在已经查看了在2D和剖面视图中的地下设施模型。下面我们将查看3D模型视图中的地下设施模型。 打开视图2（View 2）。这个视图以Default-3D模式显示三维地下排水管网。另外道路廊道已经被设置为了透明显示，所以就可以交互式的查看到地形与地下排水管网的设计情况。 使用全景显示、缩放、旋转等工具查看3D模型。观察到泄水井和管道的建模还是比较精确的。 如有需要可以关闭显示道路廊道的参考模型。 退出OpenRoads Designer软件。 " }, { "title": "OpenRoads Designer教程-第7节 横断面", "url": "/posts/ord-tut-07/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 断面", "date": "2022-05-08 00:00:00 +0800", "snippet": " 概述 目标 创建路线Rt 97 Extension的横断面图纸 打开OpenRoads Designe软件 打开设计文件 选择工作流 创建命名边界 在对话框中依次进行以下参数设置 创建横断面图纸 返回到横断面图纸 返回设计模型 完成退出 删除任意的图纸和命名边界概述本单元将带你沿路线Rt 97 Extension创建横断面。目标● 沿着一条路线创建横断面。创建路线Rt 97 Extension的横断面图纸打开OpenRoads Designe软件并确保工作集（Workset）设置为Integrated Highway Lifecycle。打开设计文件打开Module 7 (Cross Sections)文件夹下的Corridor _Rt97_Extension.dgn文件。选择工作流在软件左上角的列表中选取OpenRoads Designer工作流(workflow)。创建命名边界沿着路线Rt97 Extension创建横断面的命名边界（named boundaries）。 命名边界的定义中包含了横断面定位桩号及横断面截取高度和宽度等方面的信息。 注意：以下操作步骤需要严格按照顺序进行，建议您设置选项和输入参数的顺序如下所示。 点击视图1（View 1）并作为主模型。 点击图纸生成（Drawing Production）功能区标签中的放置命名边界（Place Named Boundary）按钮。 单击土木横断面图（Civil Cross Section）按钮。 在二维视图中选取名称为Route97_Extension的道路中心线。 在对话框中依次进行以下参数设置 Drawing Seed（绘图种子） = A1_XS_h100_v2 绘图种子设置了对话框中除了起终点桩号以外的缺省值，还对横断面绘图和图纸模型用到了哪些种子文件进行了设置。 Group （组）= New (新建) Name（名称）= Rt 97 Extension 当前所有将要创建的命名边界作为新创建组的组成成员。 使用绘图种子种默认的参数（如：偏移、间距、扩大、间隙、高程基准等）。 设置包括控制点（Include Control Points）选项为禁用状态。 如果该选项设置为启用状态，横断面就会添加横向控制点，比如点“PC”和“PT”。 启用创建绘图（Create Drawing）选项。 本选项在启用时，程序运行的流程是，在创建命名边界后自动创建横断面图纸。在禁用时，程序创建命名边界后就不进行创建横断面图纸。 注：未来功能会允许创建命名边界后再创建横断面图纸，但是在EAP版中只允许创建命名边界和创建横断面图纸同时进行。 启用显示对话框（Show Dialog）选项。 本选项在启用时，就会弹出设置一些对绘图进行参数设置的对话框，这些参数大部分都是来自前面引用的种子文件。 注：现在看到的这些工作流程，在最终版发布时有可能会有所变化。 设置起始与终止位置。 Start Location（起始位置） = 点击按钮 设置为路线的起始位置 Stop Location （终止位置）= 21+500 定义底部间隙。 启用底部间隙（Bottom Clearance）复选框。 Bottom Clearance（底部间隙） = 2.0 鼠标焦点放置在二维视图中，来继续创建命名边界。 注：如果输入终止桩号和输入起始桩号不使用一样方式，我们也可以通过桩号来定位来确定桩号，或者直接输入桩号值来设定终止位置。 创建命名边界会很快完成。完成后，创建绘图对话框就是弹出，并且命名边界也会在三维视图中显示出来。 创建横断面图纸 勾选添加到图纸索引（Add to Sheet Index）选项。 点击创建绘图Create Drawing对话框中的OK按钮。 创建9.8公里长的公路横断面图纸需要等待一段时间。在等待的过程中，屏幕底部的进度条会提示当前进度。当有一张横断面图呈现当前视图中时，那就说明所有的横断面图纸都已绘制完成。每一张横断面图纸都是实时参考的绘图模型中的图形，绘图模型中的图形也是实时参考的3D design model。我们在绘图模型创建时就已经添加了横断面的注释信息。如果3D design model中的相应位置有构件的话，那么构件的剖面同样就会显示在横断面图中。另外，因为它们之间是实时参考的，所以我们改变了3D model中的信息，就会自动更新到横断面图纸中。返回到横断面图纸 点取在主页（Home）功能区标签中的模型（Models）按钮。 = Drawing Model （绘图模型） = Sheet Model（图纸模型） 双击其中任意一张图纸模型 注：由于在创建横断面图纸时，图纸索引也被创建出来了，所以我们可以使用资源管理器中的图纸索引选项卡来浏览图纸。 设置 17+700.000 [Sheet]为当前视图，这时会看到地下排水管已经在横断面中绘制出来了。返回设计模型你可以在模型对话框中选择设计模型用来显示。但是我们仅仅选择其中的Default 或者Default-3D 模型，这样的话只能显示二维或者三维模型。如果需要同时显示二维与三维视图的话，可以用以下方式。 选取在屏幕左下角的视图组（View Group）列表中的Multi‐Model Views视图。完成退出退出OpenRoads Designer。删除任意的图纸和命名边界下面我们将讲解如何删除图纸和它们的命名边界。 删除绘图模型和图纸模型。 点取在主页（Home）功能区标签中的模型（Models）按钮。 选取所有平面、立面和横断面的绘图模型和图纸模型。 点击删除模型按钮。注：图纸模型的删除也可以在图纸索引中删除。 删除命名边界 查看命名边界的存储情况需要激活对应的视图模型。每种命名边界放置在不同的模型中，只有激活对应的模型才能对命名边界进行管理。 横断面边界（Cross Section Boundaries）- 3D model 平面边界（Plan Boundaries） - 2D Model 立面边界（Profile Boundaries） - Profile Model 点取产品绘图（Drawing Production）选项卡下的命名边界管理（Named Boundary Manager）按钮。 可以选取相应的命名边界组（Named Boundary Group）来进行删除操作。 点击删除选择的命名边界和命名边界组（Delete Selected Named Boundary or Group）按钮。这时会弹出一个对话框，用来确认是否删除命名边界和相对应保存的视图 点击确定（Yes）。 重复步骤2进行删除其它的附加命名边界。例如，平立面图纸依赖平面与立面命名边界，所以平面与立面命名边界都需要删除。入门手册中的每一单元都会带读者学习一个独立的功能。在每一单元学习完成并关闭软件之后，请把本单元的成果文件放置在下一单元中。 " }, { "title": "OpenRoads Designer教程-第8节 动态更新横断面", "url": "/posts/ord-tut-08/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 断面, 图纸", "date": "2022-05-06 00:00:00 +0800", "snippet": " 概述 目标概述本单元将学习在模型变改以后，怎么动态更新横断面和手动标注横断面。目标● 动态更新横断面图纸更新横断面注释 打开OpenRoads Designe软件，并确保工作集（Workset）设置为Integrated Highway Lifecycle。 打开Module 8 (Cross Sections - Dynamics)文件夹下的Corridor_Rt97_Extension.dgn文件。 查看桩号为17+500处的横断面。 a. 打开17+500桩号处的绘图模型（Drawing Model）; b. 在视图中全景显示横断面; c. 缩放右边坡，我们可以看到右边坡的坡度为-1:4。 返回到Multi‐Model Views视图中。 把廊道中路堤的填土坡度由25% (4:1)改为33.3% (3:1)。 a. 对路线Corridor Rt97_Extension进行编辑三维路面操作（Edit the Template Drop）。 b. 修改模板的右侧填方边坡坡度为-33.3%(3:1) 。 修改模板数据后，模型会自动更新。 重新回到桩号为17+500的绘图模型。 a. 打开名称为17+500的绘图模型（Drawing Model）。 b. 如果视图中图形不可见的话，请点击全景视图（Fit View）按钮进行显示。 c. 缩放右侧边坡在视图的合适位置，可以看到边坡坡度虽然改为了3:1，但是边坡的注释依然是4:1。 更新横断面的注释 a. 选取模型中的所有的图形到选择集中。 此时会发现选择集中仅仅包含注释和网格。究其原因，原来横断面图形它自身是由三维设计模型3D Design model中参考而来的。 b. 删除选择集中的所有图形元素（包含注释和网格）。 c. 点取产品绘图（Drawing Production）功能区选项卡中的模型注释（Annotate Model）按钮。 d. 设置所有绘图模型（All Drawing Models）参数为NO。 e. 设置注释组（Annotation roup）的参数为网格（Grid）。 这时横断面又重新被注释上了。 注：重新注释是自动进行的。 退出OpenRoads Designer软件。 " }, { "title": "OpenRoads Designer教程-第9节 创建平、立面图纸", "url": "/posts/ord-tut-09/", "categories": "OpenRoads, 综合基础", "tags": "OpenRoads, 教程, 图纸, 平面图", "date": "2022-05-06 00:00:00 +0800", "snippet": " 简述 目标 创建平面边界（Boundaries） 创建纵断面边界（Boundaries）和图纸 修改图纸布局 批量打印平立面图纸简述本单元将带你学习创建平面图纸和纵断面图纸并微调它们的图纸布局。同时，也将带你学习用图纸索引功能进行检索图纸和批量打印图纸的功能。目标 使用文档中心创建平立面图。 使用图纸索引功能。 创建平面边界（Boundaries） 打开OpenRoads Designe软件，并确保工作集（Workset）设置为Integrated Highway Lifecycle。 打开Module 9 (Plan Profile Sheets)文件夹下的Geometry.dgn文件。 点击图纸生成（Drawing Production）功能区标签中的放置命名边界（Place Named Boundary）按钮。 点击土木平面图（Civil Plan）按钮。 如果起始位置（Start Location）与终止位置（Stop Location）两个复选框为可设置状态，则禁用它们。 在模型中选取名称为Route97_Extension的道路中心线。 依次进行以下设置。 ● Drawing Seed（绘图种子） = A1_PP_PLAN_500。 ● 上面的 Name（名称）= Plan_Clip1 (这个名称作为第一个命名边界的名称， 后面的命名边界名称都在前一个名称的数字基础上加1。) ● Group（组）= (New)新建 ● 下面的 Name（名称）= Rt97_Extension_Plan 这个是由命名边界组成的新建组的组名称。 ● Start Location （起始位置） =锁定起始桩号为 11+865.304（点击右侧按钮可以一键设置为起始桩号） ● Stop Location （终止位置） = 禁用此复选框 设置创建绘图（Create Drawing）为非勾选状态。 重要说明：你创建平面和纵断面图纸，但此时仅仅创建了平面边界。而此时绘图和图纸都没有创建，只有平面边界与纵断面边界都创建以后，绘图和图纸才会被创建。如果这个时候你勾选了“创建绘图”选项，就需要在开始创建绘图和图纸之前的创建绘图（Create Drawing）对话框中点击取消（Cancel）按钮来结束这个流程。 在视图中通过桩号定位命名边界的起始位置和定义后续的命名边界的布置情况。 移动光标到线形的终点位置附近，观察命名边界的创建情况。 通过桩号定位平面命名边界布置的终止位置。 再一次通过桩号定位确认并创建命名边界。 创建纵断面边界（Boundaries）和图纸在视图8（View 8）中通过桩号定位布置命名边界，并确认，然后开始创建绘图。 打开已经显示有纵断面的视图8 （View 8）。 点取放置命名边界（Place Named Boundary）工具按钮。 选取土木纵断面（Civil Profile） 模式。 ● Drawing Seed（绘图种子） = A1_PP_PROFILE_500。 ● 上面的 Name（名称）= Profile_Clip1 这个名称作为第一个命名边界的名称， 后面的命名边界名称都在前一个名称的数字基础上加1。 ● Method（方法） = From Plan Group（来自于平面图组） 纵断面命名边界的界限与平面图组中的平面命名边界匹配。 ● Plan Group（平面图组） = Rt97_Extension_Plan ● Group（组）= (New)新建 ● Name（名称）= Rt97Extension Profile 这个是由命名边界组成的新建组的组名称。 勾选顶部间隙（Top Clearance）选项。 勾选底部间隙（Bottom Clearance）选项。 勾选创建绘图（Create Drawing） 选项。 勾选显示对话框（Show Dialog）选项。 选取视图8（View 8）中的纵断面线，然后开始布置命名边界。 这时创建绘图（Create Drawing）对话框弹出。 与创建横断面图纸类似，这是一个标准的工作流程，在创建平立面图纸的时候并不需要改变界面参数。因为这一步之前的创建命名边界的时候，已经选取了绘图种子文件，现在界面中的默认参数从种子文件读取。以后软件发布的时候，界面将会做一些调整。因为这个对话框中的一些设置和配置参数不符合标准的工作流程。 勾选添加到图纸索引（Add to Sheet Index）选项。 点击确定（OK）按钮创建平立面图纸。 在屏幕右下角的进度条显示图纸创建的进度情况。图纸创建完毕后，会有一张图纸在视图中显示。注意：平面图的布局是沿路线方向水平放置的。一些其它参照路线的图形，比如廊道， 它们会自动的包含在生成的图纸中。 参考廊道和地下管线的设计。 a. 在屏幕左下角的激活视图组列表中选择Multi‐Model Views视图。 b. 连接Corridor_Rt97_Extension.dgn文件把它参考到 2D模型中。 c. 连接Storm Drainage.dgn文件把它参考到 2D模型中。 在屏幕左下角的激活视图组列表中选择Plan_Clip27 [Sheet]。 修改图纸布局 打开主页（Home）功能区标签上的资源管理器（Explorer）按钮。 点击图纸索引（Sheet Index）标签。 展开Integrated Highway Lifecycle目录。 双击A036 [36,36] Plan_Clip1节点打开图纸1. 注意：此时平面部分已经超出图框顶部。 使用参考（Reference）工具移动并调整参考模型Plan_Clip1的大小，使其地放置在图纸的合适位置。批量打印平立面图纸 批量打印图纸到PDF文件 a. 选择资源管理器下的图纸索引标签下的Integrated Highway Lifecycle项目目录。 b. 点击打开打印管理器（Open Print Organizer）图标。 c. 选择PDF并且点击确定（OK按钮。 这时打印管理器对话框弹出。所有需要打印的图纸都被列在了对话框的右侧。这种情况下，列表中即包括横断面图纸，也包含平立面图纸。 d. 选取所有的横断面图纸。其实它们是很容易被识别的，因为它们的模型的名称都是根据桩号来命名的。 e. 点击删除（Delete）图标。 f. 点击打印（Print）图标。 g. 点击省略号图标，然后设置文件保存路径。 h. 选择输出路径，并对pdf文件命名，然后点击保存（Save）按钮。 i. 点击确定（OK）按钮创建PDF文件。 j. 关闭打印管理器。 打开Integrated Highway Lifecycle.pdf文件。 退出OpenRoads Designer软件。 " }, { "title": "Visual Studio Code及扩展设置", "url": "/posts/blog-vscode-pasteimage-settings/", "categories": "编程开发, IDE", "tags": "IDE, 扩展, 设置", "date": "2022-01-02 00:00:00 +0800", "snippet": " VS Code工作区 VS Code挂载Git 扩展PasteImage参数设置VS Code工作区VS Code工作区将克隆库目录添加到工作区，保存工作区。VS Code挂载Git下载：适用于Widown的Git，按默认参数安装，可安装到其它盘。扩展PasteImage参数设置" }, { "title": "绘制垂直于3D轴线的定位线的五种方法", "url": "/posts/MSTN-perp-3d-axis-m5/", "categories": "MicroStation, 基础", "tags": "MicroStation, 三维, AccuDraw, ACS, 断面, 剖面", "date": "2021-09-01 01:05:13 +0800", "snippet": " 1、几何辅助线法 2、ACS平面法 3、3点视图法 4、精确绘图绘图小平面旋转法 5、精确绘图R、A快捷命令少数剖面是垂直于3D轴线进行剖切的，在三维建时需要将剖面结图旋转于垂直于3D轴线的平面，为了跨视图拷贝粘贴，需绘制垂直于3D轴线的辅助线用于3点定义旋转视图。现详述绘制垂直于3D轴线（水平投影与轴线重合）的三种方法：图一图二打开两个视图窗口，图一为1号视图窗口，图二为5号视图窗口；1、几何辅助线法从2D轴线上捕捉点1与3D轴线上一点2绘智能线，延长至任意一点3处，过点3作3D轴线的垂线至点4，线段3-4即为垂直于3D轴线。2、ACS平面法通过2D轴线上的两点5、7与3D轴线的端点6定义ACS平面，打开ACS平面锁与ACS平面捕捉锁，从任意一点（打开ACS平面锁后数据点均位于ACS平面）绘3D轴线的垂线即可。3、3点视图法通过1号视图窗口的视图旋转功能3点旋转视图功能将1号视图窗口设为平面6、5、8，点1号视图窗口的设置激活深度命令，选择1号视图窗口，在5号视图窗口中点击6、5、8中的任意一点，将1号视图窗口的激活深度设为定义视图的点位置，然后在1号视图窗口绘垂直于3D轴线的垂线。4、精确绘图绘图小平面旋转法精确绘图的绘图平面可旋转到与元素对象对齐,对于可以确定一个平面的元素,绘图平面将旋转到元素所在平面,而对于直线,绘图平面的旋转具有不确定性： ａ．通过3D轴线的两个端点与2D轴线的一个端点绘制具有两个线段的线串，此线串共面，从此线串的3D线部分的任意一点开始绘智能线，输入第一点后（3D线上）按PE快捷键将绘图平面转到此线串所在平面，在绘图平面的一个坐标轴方向上绘出线段即可： b．对纯的3D轴线(两个端点),绘图时若直接按RE，绘图平面将旋转到不确定的方向，此时先按T将绘图平面置于顶视图，再按RE对齐到3D轴线，绘图平面将调整到3D线坡度方向，再通过快捷健E或RX＼RY将绘图平面沿坐标轴旋转到任意一轴垂直于3D线的方向，沿绘图平面的坐标轴绘线即可：从3D轴线上任意一点(可用快捷键K捕捉等分点)开始绘智能线,第一点位于3D线上:按快捷键T将绘图平面置于水平顶视图:按RE并选择3D轴线上的点并点左键确认,此时绘图平面将置于3D轴线斜面:按快捷键E将绘图平面旋转到一轴垂直于3D轴线:按回车键锁定轴,并点击输入第二点完成绘图.5、精确绘图R、A快捷命令因精确绘图的R、A快捷命令会激活ACS，因此可以直接使用精确绘图实现快速绘制3D轴线的垂线，步骤如下： 点击智能线工具（或绘直线工具）； 按R、A精确绘图快捷命令，出现ACS图标（有可能需要按F11、或O设置原点激活精确绘图）； 将光标移到剖切平面上的任意一点（如2D轴线的端点）定义绘图平面原点（激活的ACS平面原点）； 将光标移到剖切平面上的另一点（如2D轴线的另一个端点）定义绘图平面的X轴方向（Ｒ、Ａ激活的ACS平面X轴）； 将光标移到剖切平面上的第三点（3D轴线的端点）定义绘图平面的Y轴方向（R、A激活的ACS平面的Y轴）； 从3D轴线以外输入一个数据点，垂直捕捉3D轴线上的点，完成3D轴线垂线的绘制； 绘图中可以使用R、V将视图调整到当前激活ACS平面再进行绘图。" }, { "title": "OpenRoads Designer超高设置", "url": "/posts/ord-superelevation-setting/", "categories": "OpenRoads, 道路廊道", "tags": "OpenRoads, 超高, 模板", "date": "2021-08-20 19:26:00 +0800", "snippet": " 创建一个2D dgn文件存贮超高信息； 也可以创建在路线、廊道dgn文件里； 一定要有平曲线信息； 在廊道文件内将超高参考进来，将超高Assign给廊道； 模板内的超高点要勾选超高标志：模板点属性设置超高标志超高可以在点控制里可以查看（水桶图标）。" }, { "title": "OpenRoads Designer加宽表", "url": "/posts/ord-widening-table/", "categories": "OpenRoads, 道路廊道", "tags": "OpenRoads, 加宽, 模板, 参数", "date": "2021-07-03 17:13:00 +0800", "snippet": " 加宽表文件格式 加宽表文件示例（.wid）：曲线加宽用于自动创建和应用水平控件以拓宽曲线附近的车道和/或铺装线边缘，使其在控制路线的每条曲线进一步远离中心线。曲线加宽工具与包含加宽参数的 ASCII 文件 (*.wid) 结合使用。加宽表文件格式加宽表是一种 ASCII 格式，用户在使用曲线加宽工具时将指向该格式。虽然可能有多个加宽表，但是每次处理只能使用一个表。如果廊道的设计速度发生变化，需要不同的表，则必须多次使用该工具。加宽表文件示例（.wid）：; Cross section type 1, 3 &amp; 4; Lane width = 3.5 m; Rad Wi Li Wo Lo0 3.5 2.5 3.5 2.520 4.0 25 0 025 3.5 25 0 030 3.0 25 0 035 2.5 25 0 040 2.0 25 0 045 2.0 25 0 050 1.5 25 0 0 rad：曲线半径 Wi：曲线内侧加宽 Li：曲线内侧加宽过渡段长 Wo：曲线外侧加宽 Lo：曲线外侧加宽过渡段长举个例子，R=20m，加宽4m，则设置为：rad=20，Wi=4，Wo=0，Li和Lo可为任意值不影响。表格里的第一行rad=0,Wi=3.5指的是默认道路宽度为3.5m，这个不是加宽宽度。rad半径值为向下取值。超过50m不加宽可设置为rad=50，Wi=1.5。若平曲线不含缓和曲线，需在表格中设置L加宽渐变过渡值。操作视频" }, { "title": "OpenRoads Designer平面特征约束加宽", "url": "/posts/ord-widening-line-control/", "categories": "OpenRoads, 道路廊道", "tags": "OpenRoads, 加宽, 特征, 约束, 点属性, 模板", "date": "2021-07-03 17:13:00 +0800", "snippet": "OpenRoads Designer可以通过点控制实现加宽，通过设置模板中的平面特征约束实现，需对廊道模板进行修改，对需要加宽的点打开平面特征约束指向设定属性的线对象即可：模板点属性设置平面特征约束平面约束特征的选择：与平面路线视图中的约束特征线的特征一致即可。对廊道添加参考，将路线视图中控制加宽的特征线添加为参考线。" }, { "title": "MicroStation Section Callout剖切横断面图", "url": "/posts/mstn-section-callout-extract-line/", "categories": "MicroStation, 剖切", "tags": "MicroStation, Callout, 断面, 剖面", "date": "2021-03-06 00:00:00 +0800", "snippet": "1、将设置设置顶视图，绘出横断面轴线（用于后期断面处理时定位）、横断面定位辅助线；2、在Drawing工作流、Annotate、Detailing中点击Section Callout：3、捕捉并放置在横切位置：点击OK生成横断面视图，视图中除了横断面线，还包括剖切范围内的可视部分的投影：生成的视图带有透视范围内的对象，进入主模型，调整断面范围至与断面位置重合：此时生成的断面视仅包含剖切处的横断面线：3、将其导出为新的DWG文件，导出时选择选项进行设置：a、导出为DWG格式：点击“Merge Visible Edges of 3D Attachments”前的按钮设置为如下：在过滤器中点击“Models”选择刚生成的横断面模型进行导出：点击确定保存即可：生成的dwg文件即是需要的横断面图，图中的点是断面轴线在横断面上的投影，为方便后期横断面进行处理：b、导出为V8 dgn格式：File、Export、V8 Format Design（*.dgn）点击选项按钮进行参数设置：保存即可，新生成的文件中只包含横断面线。" }, { "title": "AutoCAD Civil 3D公路工程建模步骤", "url": "/posts/c3d-road-steps/", "categories": "Civil3D, 道路", "tags": "Civil3D, 道路, 廊道, 建模", "date": "2020-05-18 00:00:00 +0800", "snippet": " 曲面、路线 原始曲面 转折点线路图 主路线 曲面纵断面 设计纵断面 布局纵断面 偏移路线、加宽 偏移路线及加宽 超高、装配及采样 超高 曲面、路线原始曲面处理原始地形如等高线、地形点等，检查高程是否正确，生成原始曲面。转折点线路图收集、检查路线折点坐标并绘制转折点线路图；主路线收集平曲线参数，绘制主路线图。如分段则需注意各分段起始桩号不能直接使用折点桩号，最好使用其中一个百米桩开始；曲面纵断面收集竖曲线参数，绘制曲面纵断面和纵断面图。在纵断面图特性、标注栏内增删纵断面图上显示内容如地面高程、挖填高度等；设计纵断面布局纵断面 根据竖曲线折点创建竖曲线折点文本文件，根据此文件绘制布局纵断面折点图，在折点图上根据竖曲线半径在各折点上补绘竖曲线；在设计图中找到以上纵坡折点视图，按折点桩号、高程（空格分隔）格式生成如下文本文件：111520 2893.72。再根据文件绘制纵断面即可完成布局纵断面的折点绘图，再在折点上按竖曲线半径添加曲线即可。注意：文本文件中的桩号不能超出纵断面图的桩号，否则前一段不会绘出。出现超出部分则应按桩号、坡比计算出纵断面图起点的桩号与设计高程作为文件内容的第一行内容。 根据文件绘出的布局纵断面如上图中蓝线。再按竖曲线参数补绘曲线。选中断面线，在右键菜单中点击“编辑纵断面形状”打开纵断面图编辑工具栏： 在第一组工具列表中的曲线设定里设置曲线参数： 再用第一组命令列表中的绘制曲线切线，依次点击曲线两切线的三个端点完成曲线绘图： 绘竖曲线时依次点图中三点，图中红色部分即为竖曲线。后续曲线类似，如第3点的曲线从第2点开始依次点3及后面的折点。绘曲线前推荐在“编辑纵断面样式”里将变坡点标记选择打开如方框，便于捕捉端点。偏移路线、加宽偏移路线及加宽 根据路面宽度创建两侧偏移路线，并在偏移路线上添加加宽区域。有关加宽见相关博文。 为了加宽准确，建议采用自动加宽中的手工模式逐个曲线添加加宽。自动加宽需先给主路线添加速度与设计标准如下三张图，但自动加宽的手工模式（手动指定加宽段）可忽略选择标准文件直接执行“继续当前命令”：超高、装配及采样超高 通过修改编辑设计规范自动完成超高计算，也可按设计图中的超高视图创建超高数据表后导入。关于自动超高与手动超高数据的导入参见相关博客。 注意：通过设计规范自动完成的超高数据表在绘超高视图时会出现混乱。可能是因自动完成的超高计算数据项有多余的部分。手动编辑创建超高数据只需6个关键点的左、右横坡数据，绘出的超高视图与设计一致。装配 根据磺断面尺寸完成装配，也可分段创建多个装配。在创建道路时指定桩号范围匹配特定装配。创建道路时指定桩号、步长、和逻辑目标等。采样 创建道路后可直接采样并绘横断面图。道路曲面在生成时会出现局部不按要求连接的情况，而且在道路上直接采样，横断面与装配一致，而在道路曲面上采样，则会出现部分折点不连接，需要手动修改断面图。 " }, { "title": "Automatic execution when opening or closing drawings", "url": "/posts/matn-vba-Automatic-execution-opening-closing-drawings/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, 代码, 自动运行", "date": "2020-02-08 00:00:00 +0800", "snippet": "We are often faced with the task of having to carry out actions during the opening or closing of drawings. These actions can include making adjustments or launching control routines that check and correct drawings.Here is a small example created largely from the MicroStation VBA Help that is modified and compiled.In the previous article explaining automatically loading VBA routines, it has already been noted that it is possible to automatically execute something, but this happens before the drawing file is opened.Therefore, this example can bee seen more as an extension. Because there is an event handler installed in this example, after running the VBA routine, every time you open or close a drawing, an event is intercepted. This makes it easy to implement something to run later when these events occur.These events are indicated by a message box in this example, but this can be changed accordingly for your own use.A module with the subroutine OnProjectLoad might look something like this:Dim oOpenClose As clsOpenClosesub OnProjectLoad () Set oOpenClose = New clsOpenClose MsgBox \"Eventhandler geladen\"End SubTo load this VBA routine when you start MicroStation, it must be listed under the MS_VBAAUTOLOADPROJECTS, and the clsOpenClose module must also be loaded.Here is a class module clsOpenClose that must be created separately in the defined class modules:Dim WithEvents hooks As ApplicationPrivate Sub Class_Initialize() Set hooks = ApplicationEnd SubPrivate Sub hooks_OnDesignFileClosed ( ByVal DesignFileName As String ) MsgBox ActiveDesignFile.FullName + \"closed\"End Sub Private Sub hooks_OnDesignFileOpened ( ByVal Design Filename As String ) MsgBox ActiveDesignFile.FullName + \"opened\"End SubIn this example, two events OnDesignFileOpened and OnDesignFileClosed are intercepted when opening and closing a drawing. They both open a message box indicating whether the file has been opened or closed.For simplicity, this example is stored as a complete VBA project and can be downloaded here:VBA routine to install and event handler" }, { "title": "MicroStation VBA创建横断面图水平、高程标尺代码", "url": "/posts/mstn-xm-vba-barcode/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, 断面图, 标尺, 代码, XM", "date": "2020-02-06 00:00:00 +0800", "snippet": "这是本人2006年左右在重庆巴山水电站时在MicroStation XM环境下编的断面处理工具中绘横断面标尺的一段代码，在MicroStation CE环境下需要作小的修改才能正常运行。其中多数功能是相同的，可以借鉴。Dim miniX As Double Dim miniY As Double Dim maxX As Double Dim maxY As Double Sub DelSingleBar() Dim dbModel As ModelReference Dim dbEle As Element Dim dbEe As ElementEnumerator Set dbModel = ActiveModelReference Set dbEe = dbModel.GraphicalElementCache.Scan Do While dbEe.MoveNext Set dbEle = dbEe.Current dbEle.IsLocked = False If dbEle.HasXData(\"(C)SurMap.com BarCreator\") Then dbModel.RemoveElement dbEle Loop End SubSub DelAllBar() Dim dbModel As ModelReference Dim dbEle As Element Dim dbEe As ElementEnumerator For Each dbModel In ActiveDesignFile.Models Set dbEe = dbModel.GraphicalElementCache.Scan Do While dbEe.MoveNext Set dbEle = dbEe.Current dbEle.IsLocked = False If dbEle.HasXData(\"(C)SurMap.com BarCreator\") Then dbModel.RemoveElement dbEle Loop Next End SubSub CrtSingleBar() Dim cmModel As ModelReference Dim cmScale As String Dim cmSide As Integer Dim cmGrid As Boolean Dim cmPaperWidth As Integer Dim cmPaperHeight As Integer Dim cmFullGrid As Boolean cmGrid = LoadGridPara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") cmScale = LoadScalePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") cmSide = LoadSidePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") If cmScale = \"\" Then cmScale = \"500\" If cmSide = 0 Then cmSide = -1 gAppName = \"(C)SurMap.com BarCreator\" 'For Each cmModel In ActiveDesignFile.Models Set cmModel = ActiveModelReference 'If cmModel.Name &lt;&gt; \"Default\" Then ActiveDesignFile.Views(1).DisplaysFill = True ViewArea cmModel '调整图纸 cmFullGrid = LoadFullGridPara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") If cmGrid And cmFullGrid Then DeterminePaper ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\", cmPaperWidth, cmPaperHeight cmPaperWidth = cmPaperWidth - 60 cmPaperHeight = cmPaperHeight - 50 If cmPaperWidth / 10 * Val(cmScale) / 100 &gt; (maxX - miniX) And cmPaperHeight / 10 * Val(cmScale) / 100 &gt; (maxY - miniY) Then miniX = miniX - (cmPaperWidth / 10 * Val(cmScale) / 100 - (maxX - miniX)) / 2 miniY = miniY - (cmPaperHeight / 10 * Val(cmScale) / 100 - (maxY - miniY)) / 2 maxX = miniX + cmPaperWidth / 10 * Val(cmScale) / 100 maxY = miniY + cmPaperHeight / 10 * Val(cmScale) / 100 End If End If '调整图纸 crtBar cmModel, miniX, miniY, maxX - miniX, maxY - miniY, Val(cmScale), cmSide, cmGrid, \"标尺_\" &amp; cmScale, \"宋体\", 2, 2 'crtBar cmModel, -135, 253, 200, 200, 500, 1, False, \"标尺\", \"宋体\", 2, 2 'End If 'Next End SubSub CrtAllBar() Dim cmModel As ModelReference Dim cmScale As String Dim cmSide As Integer Dim cmGrid As Boolean Dim cmPaperWidth As Integer Dim cmPaperHeight As Integer Dim cmFullGrid As BooleancmGrid = LoadGridPara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") cmScale = LoadScalePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") cmSide = LoadSidePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") If cmScale = \"\" Then cmScale = \"500\" If cmSide = 0 Then cmSide = -1 gAppName = \"(C)SurMap.com BarCreator\" For Each cmModel In ActiveDesignFile.Models If cmModel.Name &lt;&gt; \"Default\" And getModelXdata(cmModel, \"surmap_dx\", msdXDatumTypeString) &lt;&gt; \"dxmodel\" Then ViewArea cmModel '调整图纸 cmFullGrid = LoadFullGridPara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") If cmGrid And cmFullGrid Then DeterminePaper ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\", cmPaperWidth, cmPaperHeight cmPaperWidth = cmPaperWidth - 60 cmPaperHeight = cmPaperHeight - 50 If cmPaperWidth / 10 * Val(cmScale) / 100 &gt; (maxX - miniX) And cmPaperHeight / 10 * Val(cmScale) / 100 &gt; (maxY - miniY) Then miniX = miniX - (cmPaperWidth / 10 * Val(cmScale) / 100 - (maxX - miniX)) / 2 miniY = miniY - (cmPaperHeight / 10 * Val(cmScale) / 100 - (maxY - miniY)) / 2 maxX = miniX + cmPaperWidth / 10 * Val(cmScale) / 100 maxY = miniY + cmPaperHeight / 10 * Val(cmScale) / 100 End If End If '调整图纸 crtBar cmModel, miniX, miniY, maxX - miniX, maxY - miniY, Val(cmScale), cmSide, cmGrid, \"标尺_\" &amp; cmScale, \"宋体\", 2, 2 'crtBar cmModel, -135, 253, 200, 200, 500, 1, False, \"标尺\", \"宋体\", 2, 2 End If Next End Sub'创建标尺参数：左、右、宽、高、比例（整数分母）、左右侧（L or R）、网格（真或否）,字体样式名,字体名,字宽(毫米),字高(毫米), Sub crtBar(bModel As ModelReference, bLeft As Double, bBottom As Double, bWidth As Double, bHeight As Double, bScale As Integer, _ bSide As Integer, bGrid As Boolean, bTextStyleName As String, bFontName As String, bFontWidth_mm As Single, bFontHeight_mm As Single) Dim cbLevel As Level '绘标尺的层名 Dim cbStep As Integer '步长 Dim cbWeight As Single '竖标尺的宽度 Dim cbLeft As Integer Dim cbBottom As Integer Dim cbWidth As Integer '宽度 Dim cbHeight As Integer '循环次数 Dim cbVtime As Integer Dim cbHtime As Integer Dim cbI As Integer Dim cbVpoints(3) As Point3d Dim cbModel As ModelReference Dim cbShp As ShapeElement Dim cbText As TextElement Dim cbLineEle As LineElement '水平线 Dim cbLineStart As Point3d Dim cbLineEnd As Point3d Dim cbFontWidth As Single Dim cbFontHeight As Single '临时变量 Dim cTmpLeft As Double Dim cTmpBottom As Double Dim cTmpRight As Double Dim cTmpUp As Double Dim cTmpVtag As Point3d '高程注记位置 Dim cTmpHtag As Point3d '水平距离注记 '断面桩号等信息 Dim ProInfo As String Dim ProInfoPosition As Point3d '网格线 Dim cTmpGridHStart As Point3d '水平 Dim cTmpGridHEnd As Point3d Dim cTmpGridHLine As LineElement Dim cTmpGridVStart As Point3d '竖直 Dim cTmpGridVEnd As Point3d Dim cTmpGridVLine As LineElement Set cbLevel = FindLevel(\"断面标尺\") cbStep = Int(bScale / 100) cbWeight = 0.2 * cbStep cbLeft = (Int(bLeft / cbStep) - 1) * cbStepcbWidth = (Round(bWidth / cbStep, 0) + 2) * cbStep cbBottom = (Int(bBottom / cbStep) - 1) * cbStep cbHeight = (Round(bHeight / cbStep, 0) + 2) * cbStep cbVtime = cbHeight / cbStep cbHtime = cbWidth / cbStep '字高,将以mm为单位的字高换算为绘图单位 cbFontWidth = bFontWidth_mm / 10 * cbStep cbFontHeight = bFontHeight_mm / 10 * cbStep Set cbModel = bModel For cbI = 1 To cbVtime If bSide &lt;= 0 Then cTmpLeft = cbLeft cTmpRight = cTmpLeft + cbWeight Else cTmpLeft = cbLeft + cbWidth - cbWeight cTmpRight = cTmpLeft + cbWeight End If cTmpBottom = (cbI - 1) * cbStep + cbBottom cTmpUp = cTmpBottom + cbStep cbVpoints(0).X = cTmpLeft cbVpoints(0).Y = cTmpBottom cbVpoints(1).X = cTmpRight cbVpoints(1).Y = cTmpBottom cbVpoints(2).X = cTmpRight cbVpoints(2).Y = cTmpUp cbVpoints(3).X = cTmpLeft cbVpoints(3).Y = cTmpUp '======================= '竖标尺 If cbI Mod 2 = 0 Then Set cbShp = CreateShapeElement1(Nothing, cbVpoints, msdFillModeFilled) Else Set cbShp = CreateShapeElement1(Nothing, cbVpoints, msdFillModeNotFilled) '竖标尺 '======================= '*********************** '======================= '调整高程注记与竖标尺的间距在此 '竖标尺注记 cTmpVtag = cbVpoints(2) If bSide &lt;= 0 Then cTmpVtag.X = cTmpVtag.X + 0.1 * cbStep '与竖标尺的间距,0.1为0.1公分,cbStep分图上一公分所对应的绘图长度 Else cTmpVtag.X = cTmpVtag.X - 0.1 * cbStep - cbFontWidth * 3 '与竖标尺的间距,0.1为0.1公分,cbStep分图上一公分所对应的绘图长度 End If cTmpVtag.Y = cTmpVtag.Y + cbFontHeight Set cbText = CreateTextElement1(Nothing, cTmpUp, cTmpVtag, Matrix3dIdentity) End If '调整高程注记与竖标尺的间距在此 '竖标尺注记 '======================= cbShp.LineStyle = ActiveDesignFile.LineStyles(\"0\") cbShp.Level = cbLevel cbShp.FillColor = 0 SetElementXdata cbShp, gAppName, msdXDatumTypeString, \"Type:Bar\" '锁定并禁止捕捉 cbShp.IsLocked = True cbShp.IsSnappable = False cbModel.AddElement cbShp cbShp.Rewrite cbShp.Redraw Set cbText.TextStyle = adTextStyle(bTextStyleName, bFontName, cbFontWidth, cbFontHeight) cbText.Level = cbLevel cbText.Color = 0 SetElementXdata cbText, gAppName, msdXDatumTypeString, \"Type:Bar\" '锁定并禁止捕捉 ' cbText.IsLocked = True ' cbText.IsSnappable = False cbModel.AddElement cbText cbText.Rewrite cbText.Redraw'网络线:水平线###################### If bGrid Then If bSide = -1 Then '标尺在左侧时 cTmpGridHStart.X = cTmpRight cTmpGridHEnd.X = cTmpRight + cbWidth - cbWeight Else '标尺在右侧时 cTmpGridHStart.X = cbLeft cTmpGridHEnd.X = cbLeft + cbWidth - cbWeight End If cTmpGridHStart.Y = cTmpUp cTmpGridHEnd.Y = cTmpUp Set cTmpGridHLine = CreateLineElement2(Nothing, cTmpGridHStart, cTmpGridHEnd) cTmpGridHLine.LineStyle = ActiveDesignFile.LineStyles(\"0\") cTmpGridHLine.Level = cbLevel cTmpGridHLine.Color = 64 SetElementXdata cTmpGridHLine, gAppName, msdXDatumTypeString, \"Type:Bar\" '锁定并禁止捕捉 cTmpGridHLine.IsLocked = True cTmpGridHLine.IsSnappable = False cbModel.AddElement cTmpGridHLine cTmpGridHLine.Redraw cTmpGridHLine.Rewrite End If '网络线:水平线###################### Next '********************** '水平标尺 If bSide &lt;= 0 Then '竖标尺在左边 cbLineStart.X = cbLeft + cbWeight cbLineStart.Y = cbBottom cbLineEnd.X = cbLeft + cbWidth cbLineEnd.Y = cbBottom Else '竖标尺在右边 cbLineStart.X = cbLeft cbLineStart.Y = cbBottom cbLineEnd.X = cbLineStart.X + cbWidth - cbWeight cbLineEnd.Y = cbBottom End If Set cbLineEle = CreateLineElement2(Nothing, cbLineStart, cbLineEnd) SetElementXdata cbLineEle, gAppName, msdXDatumTypeString, \"Type:Bar\" cbLineEle.LineStyle = ActiveDesignFile.LineStyles(\"0\") cbLineEle.Level = cbLevel '锁定并禁止捕捉 cbLineEle.IsLocked = True cbLineEle.IsSnappable = False cbModel.AddElement cbLineEle cbLineEle.Rewrite cbLineEle.Redraw '水平标尺 '********************** For cbI = 1 To cbHtime If bSide &lt;= 0 Then '左 cbLineStart.X = cbLeft + cbI * cbStep cbLineEnd.X = cbLeft + cbI * cbStep Else '右 cbLineStart.X = cbLeft + (cbI - 1) * cbStep cbLineEnd.X = cbLeft + (cbI - 1) * cbStep End If cbLineStart.Y = cbBottom cbLineEnd.Y = cbBottom + 0.2 * cbStep Set cbLineEle = CreateLineElement2(Nothing, cbLineStart, cbLineEnd) cbModel.AddElement cbLineEle SetElementXdata cbLineEle, gAppName, msdXDatumTypeString, \"Type:Bar\" '锁定并取消捕捉 cbLineEle.Level = cbLevel cbLineEle.LineStyle = ActiveDesignFile.LineStyles(\"0\") cbLineEle.IsLocked = True cbLineEle.IsSnappable = False cbLineEle.Rewrite cbLineEle.Redraw'水平距离注记位置 cTmpHtag.X = cbLineStart.X - cbFontWidth cTmpHtag.Y = cbLineEnd.Y + 0.1 * cbStep + cbFontHeight Set cbText = CreateTextElement1(Nothing, cbLineStart.X, cTmpHtag, Matrix3dIdentity) Set cbText.TextStyle = adTextStyle(bTextStyleName, bFontName, cbFontWidth, cbFontHeight) SetElementXdata cbText, gAppName, msdXDatumTypeString, \"Type:Bar\" cbText.Level = cbLevel cbText.Color = 0 '锁定并取消捕捉 'cbText.IsLocked = True 'cbText.IsSnappable = False cbModel.AddElement cbText cbText.Rewrite cbText.Redraw '网络线:竖直线###################### If bGrid Then cTmpGridVStart.X = cbLineStart.X cTmpGridVStart.Y = cTmpHtag.Y cTmpGridVEnd.X = cbLineStart.X cTmpGridVEnd.Y = cTmpHtag.Y + cbHeight - 0.3 * cbStep - cbFontHeight Set cTmpGridVLine = CreateLineElement2(Nothing, cTmpGridVStart, cTmpGridVEnd) cTmpGridVLine.Level = cbLevel cTmpGridVLine.Color = 64 SetElementXdata cTmpGridVLine, gAppName, msdXDatumTypeString, \"Type:Bar\" '锁定并取消捕捉 cTmpGridVLine.LineStyle = ActiveDesignFile.LineStyles(\"0\") cTmpGridVLine.IsLocked = True cTmpGridVLine.IsSnappable = False cbModel.AddElement cTmpGridVLine cTmpGridVLine.Rewrite cTmpGridVLine.Redraw End If '网络线:竖直线###################### Next ProInfo = \"桩号:\" &amp; cbModel.Name &amp; \" 比例:1:\" &amp; cbStep * 100 ProInfoPosition.X = cbLeft + (cbWidth - Len(ProInfo) * 0.3 * cbStep) / 2 ProInfoPosition.Y = cbBottom + cbHeight + 0.5 * cbStep '桩号放在上面 'ProInfoPosition.Y = cbBottom - 0.1 * cbStep '桩号放在下面 Set cbText = CreateTextElement1(Nothing, ProInfo, ProInfoPosition, Matrix3dIdentity) cbModel.AddElement cbText Set cbText.TextStyle = adTextStyle(bTextStyleName, bFontName, cbFontWidth, cbFontHeight) SetElementXdata cbText, gAppName, msdXDatumTypeString, \"Type:Bar\" cbText.TextStyle.Height = 0.4 * cbStep cbText.TextStyle.Width = 0.4 * cbStep cbText.Color = 0 cbText.Level = cbLevel cbText.Rewrite cbText.Redraw End Sub'Sub TestTextStyle() 'adTextStyle \"覃东\", \"宋体\", 10, 10 'End Sub '查找并设置文本样式格式 '参数:样式名、字体名、高度、宽度 '若样式不存在则创建，若存在则设置 'Function adTextStyle(txtStyleName As String, txtFontName As String, txtStyleHeight As Single, txtStyleWidth As Single) As TextStyle 'Dim aTextStyle As TextStyle 'Set aTextStyle = ActiveDesignFile.TextStyles.Find(txtStyleName) 'If aTextStyle Is Nothing Then 'Set aTextStyle = ActiveDesignFile.TextStyles.Add(Nothing, txtStyleName) 'aTextStyle.Height = txtStyleHeight 'aTextStyle.Width = txtStyleWidth 'aTextStyle.Font = FindFontByName(txtFontName) ''Else ''aTextStyle.Height = txtStyleHeight ''aTextStyle.Width = txtStyleWidth ''aTextStyle.Font = FindFontByName(txtFontName) 'End If 'Set adTextStyle = aTextStyle 'End FunctionFunction FindFontByName(fFontName As String) As Font Dim fFonts As Fonts Dim fFont As Font Set FindFontByName = Nothing Set fFonts = ActiveDesignFile.Fonts For Each fFont In fFonts If fFont.Name = fFontName Then Set FindFontByName = fFont NextEnd Function'********************查找绘图范围(只处理直线对象)************** Sub ViewArea(vaModel As ModelReference) Dim m As ModelReference Dim Ee As ElementEnumerator Dim Ele As LineElement miniX = 1E+15 miniY = 1E+15 maxX = -1E+15 maxY = -1E+15 Set m = vaModel Set Ee = m.GraphicalElementCache.Scan Do While Ee.MoveNext If Ee.Current.Type = msdElementTypeLine Or Ee.Current.Type = msdElementTypeLineString Then If Ee.Current.Level.IsEffectivelyDisplayedInView(ActiveDesignFile.Views(1)) Then Set Ele = Ee.Current MiniMax Ele End If End If Loop 'ShowMessage miniX &amp; \" \" &amp; miniY &amp; \" \" &amp; maxX &amp; \" \" &amp; maxY End Sub Sub MiniMax(Ele As LineElement) Dim tEle As LineElement Dim vPoints() As Point3d Dim i As Long vPoints = Ele.GetVertices For i = LBound(vPoints) To UBound(vPoints) If vPoints(i).X &lt; miniX Then miniX = vPoints(i).X If vPoints(i).Y &lt; miniY Then miniY = vPoints(i).Y If vPoints(i).X &gt; maxX Then maxX = vPoints(i).X If vPoints(i).Y &gt; maxY Then maxY = vPoints(i).Y Next End Sub" }, { "title": "MicroStation VBA-创建圆弧或修改属性", "url": "/posts/mstn-vba-create-arc-modify-properties/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, 加载, 代码, 圆弧, 属性", "date": "2020-02-05 00:00:00 +0800", "snippet": "The following small code example describes how to create an arc, find all arcs in the active model and modify some properties like center point color linestyle line weight remove a specific element with given id from the active model.Option Explicit ' always recommended to use. Makes sure all variable are declared before usePrivate elementID As DLongSub ArcCreate()' Create ArcElementDim oArc As ArcElementDim p(2) As Point3d p(0) = Point3dZero p(1) = Point3dOne p(2) = Point3dFromXYZ(2, 0, 0) Set oArc = CreateArcElement3(Nothing, p(0), p(1), p(2)) ' This is one of 6 different functions to create an arc ActiveModelReference.AddElement oArc ' after creation the elements needs to be added to the active model elementID = oArc.IDEnd SubSub ArcSearchAndModify()' Scan active model for arcs and change some propertiesDim oArc As ArcElementDim ee As ElementEnumeratorDim sc As New ElementScanCriteria ' Scan criteria to search for specific attributes sc.ExcludeAllTypes sc.IncludeType msdElementTypeArc ' search for arcs Set ee = ActiveModelReference.Scan(sc) ' scan active model for all elements matching the scan citeria Do While ee.MoveNext Set oArc = ee.Current.AsArcElement Dim pCenter As Point3d pCenter = oArc.CenterPoint Dim pMove As Point3d pMove = Point3dFromXYZ(1, -1, -1) oArc.Move pMove oArc.PrimaryRadius = oArc.PrimaryRadius * 1.2 oArc.Color = 11 oArc.LineWeight = 4 Set oArc.LineStyle = ActiveDesignFile.LineStyles(5) oArc.Rewrite ' important to rewrite element in the designfile to save changes LoopEnd SubSub ArcDelete() Dim oArc As ArcElement 'on error resume next If DLongToString(elementID) &lt;&gt; \"0\" Then Set oArc = ActiveModelReference.GetElementByID(elementID) ' get Arc with given ID Debug.Print DLongToString(oArc.ID), CStr(oArc.ID64) ActiveModelReference.RemoveElement oArc ' delete element from active model elementID = DLongFromString(\"0\") End IfEnd Sub" }, { "title": "MicroStation VBA-Automatic Subroutine Loading", "url": "/posts/mstn-vba-Automatic-Subroutine-Loading/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, 加载, 代码", "date": "2020-02-05 00:00:00 +0800", "snippet": "The naming of a subroutine generally does not matter. One exception, however, is the name OnProjectLoad. If a subroutine gets this name, it is automatically started as soon as it is loaded.This makes it much easier to use when you start MicroStation to load a VBA project because not only does it load, it runs.Here is a small example:Sub OnProjectLoad () MsgBox \"Hello, I was just loaded\" ActiveWorkspace.AddConfigurationVariable \"new_variable\", \"testvalue\", TrueEnd SubIf a dialog box is opened, it means that the subroutine has executed. A configuration variable is then set and written in the UCF file.Since this subroutine is executed automatically at startup, the project needs to be loaded automatically. It must be listed in the variables MS_VBAAUTOLOADPROJECTS.You can also edit the variable or simply make a hook in the project editor as shown circled here:When you restart MicroStation, the OnProjectLoad routine is automatically loaded and executed, as seen below:Not only does this screenshot show that the routine was executed, but that the subroutine is already running during the startup of MicroStation. The splash-screen of MicroStation is still behind the message box so the subroutine has already been carried out before the MicroStation Manager to select a drawing appears.It is important at this point to note that although commands can be executed, commands relating to the contents of a drawing lead to errors. It is still possible,however the installation of an event handler that catches the opening of a drawing is required. More information about this can be found in the following article." }, { "title": "MicroStation VBA-创建直线代码(CreateLineTest)", "url": "/posts/mstn-vba-create-line-code/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, 直线, 代码", "date": "2020-02-03 00:00:00 +0800", "snippet": "This function requires 2 points to create a line, which we then may place into the drawing. A VBA code example using this function may look like this:Sub CreateLineTest()Dim oLine As LineElementDim pStart As Point3dDim pEnd As Point3d pStart = Point3dFromXYZ(10, 20, 30) pEnd = Point3dFromXYZ(70, 40, 20) Set oLine = CreateLineElement2(Nothing, pStart, pEnd) ActiveModelReference.AddElement oLineEnd Sub" }, { "title": "AutoCAD Civil 3D本地化模板下载及设置", "url": "/posts/civil3d-template/", "categories": "Civil3D, 模板", "tags": "模板, Civil3D, AutoCAD", "date": "2019-11-21 23:14:54 +0800", "snippet": " 模板下载 模板设置 地形点样式 曲面（三角网及等高线）样式 横断面样式 安装AutoCAD Civil3D后默认使用的是其自带的公制模板，其中各种标签、样式均不符合我们国内的标准，因此必须使用本地化地制图模板。参照本文说明完成模板的设置。模板下载 链接：https://share.weiyun.com/5nhj0Fw 密码：njwxw8模板设置打开Civil 3D后输入命令“op”打开设置窗口：选中“文件”选项卡，展开“样板设置”、“快速新建的默认样板文件名”，点右侧的“浏览”找到下载的模板文件打开即可完成设置。至此完成模板的设置。本模板对点、等高线、横断面图的样式和标签进行了针对性的设置：地形点样式曲面（三角网及等高线）样式横断面样式" }, { "title": "测量队数据文件命名规则", "url": "/posts/filename-rules/", "categories": "测量测绘, 规范", "tags": "规范", "date": "2019-11-20 23:14:54 +0800", "snippet": " 文件名包含以下部分： 日期-单位工程名-工作内容-数据分类（桩号、高程范围）.扩展名 其中： 要求及说明： 文件名包含以下部分：日期-单位工程名-工作内容-数据分类（桩号、高程范围）.扩展名如： 2019-10-01 上库主坝左岸原始地形数据(K0+000.00~K0+100.00;EL.300.00~EL.400.00).dat其中： 日期必须为 2019-10-01 格式，单日前加 0 占位； “单位工程名称”取“2.国网新源公司抽水蓄能电站工程项目划分导则.pdf”表中“单位工程名称”项； 数据分类为：原始地形、验收地形、分界地形等； 扩展名通常为：.dat、.dwg 等； 如遇无法确定文件名称请询问文书、副队长、队长，严禁如 1.dat、111.dat 之类的随意命名。 要求及说明： 文件名称中工作内容描述尽量详细； 文件名中的分部、单位工程名及数据分类采用各部门通用的习惯性短语如“上库”、“下库”、“原始数据”等； 本命名规则是为了尽可能多地包含关键词以便于后期进行检索。 " }, { "title": "WPS表格快速批量打印测量成果表", "url": "/posts/cass-dat-print/", "categories": "编程开发, VBA-Excel", "tags": "Excel, WPS, CASS, VBA", "date": "2019-09-18 00:00:00 +0800", "snippet": " 程序要求 控制分面 固定表格 设置页面格式程序要求外业测量结束后成果数据从仪器下载后，需要立即打印成纸质版各方签字后存档。每次测量生成的数据或多或少，而完全靠人工排版不仅工作量巨大单调，且时间不允许。因此利用Excel或WPS宏进行批处理就显得非常必要。两河口水电站大坝标测量成果利用VBA宏完成测量成果的打印，效果较好。生成的表格如下图：生成的数据表打印预览：当初在设置表格时所有参数均设置在VBA代码中，因近期将前往新的工地，此表格需作通用性调整。 WPS表格中删除分页符的方法：选中分页符下一行第一列的单元格，在”页面布局“工具面板上的”插入分页符“工具列表中用”删除分页符“删除添加的分页符。自动产生的分页不能用此方法删除。控制分面以下代码在每页尾部自动添加一个分页符，以前的表格通过设置自动产生分页，在打印环境发生变化如不同的打印机和调整页眉、页脚后就会分页错位。按数据个数指定分页可有效避免分页错乱。ActiveSheet.HPageBreaks.Add Before:=Range(\"A\" &amp; ((PageIndex + 1) * 50 + Start_Row)) '每一页尾添加分页符固定表格设置列宽代码：Sub test()\tSheet1.Range(\"a:b\").ColumnWidth = 14 '设置A，B列为14像素宽\tSheet1.Columns(3).ColumnWidth = 15 '设置c列为15像素宽\tSheet1.Columns(\"d:e\").ColumnWidth = 20 '设置d，e列为20像素宽End Sub表中代码： With ActiveSheet '设置列宽 Columns(\"A\").ColumnWidth = 5.6 Columns(\"B\").ColumnWidth = 12.13 Columns(\"C\").ColumnWidth = 11 Columns(\"D\").ColumnWidth = 8.2 Columns(\"E\").ColumnWidth = 5.6 Columns(\"F\").ColumnWidth = 12.13 Columns(\"G\").ColumnWidth = 11 Columns(\"H\").ColumnWidth = 8.2 '设计头部行高 Rows(1).RowHeight = 14.25 Rows(2).RowHeight = 22.5 Rows(3).RowHeight = 14.25 Rows(4).RowHeight = 15 Rows(5).RowHeight = 15 Rows(\"6:1000\").RowHeight = 13 End With设置页面格式 With ActiveSheet.PageSetup .LeftHeader = \"\" .CenterHeader = \"\" .RightHeader = \"\" .LeftFooter = \"\" .CenterFooter = \"&amp;10测 量: 测量监理: 测量中心:\" &amp; Chr(10) &amp; \"　　 \" &amp; Chr(10) &amp; \"第&amp;P页，共&amp;N页\" .RightFooter = \"\" .Orientation = xlPortrait .Zoom = 100 .FirstPageNumber = True .LeftMargin = 2.1 * lenUnitFactor '59.527559 2.1cm .RightMargin = 2.1 * lenUnitFactor '59.527559 2.1cm .TopMargin = 0.9 * lenUnitFactor '25.511811 0.9cm .BottomMargin = 1.1 * lenUnitFactor '31.181102 1.1cm .HeaderMargin = 0.7 * lenUnitFactor '19.84252 0.7cm .FooterMargin = 0.7 * lenUnitFactor '19.84252 0.7cm .CenterHorizontally = False .CenterVertically = False .PrintErrors = xlPrintErrorsDisplayed .Order = xlDownThenOver .PrintGridlines = False .PrintHeadings = False .BlackAndWhite = False .PrintQuality = 600 .PaperSize = xlPaperA4' .PrintComments = -4142' .PrintArea = \"$A$5:$H$205\" .PrintTitleRows = \"$1:$5\" .PrintTitleColumns = \"$A:$H\" End With添加一个参数表，将个性参数放在此表中随时可调。未完待续。。。" }, { "title": "Kotlin入门之字符串及其格式化", "url": "/posts/kotlin-string/", "categories": "编程开发, kotlin", "tags": "Kotlin, 字符串", "date": "2019-09-11 00:00:00 +0800", "snippet": "基本变量类型可以通过toString方法转为字符串类型。反过来，字符串类型又该如何转为基本变量类型？如果使用Java编码，有以下几种转换方式： 字符串转整型：Integer.parseInt(***) 字符串转长整型：Long.parseLong(***) 字符串转浮点数：Float.parseFloat(***) 字符串转双精度数：Double.parseDouble(***) 字符串转布尔型：Boolean.parseBoolean(***) 字符串转字符数组：调用String对象的toCharArray方法就上面的转换情况来看，Java的实现方式比较繁琐，既需要其它类型的类名，有需要其它类型的转换方法。而在Kotlin这边，转换类型相对简单，并且与基本变量类型之间的转换保持一致，具体说明如下： 字符串转整型：调用String对象的toInt方法 字符串转长整型：调用String对象的toLong方法 字符串转浮点数：调用String对象的toFloat方法 字符串转双精度数：调用String对象的toDouble方法 字符串转布尔型：调用String对象的toBoolean方法 字符串转字符数组：调用String对象的toCharArray方法显而易见，Kotlin对字符串的类型转换更友好，也更方便记忆。当然，转换类型只是字符串的基本用法，还有更多处理字符串的其他用法，比如查找子串、替换子串、截取指定位置的子串、按特定字符分隔子串等等，在这方面Kotlin基本兼容Java的相关方法。对于查找子串的操作，二者都调用indexOf方法；对于截取指定位置子串的操作，二者都调用substring方法；对于替换子串的操作，二者都调用replace方法；对于按特定字符分隔子串的操作，二者都调用split方法。下面是Kotlin使用indexOf和substring方法的代码例子： val origin:String = tv_origin.text.toString() var origin_trim:String = origin if (origin_trim.indexOf('.') &gt; 0) { origin_trim = origin_trim.substring(0, origin_trim.indexOf('.')) }在这些字符串处理方法里面，唯一的区别是split方法的返回值，在Java中，split方法返回的是String数组，即String[]；但在Kotlin中，split方法返回的是String队列，即List。下面是Kotlin使用split方法的示例代码： btn_split.setOnClickListener { var strList:List&lt;String&gt; = origin.split(\".\") var strResult:String = \"\" for (item in strList) { strResult = strResult + item + \", \" } tv_convert.text = strResult }若想获取字符串某个位置的字符，这个看似简单的需求，但Java实现之时却有点繁琐，只能调用substring方法去截取指定位置的字符串，如下所示： String result = origin.substring(number, number+1); tv_convert.setText(result);现在使用Kotlin实现上述需求，就简单多了，因为Kotlin允许直接通过下标访问指定位置的字符，代码如下： tv_convert.text = origin[number].toString()同时，Kotlin也支持字符串通过get方法获取指定位置上的字符，代码如下： tv_convert.text = origin.get(number).toString()如此一来，Kotlin的代码不但更加精炼，而且可读性也增强了。Kotlin对字符串带来的便利并不限于此，大家知道，Java如果要把几个变量拼接成字符串，要么用加号强行拼接，要么用String.format函数进行格式化。可是前者的拼接加号，时常会跟数值相加的加号混淆；而后者的格式化，还得开发者死记硬背诸如%d、%f、%s、%c、%b等等格式转换符，实在令人头痛。对于格式化这个痛点，Kotlin恰如其分地进行了优化，何必引入这些麻烦的格式转换符呢？直接在字符串中塞进“$变量名”表示此处引用该变量的值，岂不妙哉！心动不如行动，赶紧动起手来，看看Kotlin如何格式化字符串，代码如下所示： btn_format.setOnClickListener { tv_convert.text = \"字符串值为 $origin\" }这里要注意，符号$后面跟变量名，系统会自动匹配最长的变量名。比如下面这行代码，打印出来的是变量origin_trim的值，而不是origin的值： btn_format.setOnClickListener { tv_convert.text = \"字符串值为 $origin_trim\" }另外，有可能变量会先进行运算，再把运算结果拼接到字符串中。此时，则需用大括号把运算表达式给括起来，具体代码如下： btn_length.setOnClickListener { tv_convert.text = \"字符串长度为 ${origin.length}\" }注意到在Kotlin中，美元符号$属于特殊字符，因此不能直接打印它，必须经过转义才可打印。转义的办法是使用“${‘’}”表达式，该表达式外层的“${‘’}”为转义声明，内层的“”为需要原样输出的字符串，所以通过表达式“${‘$’}”即可打印一个美元符号，示例代码如下所示： btn_dollar.setOnClickListener { tv_convert.text = \"美元金额为 ${'$'}$origin\" }如果只是对单个美元符号做转义，也可直接在符号$前面加个反斜杆，即“$”，代码如下： btn_dollar.setOnClickListener { tv_convert.text = \"美元金额为 \\$$origin\" }不过一个反斜杆仅仅对一个字符进行转义，如果要对一个字符串做转义，也就是把某个字符串的所有字符原样输出，那么只能采用形如“${‘***’}”的表达式了，该表达式用单引号把待转义的字符串包起来，好处是能够保留该字符串中的所有特殊字符。下面来个Kotlin处理字符串的效果动图：" }, { "title": "Kotlin基础之文件读、写", "url": "/posts/kotlin-file-read-write/", "categories": "编程开发, kotlin", "tags": "Kotlin, 文件", "date": "2019-09-11 00:00:00 +0800", "snippet": " 终端IO 文件IO 遍历文件树 网络IOKotlin的IO操作都在kotlin.io包下。Kotlin的原则就是Java有的就直接利用，没有的才自己想办法写。因此Kotlin的IO操作主要是依靠扩展方法，在原有的Java类上添加功能实现的。这一点倒是和Groovy有点像。下面介绍的很多方法都有一个Charset参数，可以直接要使用的字符集，默认是UTF-8。如果需要其他的字符集，用这个参数指定就行了。终端IO如果学过C++的同学可能会对Java超长的输出语句System.out.println()所震惊。同样的工作在C++里面只需要简单的cout«就可以完成。幸好，在Kotlin里面很简单，只需要使用println或者print这两个全局函数即可。我们不再需要冗长的前缀。从终端读取数据也很简单，最基本的方法就是全局函数readLine，它直接从终端读取一行作为字符串。如果需要更进一步的处理，可以使用Kotlin提供的各种字符串处理函数来处理和转换字符串。文件IOKotlin为java.io.File提供了大量好用的扩展方法，详细的扩展方法见这里java.io.File。这里我就跳着说几个最常用最好用的吧。首先先看读取文件。如果需要简单读取一个文件，可以使用readText()方法，它直接返回了整个文件内容。如果希望按行读取，还可以使用readLines()方法，这会返回一个行字符串数组，我们可以随意操作。如果希望直接操作字节数组，那就使用readBytes()。如果想使用传统的Java方式，Kotlin也能满足你。fun readFile() { val filename = \"\"\"C:\\Windows\\System32\\drivers\\etc\\hosts\"\"\" val file = File(filename) val contents = file.readText() println(contents) //大写前三行 file.readLines().take(3).forEach { println(it.toUpperCase()) } //直接处理行 file.forEachLine(action = ::println) //读取为bytes val bytes: ByteArray = file.readBytes() println(bytes.joinToString(separator = \"\")) //直接处理Reader或InputStream val reader: Reader = file.reader() val inputStream: InputStream = file.inputStream() val bufferedReader: BufferedReader = file.bufferedReader()}和读取文件类似，写入文件也很简单。我们可以写入字符串，也可以写入字节流。还可以直接使用Java的Writer或者OutputStream。fun writeFile() { val currentDir = System.getProperty(\"user.dir\") + \"\\\\out\" val file = File(currentDir, \"hehe.txt\") file.writeText(\"呵呵呵哈哈哈\") println(file.readText()) file.writeBytes(byteArrayOf(12, 56, 83, 57)) println(file.readText()) //追加方式写入字节或字符 file.appendBytes(byteArrayOf(93, 85, 74, 93)) file.appendText(\"吼啊\") println(file.readText()) //直接使用writer和outputstream val writer: Writer = file.writer() val outputStream: OutputStream = file.outputStream() val printWriter: PrintWriter = file.printWriter()}遍历文件树和Groovy一样，Kotlin也提供了方便的功能来遍历文件树。遍历文件树需要调用扩展方法walk()。它会返回一个FileTreeWalk对象，它有一些方法用于设置遍历方向和深度，详情参见FileTreeWalk。下面的例子遍历了指定文件夹下的所有可执行文件。fun traverseFileTree() { val systemDir = File(\"\"\"C:\\Windows\"\"\") val fileTree: FileTreeWalk = systemDir.walk() fileTree.maxDepth(1) .filter { it.isFile } .filter { it.extension == \"exe\" } .forEach(::println) }网络IOKotlin为java.NET.URL增加了两个扩展方法，readBytes和readText。我们可以方便的使用这两个方法配合正则表达式实现网络爬虫的功能。下面第一个例子简单的获取了百度首页的源代码。第二个例子先获取了必应首页图片的XML格式信息，然后通过正则表达式和分组获取图片的相对URL并组合出实际URL，然后调用readBytes()方法读取到字节流并写入文件。fun readFromNet() { //返回百度首页 val baidu = URL(\"http://www.baidu.com\") val contents = baidu.readText() //println(contents) //获取必应首页图片并保存 //获取XML格式图片信息 val bing = URL(\"http://www.bing.com/HPImageArchive.aspx?format=xml&amp;idx=0&amp;n=1&amp;mkt=en-US\") val texts = bing.readText() //获取url地址和文件名 val regex = Regex(\"\"\"&lt;url&gt;(.*)&lt;/url&gt;\"\"\") val result = regex.find(texts) val imageUrl = \"http://www.bing.com\" + result!!.groupValues[1] val filename = imageUrl.substring(imageUrl.lastIndexOf('/')) //写入文件 val output = File(System.getProperty(\"user.dir\") + \"\\\\out\", filename) val requestUrl = URL(imageUrl) output.writeBytes(requestUrl.readBytes()) }在项目相应文件夹下我们可以看到下载好的图片。" }, { "title": "Kotlin入门之声明与操作数组", "url": "/posts/kotlin-array/", "categories": "编程开发, kotlin", "tags": "Kotlin", "date": "2019-09-11 00:00:00 +0800", "snippet": "Kotlin中数组声明和定义：var string_array:Array&lt;String&gt; = arrayOf(\"How\", \"Are\", \"You\")var int_array:Array&lt;Int&gt; = arrayOf(1, 2, 3)var long_array:Array&lt;Long&gt; = arrayOf(1, 2, 3)var float_array:Array&lt;Float&gt; = arrayOf(1.0f, 2.0f, 3.0f)var double_array:Array&lt;Double&gt; = arrayOf(1.0, 2.0, 3.0)var boolean_array:Array&lt;Boolean&gt; = arrayOf(true, false, true)var char_array:Array&lt;Char&gt; = arrayOf('a', 'b', 'c')数组操作：btn_string.setOnClickListener {var str:String = \"\" var i:Int = 0 while (i&lt;string_array.size) { str = str + string_array[i] + \", \" //数组元素可以通过下标访问，也可通过get方法访问 //str = str + string_array.get(i) + \", \" i++ } tv_item_list.text = str}" }, { "title": "Kotlin Android TextView and EditText", "url": "/posts/kotlin-android-textview-and-edittext/", "categories": "编程开发, kotlin", "tags": "Kotlin, Android, 控件", "date": "2019-09-11 00:00:00 +0800", "snippet": " TextView EditText Example activity_main.xml MainActivity.kt Output Original URLTextViewAndroid TextView is a user interface which displays the text to the user.A simple XML code of TextView in a layout is shown below.&lt;TextView android:id=\"@+id/text_view_id\" android:layout_height=\"wrap_content\" android:layout_width=\"wrap_content\" android:text=\"hello\" /&gt;We can get and modify the content of text view defined in the XML layout in Kotlin class file as:val textView = findViewById&lt;TextView&gt;(R.id.text_view_id) textView.setText(\"string\").toString() val textViewValue = textView.textEditTextThe EditText is a user interface which is used for entering and changing the text. While using edit text in XML layout, we must specify its inputType attribute which configures the keyboard according to input type mention.The simple XML code of EditText in a layout is shown below.&lt;EditText android:id=\"@+id/editText_id\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:inputType=\"textPersonName\" android:text=\"\" /&gt; We can get and modify the content of edit text defined in the XML layout in Kotlin class file as:val editText = findViewById&lt;EditText&gt;(R.id.editText_id) val editTextValue = editText.text ExampleIn this example, we input the text value in ExitText and display its value in the TextView on clicking the Button.We are also watching the changes made over EditText using addTextChangedListener () method and TextWatcher interface.activity_main.xmlIn the activity_main.xml file add the following code.&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt; &lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" tools:context=\"example.javatpoint.com.kotlintextviewedittext.MainActivity\"&gt; &lt;TextView android:id=\"@+id/textView1\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignParentTop=\"true\" android:layout_centerHorizontal=\"true\" android:layout_marginTop=\"12dp\" android:text=\"TextView and EditText\" android:gravity=\"center\" android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\"/&gt; &lt;TextView android:id=\"@+id/textView2\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_below=\"@+id/textView1\" android:layout_marginTop=\"90dp\" android:layout_marginLeft=\"20dp\" android:layout_marginStart=\"20dp\" android:textSize=\"16sp\" android:text=\"Provide Input\" /&gt; &lt;TextView android:id=\"@+id/textView3\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_below=\"@+id/textView2\" android:layout_marginTop=\"50dp\" android:layout_marginLeft=\"20dp\" android:layout_marginStart=\"20dp\" android:textSize=\"16sp\" android:text=\"Display Output\" /&gt; &lt;EditText android:id=\"@+id/editText\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignBaseline=\"@+id/textView2\" android:layout_alignBottom=\"@+id/textView2\" android:layout_alignParentEnd=\"true\" android:layout_alignParentRight=\"true\" android:layout_marginEnd=\"21dp\" android:layout_marginRight=\"21dp\" android:ems=\"10\" android:inputType=\"textPersonName\" android:text=\"\" /&gt; &lt;TextView android:id=\"@+id/textView4\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignLeft=\"@+id/editText\" android:layout_alignStart=\"@+id/editText\" android:layout_alignTop=\"@+id/textView3\" android:textSize=\"16sp\" android:text=\"TextView\" /&gt; &lt;Button android:id=\"@+id/button\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_below=\"@+id/textView4\" android:layout_centerHorizontal=\"true\" android:layout_marginTop=\"112dp\" android:text=\"Click Button\" /&gt; &lt;TextView android:id=\"@+id/textView5\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignEnd=\"@+id/editText\" android:layout_alignRight=\"@+id/editText\" android:layout_centerVertical=\"true\" android:text=\"reset output text\" /&gt; &lt;/RelativeLayout&gt; MainActivity.ktAdd the following code in MainActivity.kt class. In this class, we are getting the value of the edit text and display it in text view by clicking the button. At the same time, we are also watching the changes made over EditText using addTextChangedListener () method and TextWatcher interface. To learn more about TextWatcher refers to https://www.javatpoint.com/android-edittext-with-textwatcherpackage example.javatpoint.com.kotlintextviewedittext import android.support.v7.app.AppCompatActivity import android.os.Bundle import android.text.Editable import android.text.TextWatcher import android.view.View import android.widget.TextView import android.widget.Toast import kotlinx.android.synthetic.main.activity_main.* class MainActivity : AppCompatActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) button.setOnClickListener(){ val inputValue: String = editText.text.toString() if (inputValue == null || inputValue.trim()==\"\"){ Toast.makeText(this,\"please input data, edit text cannot be blank\",Toast.LENGTH_LONG).show() }else{ textView4.setText(inputValue).toString() } } textView5.setOnClickListener(){ if (textView4.text.toString() == null || textView4.text.toString().trim()==\"\"){ Toast.makeText(this,\"clicked on reset textView,\\n output textView already reset\",Toast.LENGTH_LONG).show() }else{ textView4.setText(\"\").toString() } } editText.addTextChangedListener(object: TextWatcher{ override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) { // TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates. Toast.makeText(applicationContext,\"executed before making any change over EditText\",Toast.LENGTH_SHORT).show() } override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) { // TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates. Toast.makeText(applicationContext,\"executed while making any change over EditText\",Toast.LENGTH_SHORT).show() } override fun afterTextChanged(p0: Editable?) { // TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates. Toast.makeText(applicationContext,\"executed after change made over EditText\",Toast.LENGTH_SHORT).show() } }) } }OutputOriginal URLhttps://www.javatpoint.com/kotlin-android-textview-and-edittext" }, { "title": "Kotlin Android Button Example", "url": "/posts/kotlin-android-button-example/", "categories": "编程开发, kotlin", "tags": "Kotlin, Android, 控件", "date": "2019-09-11 00:00:00 +0800", "snippet": " Kotlin Android Button 1. Implement the setOnClickListener of Button 2. Implement the View.OnClickListner and override its function 3. Adding the onClick attribute of Button in layout file and implement its function. 4. Create a Button programmatically and set it on the layout Example activity_main.xml MainActivity.kt Output Original URLKotlin Android ButtonUsing Kotlin, we can perform events on Android Button though different ways, using:1. Implement the setOnClickListener of Buttonbutton1.setOnClickListener(){ Toast.makeText(this,\"button 1 clicked\", Toast.LENGTH_SHORT).show() } 2. Implement the View.OnClickListner and override its functionbutton2.setOnClickListener(this) . . override fun onClick(view: View) { // TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates. } 3. Adding the onClick attribute of Button in layout file and implement its function.&lt;Button android:onClick=\"clickButton\"/&gt; fun clickButton(v: View){ val mToast = Toast.makeText(applicationContext,\"button 3 clicked\", Toast.LENGTH_SHORT) mToast.show() } 4. Create a Button programmatically and set it on the layoutbutton4.setLayoutParams(ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT)) button4.setId(button4_Id) button4.x = 250f button4.y = 500f button4.setOnClickListener(this) constraintLayout.addView(button4) ExampleIn this example, we will create the Button and performs event on them. Clicking on the Button, display a toast message.activity_main.xmlAdd the three Button from the Widgets palette in the activity_main.xml layout file. Its code is given below. The Button of id button3 added the onClick attribute and its function name is implemented in MainActivity class file.&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt; &lt;android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/constraintLayout\" tools:context=\"example.javatpoint.com.kotlinbutton.MainActivity\"&gt; &lt;TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Button Action Example\" app:layout_constraintBottom_toBottomOf=\"parent\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" app:layout_constraintVertical_bias=\"0.073\" android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Medium\"/&gt; &lt;Button android:id=\"@+id/button1\" android:layout_width=\"95dp\" android:layout_height=\"wrap_content\" android:layout_marginBottom=\"8dp\" android:layout_marginEnd=\"8dp\" android:layout_marginStart=\"8dp\" android:layout_marginTop=\"8dp\" android:text=\"Button 1\" app:layout_constraintBottom_toBottomOf=\"parent\" app:layout_constraintEnd_toEndOf=\"parent\" app:layout_constraintHorizontal_bias=\"0.501\" app:layout_constraintStart_toStartOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" app:layout_constraintVertical_bias=\"0.498\" /&gt; &lt;Button android:id=\"@+id/button2\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginBottom=\"80dp\" android:layout_marginEnd=\"8dp\" android:layout_marginStart=\"8dp\" android:layout_marginTop=\"8dp\" android:text=\"Button 2\" app:layout_constraintBottom_toBottomOf=\"parent\" app:layout_constraintEnd_toEndOf=\"parent\" app:layout_constraintStart_toStartOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" app:layout_constraintVertical_bias=\"0.762\" /&gt; &lt;Button android:id=\"@+id/button3\" android:layout_width=\"101dp\" android:layout_height=\"48dp\" android:layout_marginBottom=\"8dp\" android:layout_marginEnd=\"8dp\" android:layout_marginStart=\"8dp\" android:layout_marginTop=\"8dp\" android:onClick=\"clickButton\" android:text=\"Button 3\" app:layout_constraintBottom_toBottomOf=\"parent\" app:layout_constraintEnd_toEndOf=\"parent\" app:layout_constraintHorizontal_bias=\"0.502\" app:layout_constraintStart_toStartOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" app:layout_constraintVertical_bias=\"0.774\" /&gt; &lt;/android.support.constraint.ConstraintLayout&gt; MainActivity.ktAdd the following code in the MainActivity.kt class. In this class, we implement the setOnClickListener listener on the button, implements the OnClickListener of View class (View.OnClickListener) and override its function onClick. In this class, we also create a Button programmatically (button4), define its properties and set it on the layout.package example.javatpoint.com.kotlinbutton import android.support.v7.app.AppCompatActivity import android.os.Bundle import android.view.View import android.view.ViewGroup import android.widget.Button import android.widget.Toast import kotlinx.android.synthetic.main.activity_main.* class MainActivity : AppCompatActivity() , View.OnClickListener { val button4_Id: Int = 1111 override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) button1.setOnClickListener(){ Toast.makeText(this,\"button 1 clicked\", Toast.LENGTH_SHORT).show() } button2.setOnClickListener(this) // add button dynamically val button4 = Button(this) button4.setText(\"Button 4 added dynamically\") button4.setLayoutParams(ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT)) button4.setId(button4_Id) button4.x = 250f button4.y = 500f button4.setOnClickListener(this) constraintLayout.addView(button4) } override fun onClick(view: View) { // TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates. when (view.id) { R.id.button2 -&gt; Toast.makeText(this,\"button 2 clicked\", Toast.LENGTH_SHORT).show()//single line code button4_Id-&gt;{//multiline code val myToast = Toast.makeText(this,\"button 4 clicked\", Toast.LENGTH_SHORT) myToast.show() } } } fun clickButton(v: View){ val mToast = Toast.makeText(applicationContext,\"button 3 clicked\", Toast.LENGTH_SHORT) mToast.show() } }OutputOriginal URLhttps://www.javatpoint.com/kotlin-android-button" }, { "title": "Kotlin Android开发常用控件用法", "url": "/posts/kotlin-android-widgets/", "categories": "编程开发, kotlin", "tags": "Kotlin, Android, 控件", "date": "2019-09-10 00:00:00 +0800", "snippet": " Button 为按钮控件添加点击事的方法: TextView EditTextButton&lt;Button android:id=\"@+id/button\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_below=\"@+id/textView4\" android:layout_centerHorizontal=\"true\" android:layout_marginTop=\"112dp\" android:text=\"Click Button\" /&gt;&lt;EditText android:id=\"@+id/editText\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignBaseline=\"@+id/textView2\" android:layout_alignBottom=\"@+id/textView2\" android:layout_alignParentEnd=\"true\" android:layout_alignParentRight=\"true\" android:layout_marginEnd=\"21dp\" android:layout_marginRight=\"21dp\" android:ems=\"10\" android:inputType=\"textPersonName\" android:text=\"\" /&gt; &lt;TextView android:id=\"@+id/textView\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignLeft=\"@+id/editText\" android:layout_alignStart=\"@+id/editText\" android:layout_alignTop=\"@+id/textView3\" android:textSize=\"16sp\" android:text=\"TextView\" /&gt; 为按钮添加事件，当EditText控件的内容不为空时将TextView的内容设为EditText的内容。 button.setOnClickListener(){ val inputValue: String = editText.text.toString() if (inputValue == null || inputValue.trim()==\"\"){ Toast.makeText(this,\"please input data, edit text cannot be blank\",Toast.LENGTH_LONG).show() }else{ textView.setText(inputValue).toString() } } 为按钮控件添加点击事的方法: 匿名内部类: override fun onCreate(savedInstanceState: Bundle?) {super.onCreate(savedInstanceState)setContentView(R.layout.activity_main)bt_click.setOnClickListener { Toast.makeText(this,\"点击了\",Toast.LENGTH_SHORT).show();} } Activity实现全局OnClickListener接口:class MainActivity : AppCompatActivity(), View.OnClickListener { override fun onClick(v: View?) { when (v?.id) { R.id.bt_click -&gt; Toast.makeText(this, \"点击了\", Toast.LENGTH_SHORT).show() } } override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) bt_click.setOnClickListener(this) }} 指定xml的onClick属性:&lt;Button android:id=\"@+id/bt_click\" android:layout_width=\"match_parent\" android:layout_height=\"50dp\" android:onClick=\"click\" android:text=\"点击\" /&gt;fun click(v: View?) { when (v?.id) { R.id.bt_click -&gt; Toast.makeText(this, \"点击了\", Toast.LENGTH_SHORT).show() } } override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) }TextView&lt;TextView android:id=\"@+id/textView1\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignLeft=\"@+id/editText\" android:layout_alignStart=\"@+id/editText\" android:layout_alignTop=\"@+id/textView3\" android:textSize=\"16sp\" android:text=\"TextView\" /&gt; &lt;TextView android:id=\"@+id/textView2\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignEnd=\"@+id/editText\" android:layout_alignRight=\"@+id/editText\" android:layout_centerVertical=\"true\" android:text=\"reset output text\" /&gt; textView2.setOnClickListener(){ if (textView1.text.toString() == null || textView1.text.toString().trim()==\"\"){ Toast.makeText(this,\"clicked on reset textView,\\n output textView already reset\",Toast.LENGTH_LONG).show() }else{ textView1.setText(\"\").toString() } } EditText为EditText控件添加内容变更触发事件。控件定义代码如下：&lt;EditText android:id=\"@+id/editText\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignBaseline=\"@+id/textView2\" android:layout_alignBottom=\"@+id/textView2\" android:layout_alignParentEnd=\"true\" android:layout_alignParentRight=\"true\" android:layout_marginEnd=\"21dp\" android:layout_marginRight=\"21dp\" android:ems=\"10\" android:inputType=\"textPersonName\" android:text=\"\" /&gt; 实现代码如下：editText.addTextChangedListener(object: TextWatcher{ override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) { // TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates. Toast.makeText(applicationContext,\"executed before making any change over EditText\",Toast.LENGTH_SHORT).show() } //事件：变更前触发。 override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) { // TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates. Toast.makeText(applicationContext,\"executed while making any change over EditText\",Toast.LENGTH_SHORT).show() } //事件：变更时触发。 override fun afterTextChanged(p0: Editable?) { // TODO(\"not implemented\") //To change body of created functions use File | Settings | File Templates. Toast.makeText(applicationContext,\"executed after change made over EditText\",Toast.LENGTH_SHORT).show() } //事件：变更后触发。 }) " }, { "title": "Kotlin逐行读取CASS地形数据文件坐标值", "url": "/posts/kotlin-read-cass-dat-file/", "categories": "编程开发, kotlin", "tags": "Kotlin, CASS, 地形", "date": "2019-09-07 00:00:00 +0800", "snippet": " 体会 代码体会kotlin有着JAVA般强大的功能，却象VB一样简单人性化。真是很好的一门语言。因考虑到安卓强大的市场与广阔的前景，掌握其应用开发将是大有裨益的。于是着手将电脑上的安卓开发环境又重装了起来，虽然因网络不畅和SDK庞大的体积，安装开发环境是一件严竣的挑战，但经过一天多时间终于还是将其安装好了。下面是盼望已久的“hello World!”代码package hello import java.io.Fileimport kotlin.math.cosimport kotlin.math.sign // 可选的包头 fun main(args: Array&lt;String&gt;) { // 包级可见的函数，接受一个字符串数组作为参数 var tst:Int tst=add(10,26) println(tst) Greeter(\"World!\").greet() readFile() //println(\"Hello World! $tst My name is QinDong\") // 分号可以省略} fun add(x: Int, y: Int): Int { return x+y} class Greeter(val name:String){ fun greet(){ println(\"Hello $name\") }} fun readFile(){ val filename=\"\"\"d:\\地形图坐标方格网数据.dat\"\"\" val file= File(filename) //val contents=file.readText() //println(contents) println(file.readLines()[0]) //读取第一行 println(file.readLines()[0].split(\",\")[2]) //读取第一行E坐标 val line=file.readLines()[3] println(line.split(\",\")[0]) //点号 println(line.split(\",\")[1]) //代码 println(line.split(\",\")[2]) //E println(line.split(\",\")[3]) //N println(line.split(\",\")[4]) //H}" }, { "title": "Android Studio开发环境安装亲历记", "url": "/posts/AndroidStudioInstallation/", "categories": "编程开发, IDE", "tags": "Android, Kotlin", "date": "2019-09-06 00:00:00 +0800", "snippet": " 安装过程安装过程安卓开发环境主要以Eclipse+ADT和Android Studio（简称AS）两种为主，当然也可以在其它IDE上通过插件实现。而目前Google已停止对ADT的开发支持，全力推广自己的AS。进行过安卓开发的同仁们对刚接触时安卓开发环境的搭建记忆应该比较深刻，其过程可称得上紧张刺激且痛苦，搞掂之后还能给你来点快感。开发环境基本分三大块：JAVA环境（JDK）、IDE（Eclipse+ADT、Android Studio）、Android环境（SDK）。如果是现在刚准备着手学习安卓开发的童鞋，Eclipse作为已被谷歌淘汰的工具可以不予考虑，而应该全力学习用AS进行开发。由于受网络（墙）的影响，AS的安装过程是非常痛苦的。它跟以往的软件安装过程不太一样，安装好之后在运行阶段还要连到网上下一大堆东西，而国内没有好的镜像支持，多数情况会无休止的尝试连接、出错，会把你的一点点耐心消磨得干干净净，最后把头脑中一时兴起的安卓开发大业一弃了之。本人在安装AS时，头一天足足折腾了一整天，晚上整到深更半夜，最后还是带着满满的失望上床睡觉去了。睡觉前也曾想过装不起来就卸了它。但好在我在这么多年的编程过程中总结出了一条规律，不管什么艰难的问题，过一段时间一天或是几天后总会能把它搞定，现在的问题以后再来回头看就不再是问题。于是决定先把AS的僵尸姑且先放在电脑上再说，待明天或以后再抽时间倒腾一下再说。第二天上班后，把电脑带到办公室，开启继续折腾模式。把AS下面出错时显示的错误提示信息几乎都拷出来在网上搜索过一遍。CSDN里倒是有一大堆类似的问题和解决办法，但按上面所说总是不能凑效。主要是SDK的下载安装与Gradle更新。安卓SDK倒是不陌生，但那个gradle一直没有摸透是个什么东东，到现在也不道是干什么使的，只是知道AS离了它啥也干不了。一直耐心地在网上搜索各种问题的解决办法，快到中午下班前的一次Build时，提示窗口一路打勾，直到出现Run Task，才终于如释重负，AS终于被老夫搞定。搞定之后静下心来仔细想了下是什么地方起了关键作用呢？问题搞定了都不知是咋搞定的，但有一步我认为可能是关键，就是在设置Proxy时，前面使用的都是CSDN里或网上其它博客中提到的Proxy地址，直到在浏览GitHub时看到一个代理地址列表，死马当活马医地把最前面几个中的一个中国的IP地址和端口设置到AS中，可能是这步起了关键作用。现在总结下安装步骤：1、JAVA JDK的安装：https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html，下载的8u221 Windows 64版；2、Android Studio下载：https://developer.android.google.cn/studio 上下载最新版，其它地方的也下载过，但最后是在这下载的3.4版（到我写此文时仅过了一天，今天上去看就变成3.5版的了，呵呵）；3、Android SDK：https://www.androiddevtools.cn/index.html#sdk-tools （其实在网通的情况下AS是可以自己下载SDK的，只是没这个SDK tools下载得快）下载SDK Tools安装后运行，选择几个常用的SDK下载（我只选了8.0版），然后将下载的SDK拷贝或移动到某个驱动器下的“android-sdk”目录中，这是因为在AS的某一步中明确提示SDK库的路径中不能包含空格字符。上面这个地址的SDK Tools可能是为Eclipse准备的。将SDK下载一两个版本后，运行AS，按提示操作，更新后就可以了。" }, { "title": "AutoCAD Civil 3D-超高及数据编辑输入", "url": "/posts/civil3d-superelevation-data-edit/", "categories": "Civil3D, 道路", "tags": "Civil3D, 超高, 公路, 工程测量", "date": "2019-08-03 00:00:00 +0800", "snippet": " 选择路线 计算超高 导出并编辑超高数据 例：密瓦IX标A段超高数据 超高视图由于无法找到对应的设计规范，就不能通过设定相应规范自动进行超高计算。而且即使能找到合适的本地规范，由于不同的设计院采用的参数不同，通过选定设计规范进行自动超高计算目前在国内无法实现。要想设定路线的超高，只有通过手动编辑输入相关数据。我们的基本思路是先通过任意选定一个设计规范进行自动计算得到超高数据表格及其数据格式，将数据导出按格式手工输入相关点的超高坡率，将由设计规范计算的数据清空，再导入我们编辑的数据完成超高数据的设定。主要步骤如下：选择路线在右键菜单里选“编辑超高”,会提示路线无超高数据，是否需要进行超高计算：计算超高选择“立即计算超高”，弹出超高计算向导：按路线情况选择道路类型。密瓦IX标为县道，无中间带双向横坡（-2%），故选第一项：在以上对话框中设置道路宽度及横坡，点“下一步”：设置路肩参数，继续下一步：在出现上图对话框要求指定一个规范文件，因我们会在后续手动编辑超高数据，不采用以上使用规范生成的数据，故规范文件随意，保持默认直接点击“完成”，会出现根据规范文件生成的曲线超高数据表：导出并编辑超高数据在以上“超高数据表”中点击上部倒数第四个按钮“导出”功能，将此表中的数据导出到一个CSV文件里，主要是查看其数据组织格式。然后点击最后一个“清空”按钮将此表中数据清空。按数据格式在EXCEL或WPS里将数据编辑好后保存为CSV格式，再在以上超高数据表中使用导入功能将超高数据导入即可。特别注意：在编辑超高数据表时，变化点桩号必须以实际线路长输入，在导入时C3D会根据断链情况进行加减处理，如在输入时考虑了断链，则导入后会错位（即进行了两次断链考虑，第一次人工按原设计桩号输入时考虑了断链，导入时C3D再次进行了断链纠正），而且在超高数据表中无法手动更改。例：在密瓦IX标第一段起点至约学隧洞口约3.5公里，其中有两段改线发生桩号变化，第二段因在约学隧洞段，洞口位发生变化，洞口明线段长度不大，且在第一分段尾部，对本段无影响。其中K104+011.74~K104+353.31为变更改线。改线后断链点为：K104+353.31=K104+350.00，断链点后从原设计K104+350.00桩号开始，差值为3.53米。在编辑超高数据表时，此段以后的曲线变化点桩号均为按原设计桩号（即断链后桩号），导入后C3D自动进行断链处理，将桩号减去3.53米，导致在超高视图中查看时断链点后的曲线超高变化点位置与正确位置总是相差几米，经过仔细检查计算，发现导入时进行了断链处理，将桩号减去了3.53米。在将断链后的所有桩号加上3.53米即以线路实际桩号输入，再次导入，由C3D进行断链处理，数据正确。例：密瓦IX标A段超高数据附：（保存为CSV文件后可直接导入）Superelevation Region,Station,Description,Smoothing Curve Length,Left Outside Shoulder,Left Outside Lane,Left Inside Lane,Left Inside Shoulder,Right Outside Shoulder,Right Outside Lane,Right Inside Lane,Right Inside Shoulder,103160,Begin Alignment,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%1,103259.79,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%1,103273.1233,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%1,103279.79,HY,0,-4.00%,-4.00%,0.00%,0.00%,4.00%,4.00%,0.00%,0.00%1,103299.2,YH,0,-4.00%,-4.00%,0.00%,0.00%,4.00%,4.00%,0.00%,0.00%1,103305.8667,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%1,103319.2,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%2,103357.82,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%2,103367.82,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%2,103377.82,HY,0,6.00%,6.00%,0.00%,0.00%,-6.00%,-6.00%,0.00%,0.00%2,103402.96,YH,0,6.00%,6.00%,0.00%,0.00%,-6.00%,-6.00%,0.00%,0.00%2,103412.96,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%2,103422.96,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%3,103443.96,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%3,103453.96,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%3,103463.96,HY,0,-6.00%,-6.00%,0.00%,0.00%,6.00%,6.00%,0.00%,0.00%3,103477.16,YH,0,-6.00%,-6.00%,0.00%,0.00%,6.00%,6.00%,0.00%,0.00%3,103487.16,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%3,103497.16,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%4,103523.13,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%4,103534.5586,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%4,103543.13,HY,0,5.00%,5.00%,0.00%,0.00%,-5.00%,-5.00%,0.00%,0.00%4,103552.13,YH,0,5.00%,5.00%,0.00%,0.00%,-5.00%,-5.00%,0.00%,0.00%4,103560.7014,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%4,103572.13,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%5,103572.13,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%5,103582.13,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%5,103592.13,HY,0,-6.00%,-6.00%,0.00%,0.00%,6.00%,6.00%,0.00%,0.00%5,103601.65,YH,0,-6.00%,-6.00%,0.00%,0.00%,6.00%,6.00%,0.00%,0.00%5,103611.65,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%5,103621.65,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%6,103621.65,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%6,103631.65,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%6,103641.65,HY,0,6.00%,6.00%,0.00%,0.00%,-6.00%,-6.00%,0.00%,0.00%6,103671.79,YH,0,6.00%,6.00%,0.00%,0.00%,-6.00%,-6.00%,0.00%,0.00%6,103681.79,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%6,103691.79,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%7,103691.79,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%7,103705.1233,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%7,103711.79,HY,0,-4.00%,-4.00%,0.00%,0.00%,4.00%,4.00%,0.00%,0.00%7,103754.79,YH,0,-4.00%,-4.00%,0.00%,0.00%,4.00%,4.00%,0.00%,0.00%7,103761.4567,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%7,103774.79,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%8,103802.8,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%8,103814.2286,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%8,103822.8,HY,0,5.00%,5.00%,0.00%,0.00%,-5.00%,-5.00%,0.00%,0.00%8,103838.32,YH,0,5.00%,5.00%,0.00%,0.00%,-5.00%,-5.00%,0.00%,0.00%8,103846.8914,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%8,103858.32,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%9,103858.32,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%9,103868.32,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%9,103878.32,HY,0,-6.00%,-6.00%,0.00%,0.00%,6.00%,6.00%,0.00%,0.00%9,103891.16,YH,0,-6.00%,-6.00%,0.00%,0.00%,6.00%,6.00%,0.00%,0.00%9,103901.16,QBD,0,-2.00%,-2.00%,0.00%,0.00%,2.00%,2.00%,0.00%,0.00%9,103911.16,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%......30,105601.51,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%30,105614.8433,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%30,105621.51,HY,0,4.00%,4.00%,0.00%,0.00%,-4.00%,-4.00%,0.00%,0.00%30,105647.96,YH,0,4.00%,4.00%,0.00%,0.00%,-4.00%,-4.00%,0.00%,0.00%30,105654.6267,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%30,105667.96,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%32,105800.82,ZH,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%32,105816.82,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%32,105820.82,HY,0,3.00%,3.00%,0.00%,0.00%,-3.00%,-3.00%,0.00%,0.00%32,105854.05,YH,0,3.00%,3.00%,0.00%,0.00%,-3.00%,-3.00%,0.00%,0.00%32,105858.05,QBD,0,2.00%,2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%32,105874.05,HY,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%,106720.33,End Alignment,0,-2.00%,-2.00%,0.00%,0.00%,-2.00%,-2.00%,0.00%,0.00%以上数据每一个曲线的数据必须使用一个序号，序号本身并不影响超高计算，C3D将会按桩号自行排列。上面编辑生成的超高数据与规范产生的数据并不完全相同。以上数据主要根据设计图中的超高视图上曲线的主要起变点进行创建。主要有六点：分别直缓点、缓圆点、圆缓点、缓直点以及低侧两个起变点。超高方式：高侧从直缓点由正常横坡至缓圆点完成渐变到超高坡率，圆弧段全为超高坡率，再从圆缓点至缓直点变回正常横坡。低侧在高侧起变时保持不变，直至高侧坡率变为与低侧正常横坡一致（符号相反）时同时向超高坡率变化，直至缓圆点完成。后段同理。如：普通横坡为-2%，超高坡率为4%。变化方式为：高侧从直缓至缓圆点由-2%变为4%、圆弧段坡率为4%，圆缓至缓直由4%变为-2%。低侧在高侧变化到2%时起变，直至缓圆坡率达到超高-4%，圆弧段高侧4%，低侧-4%（横坡方向为中心线往两侧方向）。低侧从圆缓起变，至高侧变回-2%时结束。超高视图每一个曲线超高数据按以上六点桩号及对应的左、右侧路肩、车道坡率组织，以正常横坡-2%、超高6%为例，六点对应超高视图上的点位如下图：" }, { "title": "AutoCAD Civil 3D-点-原始数据处理", "url": "/posts/civil3d-point/", "categories": "Civil3D, 测点", "tags": "Civil3D, Point", "date": "2019-08-03 00:00:00 +0800", "snippet": " 点的创建 编辑点 点样式 点标签 点编组 点表格本篇文章介绍下Civil3D中点的主要相关概念。点是Autodesk Civil 3D中的基本构造对象。Autodesk Civil 3D的点是具有X、Y、Z的智能对象。每个点有独自的编号和名称，就像身份证一样，编号都是唯一的。每个点可以添加编号、北距、东距、高程和点描述等属性，如下图：点的创建点的创建方法有很多种。在场地设计中最常用的方法有： 手动输入点 从文本文件创建点 从地形图中创建点 从曲面创建点 从道路创建点编辑点在创建好点之后，经常会对点进行位置、标高等特性进行编辑。AutoCADCivil 3D 中编辑点的方法也有很多种。最基本的编辑办法就是和CAD中的命令一样，可以对点进行复制、移动、删除等操作。第二种办法就是通过特性来修改AutoCAD Civil 3D 中的点属性。点样式点样式实际上就是控制点在图形中的显示形式。可以让一个点以十字形、三角形、圆形、CAD中的块等不同的形态显示出来。点标签点的样式可以通过点样式以不同的形式显示出来，那么点的其他信息例如坐标、高程、名称等要显示就要通过点标签样式来显示。点编组点编组是由一些具有共同特性的点组合的一个集合。某个点只要符合了这些特性所描述的标准才能属于某个点编组。点编组在批量控制点的显示上起着很重要的作用。点表格需要对点进行统计输出数据的时候，可以通过创建点表格来实现。" }, { "title": "AutoLISP工具-快速更正等高线高程", "url": "/posts/autolisp-contour-level-adjusting/", "categories": "编程开发, AutoLISP", "tags": "等高线, AutoLISP", "date": "2019-07-31 00:00:00 +0800", "snippet": "密瓦IX标县道工程共11公里余。目前获得前期带状地形图为多幅拼接，DWG格式。图中等高线属性标高与等高线值不相符合，经检查，每幅图中在出图时将所有等高线作了升高或降低处理。但在同一幅图内，差值是常数。前几日在处理第一段时手工操作，费时费力，且容易出错。在生成曲面时才发现有极个别很小的等高线未更正，导致曲面生成后出现极高、极低点。因后续尚有9公里的带状地形等高线需要更正，工作量巨大，必须借用LISP进行批量修改。程序如下：;2019-08-06增加了等高线为二维多义线的处理办法 (defun c:zzElevCorrecting ()\t\t;程序名:zzElevCorrecting，加载后在命令行输入。 (setq elevDiff (getreal \"请输入等高线的高程差值: \")) (setq elevDist (getint \"请输入等高距: \")) (prompt \"\\n &lt;&lt;框选欲更改高程的等高线&gt;&gt;\") (setq ss (ssget))\t\t\t;取得选择集。 (setq\tn 0\tCnt 0 )\t\t\t\t\t;选择集的起始值n＝0 (repeat (sslength ss)\t\t\t;计算选择集的对象个数。 (setq en (ssname ss n))\t\t;依据索引值取出选择集中的图元名。 (setq endata (entget en))\t\t;取得对象的联合列表。 (setq oldColor (cdr (assoc 62 endata))) (setq entType (cdr (assoc 0 endata))) (setq oldLayer (cdr (assoc 8 endata))) (if\t(and (/= oldLayer \"1-地形-等高线-更正\") ;等高线为多义线时的处理\t (= entType \"LWPOLYLINE\")\t) (progn\t(setq elePl (cdr (assoc 38 endata)))\t\t\t\t\t;38表示线段的高程,elePl:多义线标高\t(setq elePlProp (assoc 38 endata)) ;elePlProp:多义线标高原属性\t(setq eleRt (+ elePl elevDiff))\t;多义线正确的高程值，其标高加上高差\t(setq eleRtProp (cons 38 eleRt));eleRtProp:加上高差改正后正确有多义经标高属性表 \t(if (= (rem eleRt (* 5 elevDist)) 0)\t (setq newColor 1)\t\t;计曲线红色\t (setq newColor 2)\t\t;首曲线黄色\t)\t(setq endata (subst eleRtProp elePlProp endata))\t\t\t\t\t;用新的属性表更改旧的属性表\t\t\t\t\t;替代成为新的关系属性\t\t\t\t\t;(setq oldLayer (assoc 8 endata))\t;找到原图层\t(setq newLayer (cons 8 \"1-地形-等高线-更正\")) ;建立新的图层\t(setq endata (subst newLayer (cons 8 oldLayer) endata))\t\t\t\t\t;把赋了高程值的等高线放在新的图层中。\t(setq\t endata (subst (cons 62 newColor) (cons 62 oldColor) endata)\t)\t(entmod endata)\t\t\t;按更新的属性列表新生成屏幕上的对象\t(setq Cnt (1+ Cnt)) )\t\t\t\t\t;progn )\t\t\t\t\t;if (if\t(and (/= oldLayer \"1-地形-等高线-更正\")\t (= entType \"POLYLINE\")\t;当等高线为二维多义线的处理\t) (progn\t(setq elePl (last (assoc 10 endata)))\t(print elePl)\t\t\t;38表示线段的高程,elePl:多义线标高\t(setq elePlProp (assoc 10 endata)) ;elePlProp:多义线标高原属性\t(setq eleRt (+ elePl elevDiff))\t;多义线正确的高程值，其标高加上高差\t(setq eleRtProp (list 10 0.0 0.0 eleRt))\t\t\t\t\t;eleRtProp:加上高差改正后正确有多义经标高属性表 \t(if (= (rem eleRt (* 5 elevDist)) 0)\t (setq newColor 1)\t\t;计曲线红色\t (setq newColor 2)\t\t;首曲线黄色\t)\t(setq endata (subst eleRtProp elePlProp endata))\t\t\t\t\t;用新的属性表更改旧的属性表\t\t\t\t\t;替代成为新的关系属性\t\t\t\t\t;(setq oldLayer (assoc 8 endata))\t;找到原图层\t(setq newLayer (cons 8 \"1-地形-等高线-更正\")) ;建立新的图层\t(setq endata (subst newLayer (cons 8 oldLayer) endata))\t\t\t\t\t;把赋了高程值的等高线放在新的图层中。\t(setq\t endata (subst (cons 62 newColor) (cons 62 oldColor) endata)\t)\t(entmod endata)\t\t\t;按更新的属性列表新生成屏幕上的对象\t(setq Cnt (1+ Cnt)) )\t\t\t\t\t;progn )\t\t\t\t\t;if (setq n (1+ n)) ) (princ (strcat \"\\n 共有&lt; \" (itoa Cnt) \" &gt;条等高线更新完毕！\") ) (prompt \"快速更正等高线高程。(C)QinDong 2019.07.31 密瓦IX标\" ) (prin1))有以下原地形图：更正后地形图：更正后将计曲线设为红色、首曲线设为黄色，更新至新层，以后执行时会自动跳过已处理过的等高线。" }, { "title": "AutoCAD Civil 3D中将CASS地形图中地形点转换成CAD点实体", "url": "/posts/autolisp-cass-point-to-entity/", "categories": "编程开发, AutoLISP", "tags": "AutoCAD, Civil3D, CASS, AutoLISP", "date": "2019-06-02 00:00:00 +0800", "snippet": "使用AutoCAD Civil 3D打开CASS生成的地形图，由于CASS地形图中的地形点是以块形式存在的，虽然我们可以使用CAD的图元对象中的块进行曲面定义，但这样做的结果就是虽有曲面但没有对应的地形点。我们需要将块状地形点转换成CAD的点对象，再在AutoCAD Civil 3D里根据CAD点生成Civil 3D格式的点对象，并加入点编组用于后组定义曲面或导出等操作。以下代码的使用方法是，用AutoCAD Civil 3D打开CASS地形图，在命令行执行代码中的命令即可，图中所有块状地形点将消失，取而代之的是生成一些CAD点。(defun C:CASS2POINT (); (setq ss (ssget \"X\" '((0 . \"insert\") (8 . \"GCD\")))) (setq ss (ssget \"X\" '((0 . \"insert\") (2 . \"GC*\")))) (setq i 0) (repeat (sslength ss) (setq ssn (ssname ss i)) (setq endata (entget ssn)) (setq blockXYZ (assoc 10 endata)) (print blockXYZ) (entmakeX (list '(0 . \"POINT\") blockXYZ)) (setq i (1+ i)) (entdel ssn) ))" }, { "title": "Civil 3D 测量应用系列-03、展点", "url": "/posts/civil3d-03-points/", "categories": "Civil3D, 测点", "tags": "Civil3D, 地形, Point", "date": "2018-10-16 00:00:00 +0800", "snippet": "一个地形点即地表上的一个三维点在我们测出平面坐标和高程后，就具有了三维坐标X、Y、Z属性。为了便于管理，通常要给这个点命名，如road01等等，特别是所测的点代表某个明显地物或地形特征点时，但对于无特殊性的地形散点，一般仅加个编号。工程测量上一般测图仅是为了计算工程量，对所测地形点顺序编号即可，如下：对于一序列具有点编号或称为点名及坐标X、Y、Z的地形点，可以按上图即测量上常用的南方CASS地形数据格式保存到计算机上，也可以用以上四个字段任何排列的文本文件保存，如：或只要点数据文件中包含X、Y、Z这三个必要字段数据，至于排列顺序可以任意排列，在Civil 3D中展点时可以自定义导入数据点文件的格式时指定X、Y、Z在文件中所在字段位置。要注意测量学上的X、Y与AutoCAD上的X、Y是相反的，通常测量专业上把坐标也称为N、E和高程H，N是AutoCAD的Y坐标，习惯上称为北坐标，E为AutoCAD的X坐标，也称为东坐标。在网上有许多的Civil 3D教程或学习视频中，都没有提到将点导入到CAD图形中这一步，而是生成曲面时由引用点数据文件路径进行曲面定义。通过对计算机上的点数据文件引用进行曲面定义虽是曲面定义中最常用的一种方法，但这种方法存在很大的缺点，那就是当我们把图完成后分发给别人拷贝到其它电脑上，由于引用的数据文件路径发生变化，所生成的曲面会失效。我们习惯于象南方CASS成图那样，第一步就是把地形点导入到图形中来，再由图中的点对象来定义曲面，在以后的图形拷贝、复制分享时就只需复制一个文件即可，在其它计算机上打开图形再不需要作任何修改。展点请先找到工具栏上的点对象,点鼠标右键：选择“创建”后弹出创建点工具栏：在Civil 3D中创建点的方法有以上七大类十几种方法，有兴趣的朋友可以一一去尝试，但我们今天要使用的是最后一个“导入点”按钮在随后出现的导入点对话框中选择对应的点数据文件格式并在计算机上指定点文件路径将点导入后，点就成为CAD图形的一部分，以后生成曲面（地形图）、剖横断面都在这个CAD图中进行即可关于在Civil 3D中进行地形展点就讲到这。未完待续，欢迎关注。" }, { "title": "利用Civil3D装配设计器(SAC)建设高度形状自适应挡土墙", "url": "/posts/hrl-civil3d-sac-dtq/", "categories": "Civil3D, 部件", "tags": "Civil3D, AutoCAD, 部件, 装配", "date": "2017-07-01 00:00:00 +0800", "snippet": "各位亲好久不见。不好意思一直被琐事拖着很久没更新。今天回过头来讲一下这个挡土墙。首先介绍一下这个挡土墙。挡土墙是指支承路基填土或山坡土体、防止填土或土体变形失稳的构造物。挡土墙通常长得比较复杂。在挡土墙横断面中，与被支承土体直接接触的部位称为墙背；与墙背相对的、临空的部位称为墙面；与地基直接接触的部位称为基底；与基底相对的、墙的顶面称为墙顶；基底的前端称为墙趾；基底的后端称为墙踵。而且根据基坑的大小，深度不同，挡土墙的形状特别的多变。比如说，这是我做过的一个挡土墙的设计要求。简单的说，该墙的墙趾啊，墙踵啊，基底下面那个把儿啊，都是随着高度变化的，而高度是随着下面这个高程图变化的。这个图里，最下面那条虚线是墙与地面的交点的高度，这里当做原点。最上面的实线是墙的顶点的高度。墙的高度H = 顶点高度 - 路面高度 （原点）这里墙脚的高度是根据墙的高度H变化的值。放在坐标系里如下：紫色是给定的参数，蓝色是可变的参数。考虑到道路中心线的走向，把方向左右反着画了。P是各点的标号。等下建模就按照这个图的记号走。因为过于复杂，C3D 现在有的装配显然不能满足要求。我们要自己建设装配。了解了基本情况，打开subassembly composer界面基本介绍：左上是工作流：就像编程开发之前需要有个流程图，写清楚谁运行完了运行谁那个，建模也需要构建一个流程，用来确定数据流向左下是属性，给各点赋值用的。右上是模型预览右下是参数定义。最开始先定义参数。在【输入、输出参数】页面点击【增加参数】就会多一个参数，重命名，添加初始值。然后定义下一个参数。最后添加完了如下：接下来确定一下参照平面。由设计图和现场勘测，这里有两个参照平面，路面，地面，还有墙脚（现场勘测给定）那个面。现在地面当坐标原点了，就定义路面和墙脚面就好了。切到【目标参数】， 输入名字，类型为高程，随便赋一个初始值，预览可见平面出来了。现在可以正式创建流程了。首先，参照平面的作用是确定初始点的位置，进而确定其他各点的位置。所以这里先处理初始点:从左侧工具栏拖拽一个过程进来，命名。双击点进去。先定义一个辅助点，就是模型图里那个A’， 在斜线上和路面所在平面的交点上。工具栏选辅助点，几何类型为由角度和Y值判定。接着出现角度和Y的文本框，角度92，y 值随便写一个，然后重要的是，高程目标选路面（优先于Y值）。预览可以看到该点在路面上。继续添加斜墙的顶点和底点。根据模型图，顶点在路面以上1.5m底点就是墙脚的点，在墙脚平面上。接着把P1， P2补上。非常简单，从前一点出发水平或竖直偏移一定值就可以。顺便勾选【从点添加连线】，效果可见预览图初始点差不多设置完了，现在设置变量。添加一个流程叫变量。从工具栏添加一个变量。这里最重要的变量就是H了。只有它 是自变量，其他人都是因变量，所以要先设置它。H=P2.y-P10.y-0.8这里赋值用的编程语言是VisualBasic意思是P2的高度，也就是路面的高程，减去P10，墙脚高程，再减去墙脚埋进地里的深度0.8m类似地，其他的变量也一一赋值：这些【 if 嵌套语句】都是根据设计要求表格里的设定写的，如果不满足条件就else， 直到满足为止。可变变量赋值完成以后，就可以简单地根据图样用x, y 的偏移来设定每一个点了，不赘述。总之设置完了如下图所示。之前的模型都是点线，最后加一个形状，形成面。大功告成，保存好。打开C3D。在工具面板里。右键插入装配。找到刚才做好的装配。塞进去。进来了。新建装配点。这里介绍一下刚才那个装配应该怎么添加各种其他的装配。我自己的画的图没了，找了一个图。可见除了墙顶和基底是由高程图确定的以外，墙背和墙面还要和周围的环境进行多切少填的融合。体现在模型上就是上面那个红的是LotGrade下面那个切坡的是BasicSideSlopeCutDitch现在模型一应俱全。就差设计图了。先用附近的路转化为中心线（alignment），在现有地面（existing ground level）的基础上生成一个高程图（surface profile）。再根据现场测得的挡土墙的墙脚的点生成中心线（alignment），在中心线的基础上生成在现有地面（existing ground level）的高程（profile）。选择第一个图，选择投影。然后根据提示把选第一个图的高程线，投影到第二个图的高程表里。根据挡土墙的头和尾选择投影的区域。做好了如下。现在有了现有地面的高程了，还需要设计高程。用之前的教程里提到的Poly to Profile 工具，把设计高程的CAD图，做成高程图。变！接着把勘测出来的墙脚的点也做成profile。全家福到齐了。现在可以做了。新建Corridor(我一直不知道这个中文软件里叫什么)设置目标生成还可以生成实体每站分析获取各点的高度报告坡度报告终于写完了，今天last day， 好累，求赞赏求安抚。韩兰若发布于 2017-07-01" }, { "title": "AutoCAD工程测量工具集", "url": "/posts/acad-toolkit/", "categories": "编程开发, AutoLISP", "tags": "AutoCAD, AutoLISP, 工程测量, 面积", "date": "2017-01-01 00:00:00 +0800", "snippet": " 加载 面积标注 求面积至CAD表中 求面积并保存入文件中加载AutoLisp程序可用appload命令加载。推荐加载时加入自启动组。所有命令均以“zz”开头，程序加载后在命令行中输入“zz”就会弹出所有命令列表，用上、下键在列表中选择后按回车键执行即可。面积标注执行命令：zza、zzarea将封闭区域的面积直接标在区域内。在命令行输入：zza或zzarea输入面积编号或名称“a1”，在需求面积的区域内点击即可：图上求面积区域显示:“a1:103.61”求面积至CAD表中执行命令：zzArea2Table （注意：低版本不支持表对象）按提示输入起始序号“1”，并指定面积表放置位置：将创建一个空的表对象：依次点击需求面积区域：面积值将依次加入表中，且求面积区域将显示表中对应序号。求面积并保存入文件中输入命令：ZZAREA2FILE，提示输入保存面积文件名，后续操作与命令“zzArea2table”类似，求面积区域显示序号，存放面积的文本文件中以序号、面积逐行保存。" }, { "title": "如何Civil3D软件来装配道路", "url": "/posts/civil3d-how-to-road-assemble/", "categories": "Civil3D, 部件", "tags": "Civil3D, AutoCAD, 道路, 装配, 部件", "date": "2016-12-16 00:00:00 +0800", "snippet": " 基准线 部件 装配基准线Civil 3D喜欢以路的中心线作为道路的基准线。所以你最好有这样一条中心线。如果万一你没有，你可以用这个功能生成中心线——在标注菜单栏里：中心线。现在默认你已经画好了中心线。现在去home栏，找到基准线（alignment，我不是很清楚中文版的叫啥）——从实体创建基准线——选择已经画好的那根中心线——会出来一个箭头让你确定方向（开车的方向），如果对就回车，不对就选翻转——起个名字，线的类型选设计，去掉勾选，搞定。你现在得到了一根绿色的基准线。水平面的维度有了，还需要一个立面的维度，这个时候我们之前生成那个路面就派上用场了，那个面上每个点都是有高程的。因此基准线和那个路面的交线，就是我们想要的横断面上的剖面。具体就是，点击你画好的绿线，一个新的菜单蹦出来，选择生成高程——点你设计的路面——添加——点击在横断面里创建——窗口消失了， 你找个空白的地方点击鼠标左键——出现了。看起来还不错，横坐标那里是链测长度，只到240米，因为在240米以后，这个路多了一条支路并入，而且路宽变了，那个地方还要重新画。但是这样的话可能会画不止一个横断面，麻烦。所以干脆把这个表画大一点，剩下的路也装进来。我们来改一下这个表的值域。选中表，在横断面属性那里选择编辑横断面属性，分别在站和高程选项卡里选择自定义，搞定。变大了。但是这个只是中心线的高程，我们还有两个路缘的高程——已经被设计好的——需要被添加进来。就去之前的那个设计图里，把它们复制粘贴过来就好了。深蓝色是道路行驶方向的右侧，也是外侧；浅蓝色是内侧。但是呢，这两个根线是AutoCAD里复制过来的，对于civil 3d没有任何意义。我们需要把这些polyline 转化成 profile line (剖面线)，正常的方法是用这个工具一点一点画。但是，作为一个能偷懒绝不费力的懒癌患者，我是绝对不会一点一点画这种东西的。因此在这里介绍一个黑科技：装一个叫 ProfileTollBox.dll 的插件。命令栏里输入netload, 上载该插件，然后在命令栏里输入PFP, 先选择要转化的polyline, 再选择所在的视图，Nailed it！部件进入下一步，现在该有的生产流水线都有了，再设计一个装配零件，顺着流水线走下去，就能生成一条实在的路了。装配零件就是路的剖面设计。civil 3D立面有个一个装配零件库，在视图那里打开工具盘就能看到。就是左面这个东西，这里面有好多好多各种类型已经建模好的装配件，如果不能满足你的需求，还可以用一个叫做Subassembly Composer的官方插件自定义。今天先用不到。总之，我们再看下这个路到底是怎么设计的。现在知道了，是双车道，两侧有路肩。所以就以基准线的起点为原点，新建一个装配。样式选可共面路，代码选所有代码。点确定。在空白处点一下，出来一个装配中心，该中心是以路中央的基准线为准。在工具盘里选择车道，选LaneSuperelevationAOR。 为什么选这个呢，因为这个装配设计了对齐目标，可以之前提到的路缘的高程进行对齐。至于其他的装配怎么用，可以右键配件点帮助，会跳出来一个页面解释。总之选好了装配以后对装配中心点两下，就出来两条车道。但是两条车道倾斜角度不对，需要调整。选中左面那条，按照设计要求更改宽度为3.7，倾斜角正的，等等。右侧同理。注意这里其实设计图没有给倾斜角度。因为整条路的倾斜角度不是常数。这个时候选择这个装配的重要性就体现出来了，因为可以让车道两端分别和路缘的设计高程对齐，这样倾斜角会自动更改。所以这里先采用默认值，调整好方向就可以。总之做好了以后长这样，和设计图还是比较接近的。装配接下来开始进行装配，新建一个走廊（corridor）。装配点将沿着水平基准线和竖直高程线前进，装配部件也据此装配。因此要选择好。新的窗口跳出来，选择设定所有目标。在高程一栏给左右路缘分别选择合适的高程，确定。然后给它添加表面。在表面一栏里左边点一个按钮，添加表面。然后给它定义一下渲染材料。在代码里选择顶点，右面加号添加。再设置一下路的表面的边界线。右键单击，选第一个，以走廊外线作为外边界。点确定。看一下效果。" }, { "title": "德州仪器TI nspire CAS工程测量程序", "url": "/posts/ti-calculator-program-code/", "categories": "编程开发, 计算器", "tags": "计算器程序, 坐标系, 坐标正算, 坐标反算", "date": "2016-09-15 00:00:00 +0800", "snippet": " 1、高斯坐标转工程坐标系 2、工程坐标转高斯坐标系 3、setgeomode子程序 4、工程坐标系转工程坐标系 5、坐标反算 6、坐标正算 1、高斯坐标转工程坐标系Define a_gauss2gc()=Prgmsetgeomode()RequestStr \"施工坐标系名=\",tconame0→statFor i,1,dim(coname),1 If coname[i]=tconame Then 1→stat Request \"待转换点X(N)=\",tpx Request \"待转换点Y(E)=\",tpy xa[i]→txa ya[i]→tya xb[i]→txb yb[i]→tyb sa[i]→tsa R►Pθ(txb-txa,tyb-tya)→talpha EndIfEndForIf stat=1 Then(tpx-txa).cos(talpha)+(tpy-tya).sin(talpha)+tsa→tstage-(tpx-txa).sin(talpha)+(tpy-tya).cos(talpha)→toffDisp \"高斯坐标→施工坐标：\",tconameDisp \"(桩号)x=\",round(tstage,3)Disp \"(偏距)y=\",round(roff,3)ElseDisp \"选择的坐标系未定义！\"EndIfEndPrgm2、工程坐标转高斯坐标系Define a_gc2gauss()=PrgmSetgeomode()RequestStr “施工坐标系名=”,tconame0→statFor i,1,dim(coname),1 If coname[i]=tconame Then 1→stat Request “待转换点桩号x=”,tpx Request “待转换点偏距y=”,tpy xa[i]→txa ya[i]→tyaxb[i]→txbyb[i]→tybsa[i]→tsaR►Pθ (txb-txa,tyb-tya)→talphaEndIfEndForIf stat=1 Thentxa+(tpx-tsa).cos(talpha)-tpy.sim(talpha)→tpntya+(tpx-tsa).sin(talpha)+tpy.cos(talpha)→tpeDisp “施工坐标→高斯坐标 坐标系:”,tconameDisp “X(N)=”,round(tpn,3)Disp “Y(E)=”,round(tpe,3)ElseDisp “选择的坐标系未定义！”EndIfEndPrgm3、setgeomode子程序Define setgeomode()=PrgmIf getMode(2)≠2 ThensetMode(1,1)setMode(2,2)setMode(5,2)setMode(7,1)setMode(8,1)EndIfEndPrgm4、工程坐标系转工程坐标系Define a_gc2gc()=PrgmRequestStr “源施工坐标系名=”,tconame0→statFor i,1,dim(coname),1 If coname[i]=tconame Then 1→stat Request “待转换点桩号x=”,tpx Request “待转换点偏距y=”,tpy xa[i]→txa ya[i]→tya xb[i]→txb yb[i]→tyb sa[i]→tsa R►Pθ(txb-txa,tyb-tya)→talpha EndIfEndForIf stat=1 Thentxa+(tpx-tsa).cos(talpha)-tpy.sin(talpha)→tpntya+(tpx-tsa).sin(talpha)+tpy.cos(talpha)→tpeRequestStr “目标坐标系名=”,tarconame0→stat2For i,1,dim(coname),1 If coname[i]=tarconame Then 1→stat2 xa[i]→txa ya[i]→tya xb[i]→txb yb[i]→tyb sa[i]→tsa R►Pθ(txb-txa,tyb-tya)→talpha EndIfEndForIf stat2=1 Then(tpn-txa).cos(talpha)+(tpe-tya).sin(talpha)+tsa→tstage-(tpn-txa).sin(talpha)+(tpe-tya).cos(talpha)→toffDisp “施工坐标系间转换:”,tconame &amp; “→”&amp; tarconameDisp “（桩号）x=”,round(tstage,3)Disp “(偏距) y=”,round(roff,3)ElseDisp “选择的目标坐标系未定义！”EndIfElseDisp “选择的源坐标系未定义！”EndIfEndPrgm5、坐标反算Define a_zbfs()=Prgmsetgeomode()Request “起点X=”,x1Request “起点Y=”,y1Request “终点X=”,x2Request “终点Y=”,y2Disp “距离=”,R►Pr(x2-x1,y2-y1)R►Pθ (x2-x1,y2-y1)→αIf α&lt;0 Thenα+360→αEndIfDisp “方位角=”,α►DMSEndPrgm6、坐标正算Define a_zbzs()=Prgmsetgeomode()Request “起点X=”,x1Request “起点Y=”,y1Request “距离=”,sRequestStr “方位角(D.MMSS)=”,strexpr(str)→αfdms(α)→αDisp “计算点X=”,round(x1+s.cos(α),3)Disp “计算点Y=”,round(y1+s.sin(α),3)EndPrgm 7、转换D.MMSS格式为十进制度Define fdms(α)=FuncReturn intDiv(α,1)+(intDiv(remain(α,1).100,1))/60+(remain(α*100,1).100)/3600EndFunc" }, { "title": "Git 如何 clone 非 master 分支的代码", "url": "/posts/git-clone-not-master-branch/", "categories": "系统软件, 网络", "tags": "GitHub", "date": "2016-07-07 00:00:00 +0800", "snippet": " 问题描述 解决方法 原来的解决方案问题描述我们每次使用命令git clone git@gitlab.xxx.com:xxxxx.git默认 clone 的是这个仓库的 master 分支。如果最新的代码不在 master 分支上，该如何拿到呢？如下图所示，最新的代码可能在daily/1.4.1分支上，我们希望拿到这个分支上的代码。解决方法刚刚开周会的时候，自己洋洋得意的分享我的解决方案，但是……经过与团队成员的的讨论，自己的方法弱爆了，现在把更优雅的方法写一下。原来写的方法并不太适合用在这个场景里。 我之前写的方法在文章后面。直接使用命令git branch -r #查看远程分支或git branch -a #查看所有分支会显示origin/HEAD -&gt; origin/masterorigin/daily/1.2.2origin/daily/1.3.0origin/daily/1.4.1origin/developorigin/feature/daily-1.0.0origin/master然后直接git checkout origin/daily/1.4.1就好了。。。原来的解决方案其实我原来写的这个方法更多的是：设置已有的本地分支跟踪一个刚刚拉取下来的远程分支，或者想要修改正在跟踪的上游分支。我们在本地先建立一个分支，建议名称和远程的想要同步的分支名称一样。git branch daily/1.4.1在切换到这个本地分支git checkout daily/1.4.1# Switched to branch 'daily/1.4.1'接下来就可以去建立上游分支的关联了，但是这个命令比较长，不好记，我们可以直接先pull一下，git 会提示我们相应的操作和命令。git pullThere is no tracking information for the current branch.Please specify which branch you want to merge with.See git-pull(1) for details. git pull &lt;remote&gt; &lt;branch&gt;If you wish to set tracking information for this branch you can do so with: git branch --set-upstream-to=origin/&lt;branch&gt; daily/1.4.1我们看到最后一行，执行这个命令，即可完成与上游分支的关联。git branch --set-upstream-to=origin/daily/1.4.1 daily/1.4.1# Branch daily/1.4.1 set up to track remote branch daily/1.4.1 from origin.然后再pull一下就好了！git pull" }, { "title": "AutoCAD中自定义汉字线型文件", "url": "/posts/acad-custom-chinese-line-type/", "categories": "Civil3D, 线型", "tags": "线型, 自定义", "date": "2016-06-21 09:44:00 +0800", "snippet": "自定义汉字线型将以下内容保存为.lin为扩展名的纯文本文件，在AutoCAD中加载即可。根据工程情况需要的线性修改文中汉字即可。 下列线型在AutoCAD 2016中效果美美的，但在低版本中的AutoCAD效果不理想，但能显示带汉字的线条，若需如下图效果，请调整线型文件中有关参数。;; 覃东自定义AutoCAD线型文件;; 需要在DWG文件中建立一个LTFONT文字样式，大字体设为hzjs-1.shx;;*中心线方向 ----中线方向----A,12,-3,[\"中\",LTFONT,R=270,S=3,X=-1.5,Y=1.312],-3,12,-3,[\"心\",LTFONT,R=270,S=3,X=-1.5,Y=1.25],-3,12,-3,[\"线\",LTFONT,R=270,S=3,X=-1.5,Y=1.25],-3,12,-3,[\"V\",LTFONT,R=90,S=3,X=1.5,Y=-1.285],-3*断面中线 ----横断中线----A,12,-3,[\"断\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"面\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"中\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"线\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*横断面线 ----横断面线----A,12,-3,[\"横\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"断\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"面\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"线\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*料源分界线 ----料源分界----A,12,-3,[\"料\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"源\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"分\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"界\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*施工队退场 ----退场清算----A,12,-3,[\"退\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"场\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"清\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"算\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*四十分界线 ----四十分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"四\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"十\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*十四分界线 ----十四分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"十\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"四\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*九十分界线 ----九十分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"九\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"十\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*十九分界线 ----十九分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"十\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"九\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*八一分界线 ----八一分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"八\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"一\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*一八分界线 ----一八分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"一\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"八\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*八二分界线 ----八二分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"八\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"二\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*二八分界线 ----二八分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"二\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"八\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*二一分界线 ----二一分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"二\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"一\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*一二分界线 ----一二分界----A,12,-3,[\"上\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"一\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"下\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"二\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*临时收方线 ----临时收方----A,12,-3,[\"临\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"时\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*十二月收方线 ----十二月收方----A,12,-3,[\"十\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"二\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*十一月收方线 ----十一月收方----A,12,-3,[\"十\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"一\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*十月收方线 ----十月收方----A,12,-3,[\"十\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*九月收方线 ----九月收方----A,12,-3,[\"九\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*八月收方线 ----八月收方----A,12,-3,[\"八\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*七月收方线 ----七月收方----A,12,-3,[\"七\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*六月收方线 ----六月收方----A,12,-3,[\"六\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*五月收方线 ----五月收方----A,12,-3,[\"五\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*四月收方线 ----四月收方----A,12,-3,[\"四\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*三月收方线 ----三月收方----A,12,-3,[\"三\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*二月收方线 ----二月收方----A,12,-3,[\"二\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*一月收方线 ----一月收方----A,12,-3,[\"一\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"月\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"方\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*运距变更线 ----运距变更----A,12,-3,[\"运\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"距\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"变\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"更\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*完工验收线 ----完工验收----A,12,-3,[\"完\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"工\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"验\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"收\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*有用料界线 ----有用料界----A,12,-3,[\"有\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"用\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"料\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"界\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖十队线 ----开挖十队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"十\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖九队线 ----开挖九队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"九\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖八队线 ----开挖八队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"八\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖七队线 ----开挖七队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"七\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖六队线 ----开挖六队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"六\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖五队线 ----开挖五队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"五\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖四队线 ----开挖四队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"四\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖三队线 ----开挖三队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"三\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖二队线 ----开挖二队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"二\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*开挖一队线 ----开挖一队----A,12,-3,[\"开\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"挖\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"一\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"队\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*土石分界线 ----土石分界----A,12,-3,[\"土\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"石\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"分\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"界\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*设计线 ----设计线----A,12,-3,[\"设\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"计\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"线\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3*原始地面线 ----原始地面----A,12,-3,[\"原\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"始\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"地\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3,12,-3,[\"面\",LTFONT,R=90,S=3,X=1.5,Y=-1.5],-3" }, { "title": "利用VBA给Excel或WPS表格添加自定义函数（如：方位角函数）", "url": "/posts/custom-function-in-excel-wps/", "categories": "编程开发, VBA-Excel", "tags": "Excel, VBA, WPS, 方位角", "date": "2016-05-16 00:00:00 +0800", "snippet": "在Excel或WPS表格中要使用VBA需要先打开“开发工具”菜单，打开方式请在网上度一下：在“自定义功能区”打开“开发工具”菜单：点击“开发工具”菜单，在“开发工具”工具栏上点击“VB编辑器”：在“VB编辑器”内添加一模块文件（名称任意），在代码区添加函数代码：如添加一个测量方位角计算的函数，代码如下：Function Azimuth(Sx As Double, Sy As Double, Ex As Double, Ey As Double, Style As Integer)Dim DltX As Double, DltY As Double, A_tmp As Double, Pi As DoublePi = Atn(1) * 4 '定义PI值DltX = Ex - SxDltY = Ey - Sy + 1E-20A_tmp = Pi * (1 - Sgn(DltY) / 2) - Atn(DltX / DltY) '计算方位角A_tmp = A_tmp * 180 / Pi '转换为360进制角度Azimuth = Deg2DMS(A_tmp, Style)End Function这个函数中要用到一个格式转换函数：'转换十进制角度为度分秒'Style=-1为弧度格式'Style=0为“DD MM SS”格式'Style=1为“DD-MM-SS”格式'Style=2为“DD°MMˊSS\"\"”格式'Style=其它值时返回十进制度值Function Deg2DMS(DegValue As Double, Style As Integer)Dim tD As Integer, tM As Integer, tS As Double, tmp As Double, SignChar As StringIf Sgn(DegValue) = -1 ThenSignChar = \"-\"ElseSignChar = \"\"End IfDegValue = Abs(DegValue)tD = Fix(DegValue)tmp = (DegValue - tD) * 60tM = Fix(tmp)tmp = (tmp - tM) * 60tS = Round(tmp, 1)'2016-12-27调整，避免出现60分、60秒的情况If tS = 60 ThentM = tM + 1tS = 0End IfIf tM = 60 ThentD = tD + 1tD = 0End IfSelect Case StyleCase -1 '返回弧度If SignChar = \"-\" ThenDeg2DMS = -DegValue * Atn(1) * 4 / 180ElseDeg2DMS = DegValue * Atn(1) * 4 / 180End IfCase 0Deg2DMS = SignChar &amp; tD &amp; \" \" &amp; Format(tM, \"00\") &amp; \" \" &amp; Format(tS, \"00.0\")Case 1Deg2DMS = SignChar &amp; tD &amp; \"-\" &amp; Format(tM, \"00\") &amp; \"-\" &amp; Format(tS, \"00.0\")Case 2Deg2DMS = SignChar &amp; tD &amp; \"°\" &amp; Format(tM, \"00\") &amp; \"ˊ\" &amp; Format(tS, \"00.0\") &amp; \"\"\"\"Case ElseIf SignChar = \"-\" ThenDeg2DMS = -DegValueElseDeg2DMS = DegValueEnd IfEnd SelectEnd Function使用效果如Excel或WPS表格内部函数一样，输入函数前两个字母时会提示函数名：按提示输入值：计算结果：将此表格保存或另存为模板即可，也可将模块文件导出，在其它表格中导入就可使用。" }, { "title": "浅谈正则表达式中的分组和引用", "url": "/posts/regular-expression-group/", "categories": "编程开发, 语言基础", "tags": "正则表达式", "date": "2016-05-06 11:40:18 +0800", "snippet": " 问题 我的答案 说明由正则表达式如何匹配相同字符出发，讲讲正则表达式中的选择、分组和引用。问题在外刊君读者群中看到有人提出这样的一个需求： 把字符串切成连续相同字符的正则怎么写？比如abbcccdddd切成a,bb,ccc,dddd之前我对正则表达式也是略有研究，想尝试一下。其实我对正则表达式的学习基本完全来源于犀牛书的第10章，真正看懂这一章，我觉得操作正则表达式应该不在话下。我的答案先给出我的答案吧：'abbccddd'.match(/(\\w)\\1*/g) // [\"a\", \"bb\", \"cc\", \"ddd\"]说明拿到这个问题，首先要匹配字符[a-zA-Z0-9]，这里直接使用\\w。然后是全局匹配，在最后加上g。难点在于怎么判断重复。翻看了犀牛书后，又读了一遍分组和引用的部分。使用小括号()将字符作为一个最小单元，同时小括号还能记忆这个组合相匹配的字符串。再使用反斜杠\\引用前面分组的表达式，数字1表示第一个小括号。这时完成了2个字符重复的要求。最后再使用*来匹配出现0次或n次。这个正则表达式就写完了。下面详细说说分组和引用。正则表达式的选择、分组和引用字符表 字符 含义 | 选择，匹配的是该符号左边的子表达式或右边的子表达式 (...) 组合，将几个项组合为一个单元，这个单元可通过* + ? | 等符号加以修饰，而且可以记住和这个组合相匹配的字符串以提供伺候的引用使用 (?:...) 只组合，把项组合到一个段元，但不记忆与该组相匹配的字符 \\n 和第n个分组第一次匹配的字符相匹配，组是圆括号中的子表达式（也有可能是嵌套的），组索引是从左到右的左括号数，(?:形式的分组不编码 " }, { "title": "对这个 jekyll 博客主题的改版和重构", "url": "/posts/jekyll-theme-version-2.0/", "categories": "系统软件, 网络", "tags": "blog", "date": "2016-03-12 11:40:18 +0800", "snippet": " 改版重构说明 RubyGems 无法访问，SSL 证书问题 错误呈现 解决方法 jekyll-paginate 依赖缺失 错误呈现 解决方法 被 Foxit pdf reader 占用4000端口 错误呈现 解决方法 本文主要说明对这个博客主题的改版和代码重构的过程。这个简洁高雅的博客主题受到了很多朋友的喜欢。在写第一版界面时，我对前端并不是很熟悉，对Jekyll也不熟悉。现在距离当时也一年了，对自己当时写的代码也不太满意了，同时Jekyll如今也已经升级了，目前最新版为3.1.2。因此我在临近毕业尚未入职前做一下博客主题的代码重构和改版吧。主要想做这些事情有：添加归档，添加标签，添加分类页面，主页显示文章摘要，代码去除 jQuery 和 BootStrap，优化移动端显示，将所有变量写入配置文件_config.yml中等。再优化一些细节吧。希望更多人会喜欢。改版重构说明 使用 GitHub 风格的代码块 Markdown 写法 (Fenced code blocks)。 即 GFM(github flavored markdown) 的方式。 Jekyll 已经升级至 3.1.2（2016-03），其中有一些新的要注意的地方，比如官网上说使用了 Rouge 去做代码高亮而不是默认的 Pygments，因为 Jekyll 本身是基于 Ruby 的，因此我看到官方说希望不再使用基于 Python 的 Pygments 了，而是都使用基于 Ruby 的代码。详情见官网升级说明 syntax-highlighter-changed。 首页中添加摘要 摘要可以在每一篇 md 文件头中使用 excerpt 属性写出来。也可以在正文中，4个换行符来分割，这个设置见配置文件_config.yml。 添加归档 上一版中没有归档，现在专门做了一个归档页面，当文章很多时方便根据年份快速查阅。 添加标签 标签还是很有必要添加的，上一版中也没有这个功能。现在也可以根据标签查找文章了。同时标签还有一个重要的作用是，用来获取相似文章的。 添加分类页 之前的分类就是在首页中直接完成的，现在和标签和归档类似，我将分类单独制作为一页，方便查阅。 去掉 jQuery 和 BootStrap 我觉得太重了，没必要使用这两个库，使用原生 JavaScript 和 CSS就可以做到一样的效果，代码量大大减轻，载入速度略有提高。 重写了demo页的瀑布流布局 改变数据写死的方式，将数据用 json 格式录入，由 JavaScript 拼接为 HTML 代码。同时，使用 Masonry，重写了瀑布流布局。 简化评论配置，支持 多说 和 disqus 在_config.yml中评论配置直接添加自己的short_name，评论就能正常使用了。 下面列举一些可能遇到的问题，至少我是遇到了：RubyGems 无法访问，SSL 证书问题以前我使用的是 RubyGems 的淘宝镜像https://ruby.taobao.org/。现在这个镜像已经不再维护了，作者 huacnlee (李华顺) 转到 Ruby China 中继续维护了，详情见 RubyGems 镜像- Ruby China。错误呈现在执行任何gem命令的时候出现以下错误：ERROR: While executing gem ... (Gem::RemoteFetcher::FetchError) SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify failed (https://gems.ruby-china.org/specs.4.8.gz)解决方法根据 https://gems.ruby-china.org/ 页面最下方提供的 GitHub Issue 地址。可以进入这个 issue：https://github.com/ruby-china/rubygems-mirror/issues/3其中 sanlengjingvv 给出了一个链接地址 https://gist.github.com/fnichol/867550 里面提供了方法。我就是采用这里面的方法解决的。我使用的是 The Manual Way，因为 The Ruby Way 我没有成功，不知道什么原因，有兴趣的朋友可以试试。下面说说我的具体操作吧。首先从 https://curl.haxx.se/ca/cacert.pem 将文件cacert.pem下载至 C:\\RailsInstaller\\cacert.pem然后执行set SSL_CERT_FILE=C:\\RailsInstaller\\cacert.pem就成功了，不会再出现 SSL 错误了。最后原文中说，为了长久设置，将这个目录存入控制面板中。我没理解是什么意思，是指环境变量吗？有朋友知道的话，欢迎留言告知我。我存入环境变量后，还是会出现 SSL 错误，这时再次执行上面那条命令即可。jekyll-paginate 依赖缺失因为 jekyll 3 中默认安装已经没有这个分页组件了，官方把这个分页组件插件化了，因此要独立安装。详情见 https://jekyllrb.com/docs/pagination/。错误呈现在启动 jekyll 服务的时候出现以下错误：jekyll serveConfiguration file: c:/gitWorkSpace/blog-based-on-jekyll-3/_config.yml Dependency Error: Yikes! It looks like you don't have jekyll-paginate or one of its dependencies installed. In order to use Jekyll as currently configured, you'll need to install this gem. The full error message from Ruby is: 'cannot load such file -- jekyll-paginate' If you run into trouble, you can find helpful resources at http://jekyllrb.com/help/!jekyll 3.1.2 | Error: jekyll-paginate解决方法我们安装这个插件到本地即可。gem install jekyll-paginateFetching: jekyll-paginate-1.1.0.gem (100%)Successfully installed jekyll-paginate-1.1.0Parsing documentation for jekyll-paginate-1.1.0Installing ri documentation for jekyll-paginate-1.1.0Done installing documentation for jekyll-paginate after 3 seconds1 gem installed被 Foxit pdf reader 占用4000端口错误呈现在本地使用命令jekyll serve出现错误，如下jekyll serveConfiguration file: E:/GitWorkSpace/blog/_config.yml Source: E:/GitWorkSpace/blog Destination: E:/GitWorkSpace/blog/_siteIncremental build: disabled. Enable with --incremental Generating... done in 0.547 seconds. Please add the following to your Gemfile to avoid polling for changes: gem 'wdm', '&gt;= 0.1.0' if Gem.win_platform?Auto-regeneration: enabled for 'E:/GitWorkSpace/blog'Configuration file: E:/GitWorkSpace/blog/_config.ymljekyll 3.1.1 | Error: Permission denied - bind(2) for 127.0.0.1:4000网上查阅后，这篇博文解决了我的问题。谁占了我的端口 for Windows –By Liu Xia, ThoughtWorks Senior Consultant. .NET Expert上述报错主要原因是，jekyll 启动使用的4000端口被福昕pdf阅读器的自动更新进程占用了，关掉这个进程，jekyll在本地调试启动服务时就没有问题了。解决方法简单的解决方法是：输入命令，查看各端口被占用情况netstat -ano找到4000端口被占用的PID我的结果如下：协议 本地地址 外部地址 状态 PIDTCP 0.0.0.0:80 0.0.0.0:0 LISTENING 4TCP 0.0.0.0:135 0.0.0.0:0 LISTENING 836TCP 0.0.0.0:445 0.0.0.0:0 LISTENING 4TCP 0.0.0.0:1801 0.0.0.0:0 LISTENING 2312TCP 0.0.0.0:2103 0.0.0.0:0 LISTENING 2312TCP 0.0.0.0:2105 0.0.0.0:0 LISTENING 2312TCP 0.0.0.0:2107 0.0.0.0:0 LISTENING 2312TCP 0.0.0.0:3306 0.0.0.0:0 LISTENING 2404TCP 0.0.0.0:3389 0.0.0.0:0 LISTENING 1172TCP 0.0.0.0:49664 0.0.0.0:0 LISTENING 584TCP 0.0.0.0:49665 0.0.0.0:0 LISTENING 1072TCP 0.0.0.0:49666 0.0.0.0:0 LISTENING 460TCP 0.0.0.0:49667 0.0.0.0:0 LISTENING 1000TCP 0.0.0.0:49670 0.0.0.0:0 LISTENING 696TCP 0.0.0.0:49678 0.0.0.0:0 LISTENING 2312TCP 0.0.0.0:49692 0.0.0.0:0 LISTENING 688TCP 127.0.0.1:4000 0.0.0.0:0 LISTENING 2476TCP 127.0.0.1:4000 127.0.0.1:55160 ESTABLISHED 2476TCP 127.0.0.1:4012 0.0.0.0:0 LISTENING 12724可以看到4000端口的PID是2476。下面查看是什么进程，命令行中输入：tasklist /svc /FI \"PID eq 2476\"得到结果：映像名称 PID 服务========================= ======== ============================================FoxitProtect.exe 2476 FxService可以看到正是福昕阅读器。下面关掉这个服务就好了。在 win10 中进入任务管理器，选择服务选项卡，关闭这个服务就好了，如下图：当然也可以在启动jekyll服务的时候指定端口号，如下：jekyll serve --port 3000这样在浏览器中输入 http://localhost:3000/ 就可以访问了。还可以在配置文件_config.yml中添加端口号设置（参考官网文档-Serve Command OptionsPermalink），如下：# portport: 1234此时，启动jekyll服务后，访问 http://localhost:1234/ 即可" }, { "title": "惠普HP-Prime可编程科学计算器测量程序代码-心墙下游反I与砾石土分界线放样", "url": "/posts/hp-prime-lhk-read-xf1j/", "categories": "编程开发, 计算器", "tags": "放样, HP-Prime, 计算器程序", "date": "2015-05-23 00:00:00 +0800", "snippet": "惠普HP-Prime可编程科学计算器支持纯文本格式程序代码，电脑端与计算器端传送代码简单方便。本代码是两河口水电站大坝心墙、垫层料、反滤料边线放样程序。代码中Points为表名，在计算器首页将表格保存命名为Points，以Points开头的代码均为从相应表中单元格读写数据。本代码为两河口水电站大坝心墙下游反I与砾石土分界线放样程序。EXPORT XF1J()BEGINLOCAL ch,X,Y,Z;//下游左侧砼边线控制点A、BLOCAL XLTA_X,XLTA_Y,XLTA_H,XLTB_X,XLTB_Y,XLTB_H;//下游右侧砼边线控制点A、BLOCAL XRTA_X,XRTA_Y,XRTA_H,XRTB_X,XRTB_Y,XRTB_H;//下游左侧反1折线控制点A、BLOCAL XLFA_X,XLFA_Y,XLFA_H,XLFB_X,XLFB_Y,XLFB_H;//下游右侧反1折线控制点A、BLOCAL XRFA_X,XRFA_Y,XRFA_H,XRFB_X,XRFB_Y,XRFB_H;325.945▶XLTA_X;71.5▶XLTA_Y;2581.0▶XLTA_H;324.145▶XLTB_X;71.012▶XLTB_Y;2583▶XLTB_H;372.055▶XRTA_X;71.5▶XRTA_Y;2581.0▶XRTA_H;373.855▶XRTB_X;71.012▶XRTB_Y;2583.0▶XRTB_H;CHOOSE(ch,\"下游反滤1与砾石土边界线放样\",\"下游-左侧-砼边线\",\"下游-左侧-反1折线\",\"下游-右侧-砼边线\",\"下游-右侧-反1折线\",\"下游-反1砾石界线\");MSGBOX(\"覃东两河口水电站\");if ch==1 thenINPUT({X,Y,Z},\"请输入测点坐标\",{\"桩号\",\"偏距\",\"高程\"},{\"桩号\",\"偏距\",\"提示\"},{0,0,0})end;INPUT(X,\"汉字\");23▶Y;132▶ZEND;" }, { "title": "惠普HP-Prime可编程科学计算器测量程序代码-两河口心墙下游反滤料边线放样", "url": "/posts/hp-prime-lhk-read-layout-i/", "categories": "编程开发, 计算器", "tags": "放样, HP-Prime, 计算器程序", "date": "2015-05-20 00:00:00 +0800", "snippet": "惠普HP-Prime可编程科学计算器支持纯文本格式程序代码，电脑端与计算器端传送代码简单方便。本代码是两河口水电站大坝心墙、垫层料、反滤料边线放样程序。代码中Points为表名，在计算器首页将表格保存命名为Points，以Points开头的代码均为从相应表中单元格读写数据。本代码为两河口水电站大坝心墙下游反滤料I边线放样。EXPORT 下游反1界线放样()BEGINLOCAL pax,pay,pah,pbx,pby,pbh;LOCAL px,py,ph,ch;LOCAL tmpx,tmpy,dltx,dlty;PRINT();PRINT(\" \");PRINT(\" \");PRINT(\" 程序测试中，计算结果请认真与现场核对如有不符\");PRINT(\" 请立即停止使用并与我联系：TEL 139 ......02\");PRINT(\" \");PRINT(\" 使用中将测点坐标任一值输为-1退出，按回车开始\");PRINT(\" \");PRINT(\" \");PRINT(\" \");PRINT(\" 中国电建一二•五联合体测量队 Q.D. 2016.10\");WAIT();REPEATINPUT({px,py,ph},\"请输入测量点坐标：\",{\"测点桩号S：\",\"测点偏距Y：\",\"测点高程H：\"},{\"测点桩号S：\",\"测点偏距Y：\",\"测点高程H：\"});CHOOSE(ch,\"请选择需要计算的对象\",\"左岸砼盖板边线点\",\"左岸接触粘土界线点\",\"左岸放坡(1:0.75)折线点\",\"EL.2583以下1:0.75边坡放样\",\"右岸放坡(1:0.75)折线点\",\"右岸接触粘土界线点\",\"右岸砼盖板边线点\");CASEIF ch==1 THENpax:=325.945;pay:=71.5;pah:=2581;pbx:=324.145;pby:=71.012;pbh:=2583;tmpx:=finvalue(pah,pax,pbh,pbx,ph);tmpy:=finvalue(pah,pay,pbh,pby,ph);dltx:=px-tmpx;dlty:=py-tmpy;PRINT();PRINT(\"您输入的测点坐标是：S=\"+ROUND(px,3)+\" Y=\"+ROUND(py,3)+\" H=\"+ROUND(ph,3));PRINT(\"测点高程\"+ROUND(ph,3)+\"对应的左岸砼边线坐标为：\");PRINT(\"S=\"+ROUND(tmpx,3)+\", Y=\"+ROUND(tmpy,3));PRINT(\"测点与对应的左岸砼盖板边线点坐标差值： dltS=\"+ROUND(dltx,3)+\", dltY=\"+ROUND(dlty,3));PRINT(\" \");PRINT(\"中国电建一二•五联合体测量队 Q.D. 2016.10\");END;IF ch==2 THEN//左岸接触粘土界线pax:=329.945;pay:=71.5;pah:=2581;pbx:=328.145;pby:=71.012;pbh:=2583;tmpx:=finvalue(pah,pax,pbh,pbx,ph);tmpy:=finvalue(pah,pay,pbh,pby,ph);dltx:=px-tmpx;dlty:=py-tmpy;PRINT();PRINT(\"您输入的测点坐标是：S=\"+ROUND(px,3)+\" Y=\"+ROUND(py,3)+\" H=\"+ROUND(ph,3));PRINT(\"测点高程\"+ROUND(ph,3)+\"对应的左岸接触粘土界线坐标为：\");PRINT(\"S=\"+ROUND(tmpx,3)+\", Y=\"+ROUND(tmpy,3));PRINT(\"测点与对应的左岸接触粘土界线点坐标差值： dltS=\"+ROUND(dltx,3)+\", dltY=\"+ROUND(dlty,3));PRINT(\" \");PRINT(\"中国电建一二•五联合体测量队 Q.D. 2016.10\");END;IF ch==3 THEN//左岸放坡线折线pax:=329.945;pay:=71.5;pah:=2581.0;pbx:=332.205;pby:=70.0;pbh:=2583.0;tmpx:=finvalue(pah,pax,pbh,pbx,ph);tmpy:=finvalue(pah,pay,pbh,pby,ph);dltx:=px-tmpx;dlty:=py-tmpy;PRINT();PRINT(\"您输入的测点坐标是：S=\"+ROUND(px,3)+\" Y=\"+ROUND(py,3)+\" H=\"+ROUND(ph,3));PRINT(\"测点高程\"+ROUND(ph,3)+\"对应的1:0.75放坡左岸折线坐标为：\");PRINT(\"S=\"+ROUND(tmpx,3)+\", Y=\"+ROUND(tmpy,3));PRINT(\"测点与对应的折线点坐标差值： dltS=\"+ROUND(dltx,3)+\", dltY=\"+ROUND(dlty,3));PRINT(\" \");PRINT(\"中国电建一二•五联合体测量队 Q.D. 2016.10\");END;IF ch==4 THENpax:=329.945;pay:=71.5;pah:=2581.0;pbx:=332.205;pby:=70.0;pbh:=2583.0;tmpx:=finvalue(pah,pax,pbh,pbx,ph);tmpy:=finvalue(pah,pay,pbh,pby,ph);dltx:=px-tmpx;dlty:=py-tmpy;PRINT();PRINT(\"您输入的测点坐标是：S=\"+ROUND(px,3)+\" Y=\"+ROUND(py,3)+\" H=\"+ROUND(ph,3));PRINT(\"测点高程\"+ROUND(ph,3)+\"对应的1:0.75边坡偏距为：\");PRINT(\"Y=\"+ROUND(tmpy,3));PRINT(\"测点与对应的坡边线点坐标差值： dltY=\"+ROUND(dlty,3));PRINT(\" \");PRINT(\"中国电建一二•五联合体测量队 Q.D. 2016.10\");END;IF ch==5 THENpax:=368.055;pay:=71.5;pah:=2581;pbx:=365.805;pby:=70.0;pbh:=2583.0;tmpx:=finvalue(pah,pax,pbh,pbx,ph);tmpy:=finvalue(pah,pay,pbh,pby,ph);dltx:=px-tmpx;dlty:=py-tmpy;PRINT();PRINT(\"您输入的测点坐标是：S=\"+ROUND(px,3)+\" Y=\"+ROUND(py,3)+\" H=\"+ROUND(ph,3));PRINT(\"测点高程\"+ROUND(ph,3)+\"对应的1:0.75放坡右岸折线坐标为：\");PRINT(\"S=\"+ROUND(tmpx,3)+\", Y=\"+ROUND(tmpy,3));PRINT(\"测点与对应的折线点坐标差值： dltS=\"+ROUND(dltx,3)+\", dltY=\"+ROUND(dlty,3));PRINT(\" \");PRINT(\"中国电建一二•五联合体测量队 Q.D. 2016.10\");END;IF ch==6 THENpax:=368.055;pay:=71.5;pah:=2581.0;pbx:=369.855;pby:=71.012;pbh:=2583.0;tmpx:=finvalue(pah,pax,pbh,pbx,ph);tmpy:=finvalue(pah,pay,pbh,pby,ph);dltx:=px-tmpx;dlty:=py-tmpy;PRINT();PRINT(\"您输入的测点坐标是：S=\"+ROUND(px,3)+\" Y=\"+ROUND(py,3)+\" H=\"+ROUND(ph,3));PRINT(\"测点高程\"+ROUND(ph,3)+\"对应的右岸接触粘土界线坐标为：\");PRINT(\"S=\"+ROUND(tmpx,3)+\", Y=\"+ROUND(tmpy,3));PRINT(\"测点与对应的右岸接触粘土界线点坐标差值： dltS=\"+ROUND(dltx,3)+\", dltY=\"+ROUND(dlty,3));PRINT(\" \");PRINT(\"中国电建一二•五联合体测量队 Q.D. 2016.10\");END;IF ch==7 THENpax:=372.055;pay:=71.5;pah:=2581.0;pbx:=373.855;pby:=71.012;pbh:=2583.0;tmpx:=finvalue(pah,pax,pbh,pbx,ph);tmpy:=finvalue(pah,pay,pbh,pby,ph);dltx:=px-tmpx;dlty:=py-tmpy;PRINT();PRINT(\"您输入的测点坐标是：S=\"+ROUND(px,3)+\" Y=\"+ROUND(py,3)+\" H=\"+ROUND(ph,3));PRINT(\"测点高程\"+ROUND(ph,3)+\"对应的右岸砼边线坐标为：\");PRINT(\"S=\"+ROUND(tmpx,3)+\", Y=\"+ROUND(tmpy,3));PRINT(\"测点与对应的右岸砼盖板边线点坐标差值： dltS=\"+ROUND(dltx,3)+\", dltY=\"+ROUND(dlty,3));PRINT(\" \");PRINT(\"中国电建一二•五联合体测量队 Q.D. 2016.10\");END;DEFAULTpx:=-1;py:=-1;ph:=-1;END;WAIT();UNTIL px==-1 OR py==-1 OR ph==-1;END;" }, { "title": "惠普HP-Prime可编程科学计算器测量程序代码-控制点表中读出点坐标", "url": "/posts/hp-prime-lhk-read-points/", "categories": "编程开发, 计算器", "tags": "控制点, HP-Prime, 计算器程序", "date": "2015-05-18 00:00:00 +0800", "snippet": "惠普HP-Prime可编程科学计算器支持纯文本格式程序代码，电脑端与计算器端传送代码简单方便。本代码是两河口水电站大坝心墙、垫层料、反滤料边线放样程序。代码中Points为表名，在计算器首页将表格保存命名为Points，以Points开头的代码均为从表中单元格读入数据。本代码为从控制点表Points中将点坐标读出赋值给变量。EXPORT 读取已知点()BEGINLOCAL i,ch,pointNames:=Points.A:A;LOCAL pointN:=Points.B:B;LOCAL pointE:=Points.C:C;LOCAL pointH:=Points.D:D;CHOOSE(ch,\"请选择一个已知点\",pointNames);IF ch&gt;0 THENPRINT();PRINT(\"点名:\"+pointNames[ch]);PRINT(\"N:\"+pointN[ch]);PRINT(\"E:\"+pointE[ch]);PRINT(\"H:\"+pointH[ch]);END;END;" }, { "title": "惠普HP-Prime可编程科学计算器测量程序代码-线上内插计算", "url": "/posts/hp-prime-lhk-point-on-line/", "categories": "编程开发, 计算器", "tags": "内插, HP-Prime, 计算器程序", "date": "2015-05-16 00:00:00 +0800", "snippet": "惠普HP-Prime可编程科学计算器支持纯文本格式程序代码，电脑端与计算器端传送代码简单方便。本代码是两河口水电站大坝心墙、垫层料、反滤料边线放样程序。代码中示例数据是工程坐标系定义数据。本代码为线上内插计算。EXPORT UG()BEGINLOCAL pax,pay,pah,pbx,pby,pbh;LOCAL px,py,ph,ch;INPUT({pax,pay,pah,pbx,pby,pbh},\"请输入直线上的两个已知点坐标：\",{\"直线A点X：\",\"直线A点Y：\",\"直线A点H：\",\"直线B点X：\",\"直线B点Y：\",\"直线B点H：\"},{\"请输入直线A点X：\",\"请输入直线A点Y：\",\"请输入直线A点H：\",\"请输入直线B点X：\",\"请输入直线B点Y：\",\"请输入直线B点H：\"});CHOOSE(ch,\"请选择待算点计算方式\",\"由X计算Y、H\",\"由Y计算X、H\",\"由H计算X、Y\");REPEATCASEIF ch==1 THENINPUT(px,\"请输入待算点X:\",\"待算点X:\",\"待算点X:\",0);py:=finvalue(pax,pay,pbx,pby,px);ph:=finvalue(pax,pah,pbx,pbh,px);END;IF ch==2 THENINPUT(py,\"请输入待算点Y:\",\"待算点Y:\",\"待算点Y:\",0);px:=finvalue(pay,pax,pby,pbx,py);ph:=finvalue(pay,pah,pby,pbh,py);END;IF ch==3 THENINPUT(ph,\"请输入待算点H:\",\"待算点H:\",\"待算点H:\",0);px:=finvalue(pah,pax,pbh,pbx,ph);py:=finvalue(pah,pay,pbh,pby,ph);END;DEFAULTpx:=-1;py:=-1;ph:=-1;END;IF px≠-1 AND py≠-1 AND ph≠-1 THENPRINT(\"直线A点：\"+ROUND(pax,3)+\",\"+ ROUND(pay,3)+\",\"+ ROUND(pah,3));PRINT(\"直线B点：\"+ ROUND(pbx,3)+\",\"+ ROUND(pby,3)+\",\"+ ROUND(pbh,3));PRINT(\"待算点 X=\"+ ROUND(px,3)+\" Y=\"+ ROUND(py,3)+\" H=\"+ ROUND(ph,3));WAIT();END;UNTIL px==-1 OR py==-1 OR ph==-1;//MSGBOX(\"覃东两河口水电站\");END;EXPORT finvalue(xa,ya,xb,yb,xp)BEGINRETURN ya+(yb-ya)*(xp-xa)/(xb-xa);END;" }, { "title": "惠普HP-Prime可编程科学计算器测量程序代码-添加控制点表", "url": "/posts/hp-prime-lhk-addpoints/", "categories": "编程开发, 计算器", "tags": "控制点, HP-Prime, 计算器程序", "date": "2015-05-15 00:00:00 +0800", "snippet": "惠普HP-Prime可编程科学计算器支持纯文本格式程序代码，电脑端与计算器端传送代码简单方便。本代码是两河口水电站大坝心墙、垫层料、反滤料边线放样程序。代码中Points为表名，在计算器首页将表格保存命名为Points，以Points开头的代码均为向表中单元格写入数据。代码中示例数据是将测量控制点坐标写入表格，方便程序和现场调用。EXPORT 控制点()BEGINPoints.A1:=\"DB01\";Points.B1:=3743706.357;Points.C1:=268916.356;Points.D1:=2659.461;Points.A2:=\"DB02\";Points.B2:=3743548.524;Points.C2:=268610.543;Points.D2:=2764.479;Points.A3:=\"DB03\";Points.B3:=3743400.114;Points.C3:=268599.882;Points.D3:=2764.737;Points.A4:=\"DB04\";Points.B4:=3743088.292;Points.C4:=268638.100;Points.D4:=2673.991;Points.A5:=\"III14\";Points.B5:=3742787.169;Points.C5:=268728.4778;Points.D5:=2658.436;Points.A6:=\"II17\";Points.B6:=3742702.4638;Points.C6:=268672.7797;Points.D6:=2762.770;Points.A7:=\"LIII37\";Points.B7:=3745684.856;Points.C7:=247946.293;Points.D7:=2802.464;Points.A8:=\"LIII39\";Points.B8:=3746535.540;Points.C8:=246709.521;Points.D8:=2846.699;Points.A9:=\"II22\";Points.B9:=3743924.1343;Points.C9:=269080.5565;Points.D9:=2784.724;Points.A10:=\"II11\";Points.B10:=3744094.454;Points.C10:=269230.420;Points.D10:=2882.874;Points.A11:=\"II06\";Points.B11:=3742513.0166;Points.C11:=269351.6005;Points.D11:=2920.656;Points.A12:=\"II04\";Points.B12:=3742229.1747;Points.C12:=269430.2706;Points.D12:=3012.752;Points.A13:=\"II14\";Points.B13:=3742696.6192;Points.C13:=269332.7309;Points.D13:=2916.646;Points.A14:=\"II09\";Points.B14:=3744023.3003;Points.C14:=268488.0585;Points.D14:=2988.623;Points.A15:=\"III29\";Points.B15:=3744183.570;Points.C15:=268685.282;Points.D15:=2790.267;END;" }, { "title": "惠普HP-Prime可编程科学计算器测量程序代码-添加坐标系表", "url": "/posts/hp-prime-lhk-addcosys/", "categories": "编程开发, 计算器", "tags": "坐标系, HP-Prime, 计算器程序", "date": "2015-05-13 00:00:00 +0800", "snippet": "惠普HP-Prime可编程科学计算器支持纯文本格式程序代码，电脑端与计算器端传送代码简单方便。本代码是两河口水电站大坝心墙、垫层料、反滤料边线放样程序。代码中CoSys为表名，在计算器首页将表格保存命名为CoSys，以CoSys开头的代码均为向表中单元格写入数据。代码中示例数据是工程坐标系定义数据。EXPORT 施工坐标系()BEGIN//施工坐标系名//A点坐标N//A点坐标E//A点施工坐标桩号//A点施工坐标偏距//B点坐标N//B点坐标ECoSys.A1:=\"A2B2\";CoSys.B1:=3743173.790;CoSys.C1:=268789.559;CoSys.D1:=294.0;CoSys.E1:=0;CoSys.F1:=3743173.790;CoSys.G1:=268679.559;CoSys.A2:=\"AB\";CoSys.B2:=3743173.790;CoSys.C2:=269083.559;CoSys.D2:=0;CoSys.E2:=0;CoSys.F2:=3743173.790;CoSys.G2:=268415.559;CoSys.A3:=\"SY1SY2\";CoSys.B3:=3743720.357;CoSys.C3:=268922.576;CoSys.D3:=0;CoSys.E3:=0;CoSys.F3:=3743715.889;CoSys.G3:=268759.6478;CoSys.A4:=\"SY3SY4\";CoSys.B4:=3743699.972;CoSys.C4:=268930.806;CoSys.D4:=0;CoSys.E4:=0;CoSys.F4:=3743620.876;CoSys.G4:=269007.8794;END;" }, { "title": "Excel或WPS中利用VBA编程进行地形点抽稀（过滤）", "url": "/posts/excel-wps-vba-points-filter/", "categories": "编程开发, VBA-Excel", "tags": "Excel, WPS, VBA, 地形", "date": "2015-05-06 00:00:00 +0800", "snippet": "工程测量工作中因计算工程量的需要，测量地形时不会考虑什么测图比例或出图比例，对计量有利的地形变化点都需要布点。这样会导致地形点过密，在出图时需要过滤掉一部分（不在纸质地形图上显示），毕竟纸质版资料还是要按规范要求的点间距来绘图的。在南方CASS中就有点过滤命令用于出图前的图面点过滤。我们在使用Civil3D做测量资料时，在出图方面存在一定局限性，如没有相应图式，也没有点过滤等命令。好在我们可以利用VBA进行扩展。采用的方法是在Excel（WPS兼容）或是Civil3D里用VBA对地形数据文件过滤后生成新的数据文件，在Civil3D里新建一个曲面添加这个过滤后的点数据文件，出图时隐藏用于算量的曲面，将出图曲面进行绘图。Excel里的代码：在表格中添加一个按钮Private Declare Function ShellExecute Lib \"Shell32.dll\" Alias \"ShellExecuteA\" (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As LongFunction Distance(Sx As Double, Sy As Double, Ex As Double, Ey As Double, Precision As Integer) As DoubleDim DltX As Double, DltY As DoubleDltX = Ex - SxDltY = Ey - SyDistance = Round(Sqr(DltX * DltX + DltY * DltY), Precision)End FunctionSub filter() Dim Dia1 As Object, Strr As String, PPath As String Dim filterDist As Integer '抽稀距离 Dim Datums As Variant Dim RowIndex As Long Dim rIndex As Long, rIndex2 As Long, xa As Double, ya As Double, xb As Double, yb As Double RowIndex = 1 filterDist = Sheet1.Cells(1, 6) '抽稀距离 If filterDist = 0 Then filterDist = 2 'Sheet1.Cells(1, 7) = \"←F1单元格设置抽稀距离\" 'Sheet1.Cells(4, 7) = \"cehui@139.com\" Sheet1.Range(\"A1:E10000\").ClearContents Set Dia1 = Application.FileDialog(msoFileDialogFilePicker) Dia1.Title = \"版权所有(C) QQ:61902475 Email:cehui@139.com V20160225\" With Dia1 .AllowMultiSelect = False '限制只能同时选择一个文件 .Filters.Clear .Filters.Add \"南方CASS格式\", \"*.dat\", 1 '限制显示的文件类型 .Show For Each vrtSelectedItem In .SelectedItems PPath = vrtSelectedItem Next End With If Trim(PPath) &lt;&gt; \"\" Then Open PPath For Input As #1 Do While Not EOF(1) Line Input #1, Strr If Trim(Strr) &lt;&gt; \"\" Then Datums = Split(Strr, \",\") If UBound(Datums) = 4 Then Sheet1.Cells(RowIndex, 1) = RowIndex Sheet1.Cells(RowIndex, 2) = \"\" Sheet1.Cells(RowIndex, 3) = Datums(2) Sheet1.Cells(RowIndex, 4) = Datums(3) Sheet1.Cells(RowIndex, 5) = Datums(4) End If End If RowIndex = RowIndex + 1 Loop Close #1 End If'点抽稀 rIndex = 1 rIndex2 = rIndex + 1Do While Sheet1.Cells(rIndex, 1).Text &lt;&gt; \"\" If Trim(Sheet1.Cells(rIndex2, 2)) = \"\" Then xa = Sheet1.Cells(rIndex, 3) ya = Sheet1.Cells(rIndex, 4) rIndex2 = rIndex + 1 Do While Sheet1.Cells(rIndex2, 1).Text &lt;&gt; \"\" If (Abs(Sheet1.Cells(rIndex2, 3).Text - xa) &lt; filterDist And Abs(Sheet1.Cells(rIndex2, 4).Text - ya) &lt; filterDist) Then If Distance(xa, ya, Sheet1.Cells(rIndex2, 3).Text, Sheet1.Cells(rIndex2, 4).Text, 3) &lt; filterDist And Trim(Sheet1.Cells(rIndex, 2)) = \"\" And Trim(Sheet1.Cells(rIndex2, 2)) = \"\" Then Sheet1.Cells(rIndex2, 2) = \"T\" End If End If rIndex2 = rIndex2 + 1 Loop End If rIndex = rIndex + 1Loop If Trim(PPath) &lt;&gt; \"\" Then rIndex = 1 RowIndex = 1 Open Left(PPath, InStr(UCase(PPath), \".DAT\") - 1) &amp; \"-抽稀(\" &amp; filterDist &amp; \"m)-\" &amp; Replace(Format(Date, \"yyyy-mm-dd\"), \"-\", \"\") &amp; \"-\" &amp; Replace(Time, \":\", \"\") &amp; \".dat\" For Output As #2 Do While Trim(Sheet1.Cells(rIndex, 1)) &lt;&gt; \"\" 'Sheet1.Cells(5, 7) = rIndex &amp; \":\" &amp; RowIndex If Trim(Sheet1.Cells(rIndex, 2)) = \"\" Then Print #2, RowIndex &amp; \",,\" &amp; Format(Sheet1.Cells(rIndex, 3), \"0.000\") &amp; \",\" &amp; Format(Sheet1.Cells(rIndex, 4), \"0.000\") &amp; \",\" &amp; Format(Sheet1.Cells(rIndex, 5), \"0.000\") RowIndex = RowIndex + 1 End If rIndex = rIndex + 1 Loop Close #2 End IfSheet1.Range(\"B1:B10000\").ClearContentsEnd Sub对于删除重合地形点同样有用，只要将过滤间距设为一个很小的值如0.1即可。后续将介绍Civil3D里增加VBA点过滤功能，如下图：点过滤对话框：" }, { "title": "Git常用指令", "url": "/posts/git-common-orders/", "categories": "系统软件, 网络", "tags": "GitHub", "date": "2015-05-01 00:00:00 +0800", "snippet": " 准备工作 提交操作 对比操作 撤销操作 删除操作 恢复操作 远程仓库操作 远程仓库/代码冲突准备工作mkdir foldername //创建文件夹cd foldername //进入文件夹mkdir foldername &amp;&amp;　cd foldername //创建文件夹并进入pwd //显示当前目录 window下这命令无效git init //初始化 让这个目录成为git仓库git status //查看仓库当前状态git log //查看工作日志 //q退出git log --pretty=oneline //单行输入日志提交操作git add readme.txt //添加文件到仓库git commit -m \"update info\" //从缓冲区更新到版本库git commit -a -m \"update info\"//从工作区一次性更新到版本库对比操作git diff readme.txt //工作区和缓冲区的文件内容差异git diff --cached //缓冲区和版本库的文件内容差异git diff master //工作区和版本库的内容差异撤销操作git reset HEAD &lt;filename&gt; //从缓冲区撤销回工作区git checkout -- &lt;filename&gt; //工作区撤销回版本区的状态git commit -m \"info\" --amend //从缓冲区撤销回工作区，然后再重新提交删除操作rm &lt;filename&gt; //删除文件git rm &lt;filename&gt; //缓冲区删除文件，前提是工作区已经删除了该文件git rm -f &lt;filename&gt; //缓冲区删除文件，工作区也一并删除了git rm --cached &lt;filename&gt; //缓冲区删除文件，工作区不删除恢复操作//HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭git checkout &lt;commit id&gt; &lt;filename&gt; //工作区删除文件，从指定版本库中恢复文件git checkout test.txt//从版本库恢复git reset --hard &lt;commit id&gt; //退回具体版本git reset --hard HEAD^ //退回上一个版本git reset --hard HEAD~&lt;num&gt; //退回指定数字前版本git reflog //记录每一次命令穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。远程仓库操作当你从远程仓库克隆时，实际上Git自动把本地的master分支和远程的master分支对应起来了，并且，远程仓库的默认名称是origin。//先有本地库 后有远程库git remote add origin git@github.com:Aralic/learngit.git //关联远程库git push -u origin master// 本地同步到github上//先有远程库 克隆到本地git clone git@github.com:Arliac/gitskills.git git checkout -b dev //创建分支git checkout master //切换回master 分支git branch //查看当前分支git merge dev //在master分支下 合并dev分支git branch -d dev //删除dev分支git remote //查看远程库名字git remote -v// 查看更详细信息git push origin master//推送分支git push origin dev //推送分支远程仓库/代码冲突git fetch //同步远程仓库git diff master origin/master //查看一下和远程同步过来的代码差异git merge origin/master //和远程仓库代码 合并到本地git pull //直接和远程仓库合并代码" }, { "title": "GitHub 里同步一个 fork", "url": "/posts/Syncing-a-fork/", "categories": "系统软件, 网络", "tags": "GitHub", "date": "2015-04-12 23:14:54 +0800", "snippet": " 如何使用搜索引擎 具体方法 Configuring a remote for a fork Syncing a fork fork 了别人的仓库后，原作者又更新了仓库，如何将自己的代码和原仓库保持一致？本文将给你解答。如何使用搜索引擎其实这个问题并不难，我又被坑了。百度搜的东西不靠谱啊，以后这种问题一定要用英文在 Google 或者 Bing 上搜索，这样才能搜到原汁原味的答案。就当是一个教训吧。搜索 fork sync，就可以看到 GitHub 自己的帮助文档 Syncing a fork 点进去看这篇的时候，注意到有一个 Tip: Before you can sync your fork with an upstream repository, you must configure a remote that points to the upstream repository in Git.根据这两篇文章，问题迎刃而解！具体方法Configuring a remote for a fork 给 fork 配置一个 remote 主要使用 git remote -v 查看远程状态。 git remote -v# origin https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)# origin https://github.com/YOUR_USERNAME/YOUR_FORK.git (push) 添加一个将被同步给 fork 远程的上游仓库git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git 再次查看状态确认是否配置成功。git remote -v# origin https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)# origin https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)# upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)# upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)Syncing a fork 从上游仓库 fetch 分支和提交点，传送到本地，并会被存储在一个本地分支 upstream/master git fetch upstreamgit fetch upstream# remote: Counting objects: 75, done.# remote: Compressing objects: 100% (53/53), done.# remote: Total 62 (delta 27), reused 44 (delta 9)# Unpacking objects: 100% (62/62), done.# From https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY# * [new branch] master -&gt; upstream/master 切换到本地主分支(如果不在的话) git checkout mastergit checkout master# Switched to branch 'master' 把 upstream/master 分支合并到本地 master 上，这样就完成了同步，并且不会丢掉本地修改的内容。 git merge upstream/mastergit merge upstream/master# Updating a422352..5fdff0f# Fast-forward# README | 9 -------# README.md | 7 ++++++# 2 files changed, 7 insertions(+), 9 deletions(-)# delete mode 100644 README# create mode 100644 README.md 如果想更新到 GitHub 的 fork 上，直接 git push origin master 就好了。" }, { "title": "Jekyll 搭建静态博客", "url": "/posts/create-my-blog-with-jekyll/", "categories": "系统软件, 网络", "tags": "blog", "date": "2015-02-13 06:14:54 +0800", "snippet": " 搭建过程 安装Ruby 安装RubyGems 用RubyGems安装Jekyll 创建博客 后续 可能出现的问题 hitimes/hitimes (LoadError) 一直以来都想搭建一个自己的博客，但是近半年做项目太忙，再加上教研室的网络很坑爹，所以也一直没顾得上。之前用过 WordPress 托管在免费的京东云擎上，但是速度太慢。在知乎上看到一些相关的内容，于是选择了在github上用jekyll搭建博客。搭建过程在jekyll的官网上 http://jekyllrb.com/ 其实已经说得比较明白了，我在这里还是简单的说一下吧。我用的是Windows系统。 主要环节有：安装Ruby，安装RubyGems，安装jekyll，安装代码高亮插件，安装node.js安装Rubyruby官网下载安装：https://www.ruby-lang.org/en/downloads/安装完成后配置环境变量在命令提示符中，得到ruby版本号，如下图，即安装成功安装RubyGems官网下载 http://rubygems.org/pages/download rubygems-2.4.5.zipcd到RubyGems目录执行安装用RubyGems安装Jekyll执行下面的语句安装安装结束画面至此jekyll就已经安装完毕了，后续就是个性化的自己设定了。创建博客在d盘新建一个工作区jekyllWorkspacecd到jekyllWorkspace执行jekyll new name创建新的工作区文件结构如下：cd到博客文件夹，开启服务器watch为了检测文件夹内的变化，即修改后不需要重新启动jekyll我的环境下启动报错(你的可能没有)，再安装yajl-ruby和rouge再次启动服务器成功访问 http://localhost:4000/详细文章页面后续 整个安装过程参考了jekyll官网，注意jekyll还有一个简体中文官网，不过比较坑（我就被坑了），有些内容没有翻译过来，有可能会走弯路，建议如果想看中文的相关资料，也要中英对照着阅读。jekyll中文网 http://jekyllcn.com, jekyll英文网 http://jekyllrb.com jekyll中的css是用sass写的，当然直接在_sass/_layout.scss中添加css也是可以的。 本文是用Markdown格式来写的，相关语法可参考： Markdown 语法说明 (简体中文版) http://wowubuntu.com/markdown/ 按照本文的说明搭建完博客后，用github Pages托管就可以看到了。注意，在github上面好像不支持rouge，所以要push到github上时，我将配置文件_config.yml中的代码高亮改变为highlighter: pygments就可以了 博客默认是没有评论系统的，本文的评论系统使用了多说，详细安装办法可访问多说官网 http://duoshuo.com/，当然也可以使用搜狐畅言 http://changyan.sohu.com/作为评论系统。 也可以绑定自己的域名，如果没有域名，可以在godaddy http://www.godaddy.com/上将域名放入购物车等待降价，买之。 祝各位新年快乐！可能出现的问题hitimes/hitimes (LoadError)错误代码：C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require': cannot load such file -- hitimes/hitimes (LoadError)解决方法：在stackoverflow上又一个很好的解决方法。hitimes require error when running jekyll serve on windows 8.1 虽然上面的题主问的是 win 8.1 系统下的情况，但是同样适用于 win7。下面我简单翻译一下错误原因和解决方法。 可能是 Ruby 2.2 和 hitimes-1.2.2-x86-mingw32 中有一些 ABI 变化，少了一些相关的类库。 所以卸载 hitimes 并通过 --platform ruby 重装即可。代码如下：gem uni hitimes**Remove ALL versions**gem ins hitimes -v 1.2.1 --platform ruby 然后将自动重新编译 hitimes 并适用于 Ruby 2.2下面是我自己的卸载和安装过程：E:\\GitWorkSpace\\gaohaoyang.github.io&gt;gem uni hitimesYou have requested to uninstall the gem: hitimes-1.2.2-x86-mingw32timers-4.0.1 depends on hitimes (&gt;= 0)If you remove this gem, these dependencies will not be met.Continue with Uninstall? [yN] ySuccessfully uninstalled hitimes-1.2.2-x86-mingw32E:\\GitWorkSpace\\gaohaoyang.github.io&gt;gem ins hitimes -v 1.2.1 --platform rubyFetching: hitimes-1.2.1.gem (100%)Temporarily enhancing PATH to include DevKit...Building native extensions. This could take a while...Successfully installed hitimes-1.2.1Parsing documentation for hitimes-1.2.1Installing ri documentation for hitimes-1.2.1Done installing documentation for hitimes after 1 seconds1 gem installed关于，hitimes 是一个快速的高效的定时器解决方案库，详情可以去官网查看。" }, { "title": "hello jekyll!", "url": "/posts/welcome-to-jekyll/", "categories": "系统软件, 网络", "tags": "blog", "date": "2015-02-10 23:14:54 +0800", "snippet": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.Jekyll also offers powerful support for code snippets:def print_hi(name) puts \"Hi, #{name}\"endprint_hi('Tom')#=&gt; prints 'Hi, Tom' to STDOUT.Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll’s dedicated Help repository.Block Mathjax\\[f(x) = ax + b\\]Inline Mathjax $a \\neq b$" }, { "title": "Android Studio快捷键整理分享", "url": "/posts/android-studio-hotkeys/", "categories": "编程开发, IDE", "tags": "Android, 快捷键", "date": "2014-03-10 00:00:00 +0800", "snippet": " Android Studio快捷键 常用快捷键 非常用快捷键 IntelliJ IDEA使用技巧Android Studio快捷键 Alt+回车 导入包,自动修正 Ctrl+N 查找类 Ctrl+Shift+N 查找文件 Ctrl+Alt+L 格式化代码 Ctrl+Alt+O 优化导入的类和包 Alt+Insert 生成代码(如get,set方法,构造函数等) Ctrl+E或者Alt+Shift+C 最近更改的代码 Ctrl+R 替换文本 Ctrl+F 查找文本 Ctrl+Shift+Space 自动补全代码 Ctrl+空格 代码提示 Ctrl+Alt+Space 类名或接口名提示 Ctrl+P 方法参数提示 Ctrl+Shift+Alt+N 查找类中的方法或变量 Alt+Shift+C 对比最近修改的代码 Shift+F6 重构-重命名 Ctrl+Shift+先上键 Ctrl+X 删除行 Ctrl+D 复制行 Ctrl+/ 或 Ctrl+Shift+/ 注释(// 或者) Ctrl+J 自动代码 Ctrl+E 最近打开的文件 Ctrl+H 显示类结构图 Ctrl+Q 显示注释文档 Alt+F1 查找代码所在位置 Alt+1 快速打开或隐藏工程面板 Ctrl+Alt+ left/right 返回至上次浏览的位置 Alt+ left/right 切换代码视图 Alt+ Up/Down 在方法间快速移动定位 Ctrl+Shift+Up/Down 代码向上/下移动。 F2 或Shift+F2 高亮错误或警告快速定位 代码标签输入完成后，按Tab，生成代码。 选中文本，按Ctrl+Shift+F7 ，高亮显示所有该文本，按Esc高亮消失。 Ctrl+W 选中代码，连续按会有其他效果 选中文本，按Alt+F3 ，逐个往下查找相同文本，并高亮显示。 Ctrl+Up/Down 光标跳转到第一行或最后一行下 Ctrl+B 快速打开光标处的类或方法常用快捷键 1.Ctrl＋E，可以显示最近编辑的文件列表 2.Shift＋Click可以关闭文件 3.Ctrl＋[或]可以跳到大括号的开头结尾 4.Ctrl＋Shift＋Backspace可以跳转到上次编辑的地方 5.Ctrl＋F12，可以显示当前文件的结构 6.Ctrl＋F7可以查询当前元素在当前文件中的引用，然后按F3可以选择 7.Ctrl＋N，可以快速打开类 8.Ctrl＋Shift＋N，可以快速打开文件 9.Alt＋Q可以看到当前方法的声明 10.Ctrl＋W可以选择单词继而语句继而行继而函数 11.Alt＋F1可以将正在编辑的元素在各个面板中定位 12.Ctrl＋P，可以显示参数信息 13.Ctrl＋Shift＋Insert可以选择剪贴板内容并插入 14.Alt＋Insert可以生成构造器/Getter/Setter等 15.Ctrl＋Alt＋V 可以引入变量。例如把括号内的SQL赋成一个变量 16.Ctrl＋Alt＋T可以把代码包在一块内，例如try/catch 17.Alt＋Up and Alt＋Down可在方法间快速移动非常用快捷键 18.在一些地方按Alt＋Enter可以得到一些Intention Action，例如将”==”改为”equals()” 19.Ctrl＋Shift＋Alt＋N可以快速打开符号 20.Ctrl＋Shift＋Space在很多时候都能够给出Smart提示 21.Alt＋F3可以快速寻找 22.Ctrl＋/和Ctrl＋Shift＋/可以注释代码 23.Ctrl＋Alt＋B可以跳转到抽象方法的实现 24.Ctrl＋O可以选择父类的方法进行重写 25.Ctrl＋Q可以看JavaDoc 26.Ctrl＋Alt＋Space是类名自动完成 27.快速打开类/文件/符号时，可以使用通配符，也可以使用缩写 28.Live Templates! Ctrl＋J 29.Ctrl＋Shift＋F7可以高亮当前元素在当前文件中的使用 30.Ctrl＋Alt＋Up /Ctrl＋Alt＋Down可以快速跳转搜索结果 31.Ctrl＋Shift＋J可以整合两行 32.Alt＋F8是计算变量值IntelliJ IDEA使用技巧在使用 InelliJ IDEA 的过程中，通过查找资料以及一些自己的摸索，发现这个众多 Java 程序员喜欢的 IDE 里有许多值得一提的小窍门，如果能熟练的将它们应用于实际开发过程中，相信它会大大节省你的开发时间，而且随之而来的还会有那么一点点成就感：) Try it ！ 1 、写代码时用 Alt-Insert (Code Generate…)可以创建类里面任何字段的 getter 与 setter 方法。 2 、右键点击断点标记(在文本的左边栏里)激活速查菜单，你可以快速设置 enable/disable 断点或者条件它的属性。3 、 CodeCompletion (代码完成)属性里的一个特殊的变量是，激活 Ctrl-Alt-Space 可以完成在或不在当前文件里的类名。如果类没有引入则 import 标志会自动创建。4 、使用 Ctrl-Shift-V 快捷键可以将最近使用的剪贴板内容选择插入到文本。使用时系统会弹出一个含有剪贴内容的对话框，从中你可以选择你要粘贴的部分。5 、利用 CodeCompletion (代码完成)属性可以快速地在代码中完成各种不同地语句，方法是先键入一个类名地前几个字母然后再用 Ctrl-Space 完成全称。如果有多个选项，它们会列在速查列表里。6 、用 Ctrl-/ 与 Ctrl-Shift-/ 来注释 / 反注释代码行与代码块。Ctrl-/ 用单行注释标记(“ //… ”)来注释 / 反注释当前行或者选择地代码块。而 Ctrl-Shift-/ 则可以用块注释标记(“ ”)把所选块包围起来。要反注释一个代码块就在块中任何一个地方按 Ctrl-Shift-/ 即可。 7 、按 Alt-Q (View Context Info)可以不需要移动代码就能查看当前方法地声明。连续按两次会显示当前所编辑的类名。 8 、使用 Refactor Copy Class… 可以创建一个所选择的类的“副本”。这一点很有用，比如，在你想要创建一个大部分内容都和已存在类相同的类时。 9 、在编辑器里 Ctrl-D 可以复制选择的块或者没有所选块是的当前行。10 、 Ctrl-W (选择字)在编辑器里的功能是先选择脱字符处的单词，然后选择源代码的扩展区域。举例来说，先选择一个方法名，然后是调用这个方法的表达式，然后是整个语句，然后包容块，等等。11 、如果你不想让指示事件细节的“亮球”图标在编辑器上显示，通过按 Alt-Enter 组合键打开所有事件列表然后用鼠标点击它就可以把这个事件文本附件的亮球置成非活动状态。这样以后就不会有指示特殊事件的亮球出现了，但是你仍然可以用 Alt-Enter 快捷键使用它。12 、在使用 CodeCompletion 时，可以用逗点(.)字符，逗号(，)分号(；)，空格和其它字符输入弹出列表里的当前高亮部分。选择的名字会随着输入的字符自动输入到编辑器里。13 、在任何工具窗口里使用 Escape 键都可以把焦点移到编辑器上，Shift-Escape 不仅可以把焦点移到编辑器上而且还可以隐藏当前(或最后活动的)工具窗口，F12 键把焦点从编辑器移到最近使用的工具窗口。14 、在调试程序时查看任何表达式值的一个容易的方法就是在编辑器中选择文本(可以按几次 Ctrl-W 组合键更有效地执行这个操作)然后按 Alt-F8 。 15 、要打开编辑器脱字符处使用的类或者方法 Java 文档的浏览器，就按 Shift-F1 (右键菜单的 External JavaDoc)，要使用这个功能须要把加入浏览器的路径，在“ General ”选项中设置(Options IDE Settings)，另外还要把创建的 Java 文档加入到工程中(File Project Properties)。 16 、用 Ctrl-F12 (View File Structure Popup)键你可以在当前编辑的文件中快速导航，这时它会显示当前类的成员列表。选中一个要导航的元素然后按 Enter 键或 F4 键。要轻松地定位到列表中的一个条目，只需键入它的名字即可。 17 、在代码中把光标置于标记符或者它的检查点上再按 Alt-F7 (右键菜单中的 Find Usages…)会很快地查找到在整个工程中使用地某一个类、方法或者变量的位置。 18 、按 Ctrl-N (Go to Class…)再键入类的名字可以快速地在编辑器里打开任何一个类。从显示出来的下拉列表里选择类，同样的方法你可以通过使用 Ctrl-Shift-N (Go to File…)打开工程中的非 Java 文件。 19 、要导航代码中一些地方使用到的类、方法或者变量的声明，把光标放在查看项上再按 Ctrl-B 即可。也可以通过按 Ctrl 键的同时在查看点上单击鼠标键调转到声明处。20 、把光标放到查看点上再按 Ctrl-Alt-B 可以导航到一个抽象方法的实现代码。 21 、要看一个所选择的类的继承层次，按 Ctrl-H (Browse Type Hierarchy)即可。也可以激活编辑器中的继承关系视图查看当前编辑类的继承关系。22 、使用 Ctrl-Shift-F7 (Search Highlight Usages in File)可以快速高亮显示当前文件中某一变量的使用地方。按 Escape 清除高亮显示。 23 、用 Alt-F3 (Search Incremental Search)在编辑器中实现快速查查找功能。 在“ Search for: ”提示工具里输入字符，使用箭头键朝前和朝后搜索。按 Escape 退出。24 、按 Ctrl-J 组合键来执行一些你记不起来的 Live Template 缩写。比如，键“ it ”然后按 Ctrl-J 看看有什么发生。25 、 Introduce Variable 整合帮助你简化代码中复杂的声明。举个例子，在下面的代码片断里，在代码中选择一个表达式：然后按 Ctrl-Alt-V 。26 、 Ctrl-Shift-J 快捷键把两行合成一行并把不必要的空格去掉以匹配你的代码格式。 27 、 Ctrl-Shift-Backspace (Go to Last Edit Location)让你调转到代码中所做改变的最后一个地方，多按几次 Ctrl-Shift-Backspace 查看更深的修改历史。 28 、用 Tools Reformat Code… 根据你的代码样式参考(查看 Options IDE Setting Code Style)格式化代码。 使用 Tools Optimize Imports… 可以根据设置(查看 Options IDE Setting Code Style Imports)自动“优化” imports (清除无用的 imports 等)。 29 、使用 IDEA 的 Live Templates Live Templates 让你在眨眼间创建许多典型代码。比如，在一个方法里键入，再按 Tab 键看有什么事情发生了。用 Tab 键在不同的模板域内移动。查看 Options Live Templates 获取更多的细节。 30 、要查看一个文件中修改的本地历史，激活右键菜单里的 Local VCS Show History… 。也许你可以导航不同的文件版本，看看它们的不同之处再回滚到以前的任何一个版本吧。使用同样的右键菜单条目还可以看到一个目录里修改的历史。有了这个特性你就不会丢失任何代码了。 31 、如果要了解主菜单里每一个条目的用途，把鼠标指针移到菜单条目上再应用程序框架的底部的状态栏里就会显示它们的一些简短描述，也许会对你有帮助。 32 、要在编辑器里显示方法间的分隔线，打开 Options IDE Settings Editor ，选中“ Show method separators ”检查盒(checkbox)。 33 、用 Alt-Up 和 Alt-Down 键可以在编辑器里不同的方法之间快速移动。34 、用 F2/Shift-F2 键在高亮显示的语法错误间跳转。用 Ctrl-Alt-Down/Ctrl-Alt-Up 快捷键则可以在编译器错误信息或者查找操作结果间跳转。 35 、通过按 Ctrl-O (Code Override Methods…)可以很容易地重载基本类地方法。 要完成当前类 implements 的(或者抽象基本类的)接口的方法，就使用 Ctrl-I (Code Implement Methods…)。 36 、如果光标置于一个方法调用的括号间，按 Ctrl-P 会显示一个可用参数的列表。37 、要快速查看编辑器脱字符处使用的类或方法的 Java 文档，按 Ctrl-Q (在弹出菜单的 Show Quick JavaDoc 里)即可。38 、像 Ctrl-Q (Show Quick JavaDoc 显示简洁 Java 文档)， Ctrl-P (Show Parameter Info 显示参数信息)， Ctrl-B (Go to Declaration 跳转到声明)， Shift-F1 (External JavaDoc 外部 Java 文档)以及其它一些快捷键不仅可以在编辑器里使用，也可以应用在代码完成右键列表里。 39 、 Ctrl-E (View Recent Files)弹出最近访问的文件右键列表。选中文件按 Enter 键打开。 40 、在 IDEA 中可以很容易地对你的类，方法以及变量进行重命名并在所有使用到它们的地方自动更正，试一下，把编辑器脱字符置于任何一个变量名字上然后按 Shift-F6 (Refactor Rename…)。在对话框里键入要显示地新名字再按 Enter 。你会浏览到使用这个变量地所有地方然后按“ Do Refactor ”按钮结束重命名操作。 41 、要在任何视图(Project View 工程视图， Structure View 结构视图或者其它视图)里快速选择当前编辑地部分(类，文件，方法或者字段)，按 Alt-F1 (View Select in…)。 42 、在“ new ”字符后实例化一个已知类型对象时也许你会用到 SmartType 代码完成这个特性。比如，键入再按 Ctrl-Shift-Space ：43 、通过使用 SmartType 代码完成，在 IDEA 中创建接口的整个匿名 implementation 也是非常容易的，比如，对于一些 listener (监听器)，可以键入Component component;component.addMouseListener( new);然后再按 Ctrl-Shift-Space 看看有什么发生了。44 、在你需要设置一个已知类型的表达式的值时用 SmartType 代码完成也很有帮助。比如，键入String s = (再按 Ctrl-Shift-Space 看看会有什么出现。45 、在所有视图里都提供了速查功能：在树里只需键入字符就可以快速定位到一个条目。 46 、当你想用代码片断捕捉异常时，在编辑器里选中这个片断，按 Ctrl-Alt-T (Code Surround with…)然后选择“ try/catch ”。它会自动产生代码片断中抛出的所有异常的捕捉块。在 Options File Templates Code tab 中你还可以自己定制产生捕捉块的模板。 用列表中的其它项可以包围别的一些结构。47 、在使用代码完成时，用 Tab 键可以输入弹出列表里的高亮显示部分。不像用 Enter 键接受输入，这个选中的名字会覆盖掉脱字符右边名字的其它部分。这一点在用一个方法或者变量名替换另一个时特别有用。48 、在声明一个变量时代码完成特性会给你显示一个建议名。比如，开始键入“ private FileOutputStream ”然后按 Ctrl-Space。" }, { "title": "OpenRoads Designer Project File Management", "url": "/posts/ord-OpenRoads-Designer-Project-File-management/", "categories": "OpenRoads, 综合基础", "tags": "文件, 管理, en", "date": "2013-10-05 18:25:00 +0800", "snippet": " Project Management Preface Agenda Seed Files Make sure they are clean! GeoCoordinate Systems 2D and 3D Seed Files Data Segregation Why? Common Mistakes Alignments - To segregate individually or not? Corridors - Break them up or not? Corridors - What dictates where to break it? Awareness Reference Files - Live Nesting Live Nesting Project ManagementProject Management can mean a lot of things.But for the purposes of this presentation,it means managing your project data so that OpenRoads Designer can operate in the most effective and efficient manner possible.Preface “Best Practices” are suggestions and good “rules of thumb” to go by,not requirements. There is no one size fits all. Processes can and do vary by: Organization Project DisciplineAgenda Seed Files Data Segregation Reference FilesSeed FilesMake sure they are clean! No previous civil data No holdovers(e.g. line styles,fonts,etc.) from previous versionsGeoCoordinate Systems Assign coordinate system for the project Allows you to easily consume other similar data (e.g. DEM files) Allows you to easily integrate with other software(e.g. Google Earth)2D and 3D Seed Files 3D for Survey and Terrains 2D for all others (Geometry,Corridors,Superelevation,etc.) Let ORD create and manage the 3D ModelsData Segregation Topo/Survey Terrain Geometry Corridors Superelevation Utilities Cross Sections Plan-Profile Sheets Drainage Bridges Geotech Control Features Proposed Terrains Etc.Why? Smaller files are inherently faster and more efficient. Easier to manage and recall where things are. More control later wher you need to compile then for diffenrent scenarios (e.g. create a composite model for LumenRT).Common Mistakes Creating ‘linked’ objects in the Corridor file Example:Let’s say you create a proposed terrain from the finish grade mesh.If you create it in the same file as the corridor,then it will be updated every time you process the corridor. Example:Let’s say you create civil cells for driveways in the corridor file.Then every time you process the corridor it has to update the civil cells. Place these ‘linked’ objects in their own file. Creating extraneous data in the Corridor file Superelevation Cross Sections Place these in their own file Alignments - To segregate individually or not? May be warranted if multiple team members want to work on diffenrent alignments at the same time. If using ProjectWise,would allow you to ‘check out’ alignments Can use a blank “master” file to get all geometry at once. √ Create blank master file √ Reference each individual alignment dgn √ Reference master file when you want all geometry Corridors - Break them up or not? Rule of thumb? Yes. Why? √ Not because of any size/memory restrictions √ Allows multiple team members to work at same time. √ Smaller sections are faster and easier to work with. √ You can still reference together when you need to see or utilize the project as a whole. Corridors - What dictates where to break it? This can be diffenrent from project to project. √ Based on engineering configuration (e.g interchanges) √ Based on size/scale of the project √ Based on structures (e.g. bridge locations) √ Based on geographical entities (e.g. intersections) AwarenessWhatever you decide to do,make sure your team is aware up-front of the plan,so everyone is on the same page.Reference Files - Live NestingLive Nesting A file can have any number of reference attachments,and those attachments can have attachments,which in turn can have more attachments,and son and so on. Enabling Live nesting when referencing a file causes it’s children (and potentially their children) to be automatically referenced as well. To what ‘depth’ these children are located depends on the Nesting Depth value that you use.Q:What’s the Advantage?A:Faster and more efficient method of attaching and displaying multiple files,just by attaching a single,parent reference to a model.Q: Are duplicate references a disadvantage?A: No.Duplicate references are recognized and ignored." }, { "title": "OpenRoads Designer模板-点属性", "url": "/posts/ord-template-point-properties/", "categories": "OpenRoads, 断面模板", "tags": "模板, 点, 属性", "date": "2013-05-02 15:25:00 +0800", "snippet": " 指定和道路模板点相关的属性 Name：名称 Feature Name Override：特性名重载 Feature Definition：特性 Alternate Surface：备选表面 End Condition Properties：末端条件属性 Check for Interception ：检查截断 Place Point at Interception ：在截断处放置点 End Condition is Infinite：是否无限延长末端条件 Do Not Construct ：不要构造 Member of：……的成员 Constraints：约束 Type：类型 父点 Rollover Values(check box and button) ：翻转值（复选框和按钮） Value：值 Label：标签 Project to Surface：面投影 Horizontal Feature Constraint：水平特性约束 Range：范围 Apply：应用 指定和道路模板点相关的属性Name：名称显示点的名称。下拉列表包含Point Name List(点名称列表)的所有项。Feature Name Override：特性名重载显示创建面时与该点对应的特性名。这个字段是可选的。如果是空白的，表明这个点的名称将被作为特性名。注意：由于点的名称在模板中必须是唯一的，Feature Name(特性名)不是必须的。然而，当在给定桩号处同一个特性名存在于不止一个点时，将产生不可预料的结果。最初，这个选项是用于末端条件组件，当模板的末端条件改变时，用来创建桩号之间的联系。例如，如果想让面接头处的所有点有一个特性，那么设置模板每侧的所有末端条件终点含有相同的特性名。（也就是说，设置所有右侧的挖方和填方终点的特性名为Tie_R，左侧的为Tie_L）Feature Definition：特性显示和定义点的特性。Alternate Surface：备选表面指定点在备选表面的名称。可以选择多个备选表面名字。从激活模板的可选面列表中选择。End Condition Properties：末端条件属性当点是末端条件的点时，指定额外的属性。Check for Interception ：检查截断选中时，程序在求解末端条件时，将会检测该控制点前的直线是否会被目标对象截断。不选中时，程序将忽略该控制点前直线的截断检测。Place Point at Interception ：在截断处放置点选中时，当控制点前的直线被目标对象截断时，程序将把控制点设置在截断处。不选中时，程序会根据用户定义的长度绘制直线。End Condition is Infinite：是否无限延长末端条件这个标记只对末端条件组件的最后一个点有用。选中时，程序会把最后一条线段作为无限长的射线与目标对象求交。Do Not Construct ：不要构造选中时，程序在绘制线段时将忽略该点，其他过程和其他点一样。Member of：……的成员显示包含该点的组件名称。Constraints：约束查看和编辑点的约束。Type：类型指定约束类型：无，水平，竖直，坡度，向量偏移，面投影，设计对象投影，水平最大值，水平最小值，竖直最大值，竖直最小值，角度和距离。父点 Parent1：父点1指定约束的父点。 Parent2：父点2如果可用的话，显示第二个父点。仅当约束类型是水平和竖直最大值最小值，以及向量偏移时可用。Rollover Values(check box and button) ：翻转值（复选框和按钮）仅当约束类型是坡度时显示。当翻转参考点是坡度约束的第二个父点时，这些值显示在父2字段。选中复选框可以激活Rollover Values按钮。单击按钮显示Rollover Point Properties对话框。Value：值对水平约束类型，指定水平偏移值。负值表示往左，正值表示往右。对竖直约束类型，指定竖直偏移值。负值表示往下，正值表示往上。对坡度约束类型，指定斜率值。负值表示坡度是从左上到右下，正值表示坡度是从右下到左上。对向量偏移约束类型，负值表示偏移值位于从第一个父点到第二个父点连线向量的左侧，正值表示位于右侧。对面投影约束类型，值为面的名称（注意空白将使用当前激活的面）。对设计对象投影约束类型，值为试图投影的最大距离。负值表示投影位于左侧，正值表示投影位于右侧。Label：标签显示约束的可选标签。带标签的约束可以在设计过程中修改。同一个标签名可以被用在不止一个约束中，也可以被用在不止一个点上。Project to Surface：面投影限制点投影到面上：任意方向（没有限制），向下（点仅从它原始位置向下投影），向左（点仅从它原始位置向左投影），向右（点仅从它原始位置向右投影），向上（点仅从它原始位置向上投影）。当其他的约束类型是竖向约束时，忽略向上和向下选项。同理，当其他的约束类型是水平约束时，忽略向左和向右选项。Horizontal Feature Constraint：水平特性约束选中时，如果在指定的范围内找到该特性或者找到一条与该特性匹配的路线，点的特性将重载点约束。Range：范围指定从点的当前位置到特性或指定类型路线的最大水平搜索距离。仅搜索当前的面和当前的几何项目。负值表示往左侧搜索，正值表示往右侧。零将搜索符合特性的最近对象。Apply：应用将修改保存到当前点。" }, { "title": "AutoLISP源代码展CASS地形点生成三维小球体检查超欠挖", "url": "/posts/autolisp-layout-cass-points-draw-small-sphere/", "categories": "编程开发, AutoLISP", "tags": "CASS, 地形, 超欠挖", "date": "2012-09-27 13:58:00 +0800", "snippet": "(defun C:zzZd (/ ptName ptSign ptE ptN ptH) ;读取DAT数据文件生成小球体 (setq fi (getfiled \"选择数据文件\" \"F:\\\\\" \"dat\" 0)) (setq f (open fi \"r\")) (setq rIndex 0) (while (setq lineStr (read-line f)) (setq lineStrs (splitX lineStr \",\")) (setq ptName (cons (nth 0 lineStrs) ptName)) ;;将点编号或点名生成表 (setq ptE (cons (nth 2 lineStrs) ptE)) ;;将E生成表 (setq ptN (cons (nth 3 lineStrs) ptN)) ;;将N生成表 (setq ptH (cons (nth 4 lineStrs) ptH)) ;;将H生成表 (setq ptSign (cons (itoa rIndex) ptSign)) ;;生成记号表 (setq rIndex (+ rIndex 1)) ) (setq ptName (reverse ptName)) ;;反序 (setq ptSign (reverse ptSign)) ;;反序 (setq ptE (reverse ptE)) ;;反序 (setq ptN (reverse ptN)) ;;反序 (setq ptH (reverse ptH)) ;;反序 (close f) ;;表处理 (setq rIndex 0) (while (setq tmpPtname (nth rIndex ptName)) (setq tmpE (atof (nth rIndex ptE))) (setq tmpN (atof (nth rIndex ptN))) (setq tmpH (atof (nth rIndex ptH))) (setq tmpSign (nth rIndex ptSign)) ;;======自定义点处理程序区======= (command \"sphere\" (list tmpE tmpN tmpH) 0.5) (princ) ;;======自定义点处理程序区======= (setq rIndex (+ rIndex 1)) ) ;;表处理 (princ))" }, { "title": "AutoLISP绘三维对象实体代码", "url": "/posts/autolisp-draw-3d-entity-code/", "categories": "编程开发, AutoLISP", "tags": "三维, 实体", "date": "2012-09-26 10:38:00 +0800", "snippet": " 1、直接画线 2、直接画面 3、直接画体1、直接画线(command \"line\" (list s1 s2 s3) (list s4 s5 s6) \"\" )(command \"line\" (list s7 s8 s9) (list s10 s11 s12) \"\" )2、直接画面(command \"3dface\" (list s1 s2 s3) (list s4 s5 s6) (list s7 s8 s9) (list s10 s11 s12)\"\" )(command \"3dface\" (list s13 s14 s15)(list s16 s17 s18)(list s19 s20 s21)(list s22 s23 s24)\"\" )3、直接画体(command \"3dpoly\" (list s1 s2 s3) (list s4 s5 s6) (list s7 s8 s9)(list s1 s2 s3)\"\" )(command \"3dpoly\" (list s10 s11 s12)(list s13 s14 s15)(list s16 s17 s18)(list s10 s11 s12)\"\" )(command \"loft\" (entnext)(entlast) \"\" \"\")" }, { "title": "AutoCAD旋转视图", "url": "/posts/autocad-rotate-view/", "categories": "AutoCAD, 绘图基础", "tags": "视图, 旋转", "date": "2012-05-15 08:25:00 +0800", "snippet": " 1、利用UCS和PLAN命令旋转视图 2、使用Dview旋转视图当需要处理的图形对象角度扭曲时需要将视图而不是坐标系调整可使用以下方法：1、利用UCS和PLAN命令旋转视图其实用UCS也行，输入UCS，回车，输入Z，回车，输入要旋转的角度，将坐标系旋转。然后输入PLAN，让视图跟坐标系对齐。然后输入UCS，回车，输入W，回车，再将坐标系恢复成默认的世界坐标系。注：UCSFOLLOW需要设置为0，否则设置了坐标系视图会自动对齐。2、使用Dview旋转视图其实CAD提供了视图旋转的命令，估计用的人并不多，因此在菜单和工具栏里找不到，国外倒是有不少人用，用这个命令的目的就是旋转视图，在布局空间视口中用得比较多。旋转视图的命令是DVIEW，这个命令的选项有很多，下面只看看旋转视图的操作方法吧，其他的选项大家有兴趣可以自己试试。打开需要旋转视图的图形，如图所示。在旋转视图之前我们需要知道旋转的角度，可以通过查看图中的文字或直线的角度。在旋转视图之前我们需要知道旋转的角度，可以通过查看图中的文字或直线的角度。 输入DVIEW命令，回车，软件会提示让选择一个对象或使用DVIEWBLOCK。这里就是要选择一个对象来预览视图旋转的效果，DVIEWBLOCK就是软件提供的一个默认的图形。我们可以选择图中的一个文字或直线，如图所示。 回车，确认选择完了对象，此时图中只显示了被选中的文字或直线，命令行会显示DVIEW的一系列选项。 输入TW，回车，此时可拖动光标来确定旋转角度，也可以输入事先已确定的角度后回车，我们可以看到图形被旋转了。 回车，确定视图旋转角度，整张图纸就完全显示出来，视图应该就旋转到我们需要的角度了。" }, { "title": "AutoCAD编辑处理线构件LINEWORK相关命令", "url": "/posts/autocad-linework-commands/", "categories": "AutoCAD, 绘图基础", "tags": "编辑, 命令, 裁剪, 延伸", "date": "2012-05-13 08:25:00 +0800", "snippet": " 1、修剪线条构件 2、选定对象添加多义线边界 3、将线条构件减切 4、将线条构件指定轴上两点居中 5、将线条构件切分 6、将线条构件延伸1、修剪线条构件命令：LINEWORKTRIM This command lets you easily trim hatches, lines, polyline, arcs, circles, AEC polygons, mass element extrusions, spaces, or any block-based content (including detail components) made up of these types of linework or objects.The following prompts are displayed.Select linework to trimSpecify linework, object or block to trim.Select the first point of the trim line, or, enter to pick on screen.Specify first point to establish the trim line.Select the second point to trim lineSpecify second point to establish the trim line.Select the side to trimClick the side of the trim line where the region you want to remove is located.2、选定对象添加多义线边界命令：LINEWORKSHRINKWRAPYou can add a boundary around a selected number of parcels. The boundary is represented by a 2D polyline.To create a boundary around a selected number of parcels Enter LineworkShrinkwrap at the command line. Select the parcels that you want to use as a boundary and press Enter.This command draws a polyline around touching objects. If your selection includes parcels that are not touching, the boundary is drawn around each individual parcel.3、将线条构件减切命令：LINEWORKSUBTRACT4、将线条构件指定轴上两点居中命令：LINEWORKCENTER5、将线条构件切分命令：LINEWORKDIVIDE6、将线条构件延伸命令：LINEWORKEXTEND" }, { "title": "Civil 3D创建点文件描述码（点特征码）集控制展点样式与特性", "url": "/posts/c3d-point-feature-code/", "categories": "Civil3D, 测点", "tags": "特征, 描述码, 点样式, 特征", "date": "2011-09-22 10:33:00 +0800", "snippet": "测量人员对CASS格式的地形坐标数据文件格式都非常熟悉：1,-64.3340,396.9300,2608.63802,-63.6600,399.6750,2611.67603,-62.6690,403.5490,2615.93104,-60.4640,412.3790,2625.6420文件格式为：Pn,E,N,H在Pn和坐标E之间的空白字段其实是点的特征码，用于指定该点对应的地物地形特征，如电杆，陡坎等，在进行数字测图时要指定地形点的特征码，CASS的特征码是一系列的数字代码，可在CASS的帮助文件中找到。 对于工程测量人员来说，测量地形的目的通常是计算工程量，并不是为了成图，所以在地形数据文件中会将特征码字段空置。Civil 3D对导入的点文件格式要求比较灵活，可以进行自定义，为了兼容，会设置成能导入CASS格式的*.dat文件：Civil 3D中自定义的点文件格式同样的，Civil 3D也可以在点文件中的特定字段指定点的特征（Civil 3D中称为描述码），描述码所在字段位置可以在点文件格式定义时指定，习惯上也同CASS格式一样把第二字段设为描述码字段：1,+,268800,3742600,0.02,NE,268800,3742600,0.03,+,268800,3742650,0.04,NE,268800,3742650,0.05,+,268800,3742700,0.0为了让C3D认识这些描述码，需要在C3D中定义描述码集，将描述码与点标签样式进行关联，这样在导入点文件时，C3D遇到描述码，就会在生成点对象时，使用描述码对应的点标签样式。在C3D中打开工具空间，选中“设定”页，如下图在设定视图中选中并展开“点”，在“点”列表中找到“描述码集”，用鼠标右键点击，选“新建”创建一个新的描述码集，并将其命名为“CASS”选中新建的描述码集“CASS”，并在下部描述码定义表中定义一序列描述码，指定具有特定描述码的点特性，如点标签、图层等，如下图：在前述点文件格式中（图二），使用了两个描述码“+”、“+NE”，这是为了在C3D里绘制CASS格式的出图方格网新增的两个描述码，如下图的点文件：1,+,268800,3742600,0.02,NE,268800,3742600,0.03,+,268800,3742650,0.04,NE,268800,3742650,0.05,+,268800,3742700,0.06,NE,268800,3742700,0.07,+,268850,3742600,0.08,NE,268850,3742600,0.09,+,268850,3742650,0.010,NE,268850,3742650,0.011,+,268850,3742700,0.012,NE,268850,3742700,0.013,+,268900,3742600,0.014,NE,268900,3742600,0.015,+,268900,3742650,0.016,NE,268900,3742650,0.017,+,268900,3742700,0.018,NE,268900,3742700,0.019,+,268950,3742600,0.020,NE,268950,3742600,0.021,+,268950,3742650,0.022,NE,268950,3742650,0.023,+,268950,3742700,0.024,NE,268950,3742700,0.025,+,269000,3742600,0.026,NE,269000,3742600,0.027,+,269000,3742650,0.028,NE,269000,3742650,0.029,+,269000,3742700,0.030,NE,269000,3742700,0.0在C3D里导入点，生成如下图：1:1000比例时方格网样式点位标志可随比例自动调整大小：1:500比例时方格网样式" }, { "title": "AutoCAD Civil 3D设计建模", "url": "/posts/acad-c3d-design-modeling/", "categories": "Civil3D, 建模", "tags": "设计", "date": "2011-06-27 13:38:00 +0800", "snippet": " 个人笔记，仅供参考。 特征线 三维多义线：3DPOLY，设置端点高程 二维多义线：PLINE，设计高程(Elevation)，常用于定义水平面 特征点 数据文件：由设计图编算CASS数据，展点、编组，由点编组定义曲面 CAD点对象：Point，通过Divide、Measure创建的图元对象创建曲面 CAD点-&gt;C3D点■ 通过Point、Divide和Measure创建CAD点 ■ 创建点工具栏第一组命令 ■ 多段线顶点-自动、转换AutoCAD点■ 改变点编组 ● 选中生成的点 ● 修改属性原始描述如“设计” ● 新建点编组 ● 修改点编组特性（查询编译器、选中修改查询、点击插入行：原始描述=设计）■ 新建曲面、添加点编组 辅助命令 均分：Divide，将指定线段平分 定长：Measure，按指定长度划分段 点样式：ddptype " }, { "title": "Excel表格实用公式", "url": "/posts/formula-excel/", "categories": "测量测绘, 公式", "tags": "Excel, 公式, WPS, 表格", "date": "2011-02-16 08:44:00 +0800", "snippet": " Excel或WPS表格中获取-1.000~1.000间的随机数公式： =RANDBETWEEN(-1000,1000)/1000 特殊符号输入快捷键 名称 符号 输入方法 正负号 ± Alt+177 平方 m² Alt+178 立方 m³ Alt+179 打勾 √ Alt+41420 打叉 × Alt+41409 除号 ÷ Alt+247 千分号 ‰ Alt+137 度数 C° Alt+176 约等于 ≈ Alt+41430 不等于 ≠ Alt+41433 小于等于 ≤ Alt+41436 大于等 ≥ Alt+41437 五角星 ★ Alt+41455 空心圆 ○ Alt+41456 实心圆 ● Alt+41457 菱形框 ◇ Alt+41459 菱形 ◆ Alt+41460 方框 □ Alt+41461 方形 ■ Alt+41462 三角框 △ Alt+41463 三角 ▲ Alt+41464 重点符 ※ Alt+41465 右箭头 → Alt+41466 左箭头 ← Alt+41467 上箭头 ↑ Alt+41468 下箭头 ↓ Alt+41469 直径 Φ Alt+42677 欧姆 Ω Alt+42680 " }, { "title": "AutoLISP自定义通用过程函数", "url": "/posts/lisp-common-subs-functions/", "categories": "编程开发, AutoLISP", "tags": "函数, 通用代码", "date": "2010-05-11 09:06:16 +0800", "snippet": "本段代码是 AutoCAD工程测量工具集 中可能调用的自定义通用函数。;;自定义通用函数----------------------------------------------------------------------------------;;;;用法：(EntMakeText 点X 点Y 文本内容 文本高度)(defun EntMakeText (px py str tHeight styleName layerName / pt) (setq pt (list px py)) (entmakeX (list '(0 . \"TEXT\")\t (cons 1 str)\t (cons 10 pt)\t (cons 7 styleName)\t (cons 8 layerName)\t (cons 40 tHeight)\t ) ) );;用法：(EntMakeLine 起点X 起点Y 终点X 终点Y)(defun EntMakeLine (xa ya xb yb layerName / p1 p2) (setq\tp1 (list xa ya)\tp2 (list xb yb)\t) (entmakeX (list '(0 . \"LINE\")\t\t '(370 . 0)\t\t (cons 10 p1)\t\t (cons 11 p2)\t\t (cons 8 layerName)\t\t )\t ) )(defun entMakePLineThick (pts weight layerName) (entmake (append\t (list '(0 . \"LWPOLYLINE\")\t\t '(100 . \"AcDbEntity\")\t\t '(100 . \"AcDbPolyline\")\t\t (cons 8 layerName)\t\t ;;层\t\t ;;'(62 . 7)\t\t ;;颜色：7-白色\t\t '\t\t (370 . 0)\t\t ;;线宽0，0.20值为(370 . 20)\t\t (cons 90 (length pts))\t\t (cons 43 weight)\t\t ;;全局宽\t\t '\t\t (70 . 0)\t\t ) ;list\t (mapcar '(lambda (x)\t\t\t(cons 40 weight)\t\t\t;;起点宽\t\t\t(cons 41 weight)\t\t\t;;终点宽\t\t\t(cons 42 0.0)\t\t\t(cons 10 x)\t\t\t)\t\t pts\t\t )\t ) ;append\t ) )(defun entMakePLine (pts layerName) (entmake (append\t (list '(0 . \"LWPOLYLINE\")\t\t '(100 . \"AcDbEntity\")\t\t '(100 . \"AcDbPolyline\")\t\t '(370 . 0)\t\t (cons 8 layerName)\t\t (cons 90 (length pts))\t\t '(70 . 0)\t\t ) ;list\t (mapcar '(lambda (x) (cons 10 x)) pts)\t ) ;append\t ) )(defun EntMakeTextStyle\t (tStyleName tStyleHeight tStyleWeight tFontName tBigFontName) (if (not (tblsearch \"style\" tStyleName)) (entmakeX (list\t'(0 . \"STYLE\")\t'(100 . \"AcDbSymbolTableRecord\")\t'(100 . \"AcDbTextStyleTableRecord\")\t(cons 2 tStyleName)\t'(70 . 0)\t(cons 40 tStyleHeight)\t(cons 41 tStyleWeight)\t(cons 3 tFontName)\t(cons 4 tBigFontName)\t) ) ) )(defun EntMakeLayer (layname color / nlay) (vl-load-com) (or (tblsearch \"layer\" layname) (or (not (setq nlay\t\t (vla-add (vla-get-layers\t\t\t\t (vla-get-activedocument (vlax-get-acad-object))\t\t\t\t )\t\t\t layname\t\t\t )\t\t )\t )\t (vla-put-color nlay color) ;vla-put-返回值为nil\t ;(vla-put-plottable nlay :vlax-false) ;设为不打印层\t ;(vla-put-activelayer\t ; (vla-get-activedocument (vlax-get-acad-object))\t ; nlay\t ;)\t ;;设为当前层\t ) ) );;;功能：字符串按指定分隔符分隔,分隔符可以是字串，用于取文件名，用扩展名作为分隔符;;;(splitX \"C:\\\\Users\\\\....25～K1+013.52；EL.2776.73～EL.2804.74）.dat\" \".dat\");;;返回：(C:\\\\Users\\\\....25～K1+013.52；EL.2776.73～EL.2804.74）)(defun splitX (str delim / LST POS) (while (setq pos (vl-string-search delim str)) (setq lst (append lst (list (substr str 1 pos)))) (setq str (substr str (+ (+ pos (strlen delim)) 1))) ) (if (&gt; (strlen str) 0) (append lst (list str)) lst ) )(defun pt_inorout (regionObj pt / pt_list e1 pt n i j va va_count) (setq\tpt_list\t(mapcar\t'cdr\t\t\t(vl-remove-if\t\t\t '(lambda (x) (/= 10 (car x)))\t\t\t (entget (car regionObj))\t\t\t )\t\t\t)\t) (setq\ti\t 0\tva_count 0\tn\t (length pt_list)\tpt_list\t (append pt_list (list (car pt_list)))\t) (repeat n (setq va (-\t(angle pt (nth i pt_list))\t\t(angle pt (nth (1+ i) pt_list))\t\t)\t ) (cond ((&gt; va pi) (setq va (- va pi)))\t ((&lt; va (* -1 pi)) (setq va (+ va pi)))\t ) (setq va_count (+ va_count va)\t i\t (1+ i)\t ) ) (if (&lt; (abs (- (abs va_count) pi)) 0.000001) 't 'nil ) )(defun date () (setq datetime (rtos (getvar \"cdate\") 2 6)) (car (splitx datetime \".\")) )(defun time () (setq datetime (rtos (getvar \"cdate\") 2 6)) (cadr (splitx datetime \".\")) )(defun C:zzHelp\t () (princ \"\\n-测量工具箱 | Ver:20200817 | 覃东 水电十二局宁海施工局测量队-\" ) (princ \"\\n01 zzFGW：生成方格网坐标数据文件(D:盘)\") (princ \"\\n02 zzArea2Table：输出面积到AutoCAD表格\") (princ \"\\n03 zzArea2File：输出面积到文件\") (princ \"\\n04 zzA：标注面积到区域中心\") (princ \"\\n05 zzQydx：区域地形：删除指定封闭区域外的地形点\") (princ \"\\n06 zzQywdx：区域外地形：删除指定封闭区域内的地形点\" ) (princ \"\\n07 zzBC：横断面高程标尺：绘制横断面图的高程标尺\") (princ \"\\n08 zzExport2Dat：CASS地形图导出无编码数据文件(.dat)\" ) (princ \"\\n09 zzCass2CadPoint：CASS地形图生成CAD点对象用于生成C3D曲面\" ) (princ \"\\n10 zzHelp：查看命令帮助提示信息\") (princ \"\\n(c)QinDong qd.xyz@139.com 2020-08-17 覃东 宁海\") (princ) )(vl-load-com)(princ)(princ \"\\n-测量工具箱 | Ver:20200817 | 覃东 水电十二局宁海施工局测量队-\" )(princ \"\\n01 zzFGW：生成方格网坐标数据文件(D:盘)\")(princ \"\\n05 zzQydx：区域地形：删除指定封闭区域外的地形点\")(princ \"\\n06 zzQywdx：区域外地形：删除指定封闭区域内的地形点\" )(princ \"\\n07 zzBC：横断面高程标尺：绘制横断面图的高程标尺\")(princ \"\\n08 zzExport2Dat：CASS地形图导出无编码数据文件(.dat)\" )(princ \"\\n09 zzCass2CadPoint：CASS地形图生成CAD点对象用于生成C3D曲面\" )(princ \"\\n10 zzHelp：查看命令帮助提示信息\")(princ \"\\n(c)QinDong qd.xyz@139.com 2020-08-17 覃东 宁海\")(princ);;------------------------------------------------------------;;;; End of File ;;;;------------------------------------------------------------;;" }, { "title": "CASS地形图地形点单元转换为AutoCAD实体点对象", "url": "/posts/lisp-program-code-cass-points-to-cad-entity/", "categories": "编程开发, AutoLISP", "tags": "地形图, 测点", "date": "2010-05-10 09:56:10 +0800", "snippet": "本段代码是 AutoCAD工程测量工具集 中的一个功能的源代码，可以单独运行。功能为将CASS地形图地形点的单元对象转换为CAD点实体对象。;;CASS地形图生成CAD点对象用于生成C3D曲面--------------------------------------------------------------------;;;;2019-06-01 (C) QinDong(defun C:zzCass2CadPoint ()\t ;(setq ss (ssget \"X\" '((0 . \"insert\") (8 . \"GCD\")))) (setq ss (ssget \"X\" '((0 . \"insert\") (2 . \"GC*\")))) (setq i 0) (repeat (sslength ss) (setq ssn (ssname ss i)) (setq endata (entget ssn)) (setq blockXYZ (assoc 10 endata)) (print blockXYZ) (entmakeX (list '(0 . \"POINT\") blockXYZ)) (setq i (1+ i)) (entdel ssn) ) )" }, { "title": "绘横断面图标尺AutoLISP程序源代码", "url": "/posts/lisp-program-code-create-bar/", "categories": "编程开发, AutoLISP", "tags": "横断面", "date": "2010-05-10 08:56:10 +0800", "snippet": "本段代码是 AutoCAD工程测量工具集 中的一个功能的源代码，可以单独运行。功能绘横断面图标尺。;;绘横断面高程标尺----------------------------------------------------------------------------------;;(defun c:zzBC (/ i judge varBarPosition varOrigin varBarPosition_tmp varTextHeight\t\tvarBarPositionLevel varLength_tmp varLength varBarStartLevel varBarEndPositionLevel\t\tvarBarEndLevel varBarStartX varBarStartY varBarsCount varStartY\tvarEndX\tvarEndY\t\tvarPts) (setq i 0) (setq judge 0) (grtext -1 \"绘制标尺 覃东\") (princ \"\\n\") (setq varOrigin (getpoint \"请输入一点：\")) (princ \"\\n\") (if (/= varLevel nil) (progn (setq varLevel_tmp varLevel)\t (setq PromptTmp\t\t (strcat \"该点高程\" \"&lt;\" (rtos varLevel 2 3) \"&gt;:\"))\t ) (setq PromptTmp \"该点高程：\") ) ;;(while (&lt;= (setq varLevel (getreal PromptTmp)) 0)) (if (= (setq varLevel (getreal PromptTmp)) nil) (setq varLevel varLevel_tmp) ) (princ \"\\n\") (if (/= varBarPosition_tmp nil) (setq PromptTmp (strcat \"标尺距离\"\t\t\t \"&lt;\"\t\t\t (rtos (car varBarPosition_tmp) 2 3)\t\t\t \",\"\t\t\t (rtos (cadr varBarPosition_tmp) 2 3)\t\t\t \"&gt;:\"\t\t\t )\t ) (setq PromptTmp \"标尺距离：\") ) (princ \"\\n\") (if (= (setq varBarPosition (getpoint PromptTmp)) nil) (setq varBarPosition varBarPosition_tmp) ) (setq varBarPosition_tmp varBarPosition) ;;选择标尺的顶点 (if (/= varLength_tmp nil) (setq PromptTmp (strcat \"标尺长度\"\t\t\t \"&lt;\"\t\t\t (rtos (car varLength_tmp) 2 3)\t\t\t \",\"\t\t\t (rtos (cadr varLength_tmp) 2 3)\t\t\t \"&gt;:\"\t\t\t )\t ) (setq PromptTmp \"标尺长度：\") ) (princ \"\\n\") (if (= (setq varLength (getpoint PromptTmp)) nil) (setq varLength varLength_tmp) ) (setq varLength_tmp varLength) (princ \"\\n\") (if (/= varScale_tmp nil) (setq PromptTmp\t(strcat\t\"比例尺分母\"\t\t\t\"&lt;\"\t\t\t(rtos varScale_tmp 2 3)\t\t\t\"&gt;:\") ) (setq PromptTmp \"比例尺分母：\") ) (if (= (setq varScale (getint PromptTmp)) nil) (setq varScale varScale_tmp) ) (if (and (/= nil varScale)\t (/= nil varScale)\t (/= nil varBarPosition)\t (/= nil varLength)\t (/= nil varOrigin)\t ) ;;if main (progn ;;progn main ;;当确定标尺长度时若点在下方进行改正 (if (&lt;= (cadr varLength) (cadr varBarPosition))\t(setq varLength\t (list (car varLength)\t\t (+\t(cadr varBarPosition)\t\t\t(abs (- (cadr varLength) (cadr varBarPosition)))\t\t\t)\t\t )\t )\t) (setq varScale_tmp varScale) (setq varScale (/ varScale 100)) ;;比例下每cm长度 (setq varTextHeight (* (/ varScale 10.0) 1.5)) ;;文字高度及宽度为1.5mm (EntMakeTextStyle\t\"LevelBar\" varTextHeight 1 \"simhei.ttf\"\t\"\") (EntMakeLayer \"2-断面-标尺\" 1) ;;确定标尺起点高程 (setq varBarPositionLevel\t (+\t(- (cadr varBarPosition) (cadr varOrigin))\t\tvarLevel\t\t)\t ) (setq varBarStartLevel (fix (+ varBarPositionLevel 0.5))) ;;四舍五入求标尺起点整高程 ;;确定标尺终点高程 (setq varBarEndPositionLevel\t (+\t(- (cadr varLength) (cadr varOrigin))\t\tvarLevel\t\t)\t ) (setq varBarEndLevel (fix (+ varBarEndPositionLevel 0.5))) ;;四舍五入求标尺起点整高程 ;;确定标尺起点坐标 (setq varBarStartX (car varBarPosition)) (setq varBarStartY\t (+\t(cadr varBarPosition)\t\t(- varBarStartLevel varBarPositionLevel)\t\t)\t ) (setq varBarsCount\t (+\t(atoi\t\t (rtos\t\t (/ (- varBarEndLevel varBarStartLevel) varScale)\t\t 2\t\t 0\t\t )\t\t )\t\t1\t\t)\t ) (setq varBarsCount (* (fix (+ (/ varBarsCount 2) 0.5)) 2)) (while (/= varBarsCount 0)\t(setq varStartY (+ varBarStartY (* i varScale)))\t(setq varEndX (- varBarStartX (* (/ varScale 10.0) 1.5)))\t(setq varEndY (+ varBarStartY (* (+ i 1) varScale)))\t(setq Fp (list varBarStartX varStartY))\t(setq Ep (list varEndX varEndY))\t(setq Lfp (list varBarStartX varStartY))\t(setq Lep\t (list (+ varBarStartX (/ varScale 10.0)) varStartY))\t(setq\t Txtp\t (list (+ varBarStartX (* (/ varScale 10.0) 2.0)) varEndY)\t )\t(setq Hi (+ varBarStartLevel (* varScale i)))\t(setq\t Loe (list (+ (/ varScale 10.0) varBarStartX)\t\t varBarStartY)\t )\t(if (= judge 0)\t (progn\t (setq SolidBarFp\t\t (list (/ (+ (car Fp) (car Ep)) 2) (cadr Fp))\t\t )\t ;;实心标尺起点\t (setq SolidBarEp\t\t (list (/ (+ (car Fp) (car Ep)) 2) (cadr Ep))\t\t )\t ;;实心标尺终点\t (entMakePLineThick\t (list SolidBarFp SolidBarEp)\t varTextHeight\t \"2-断面-标尺\"\t )\t (EntMakeLine\t (car lfp)\t (cadr Lfp)\t (car Lep)\t (cadr Lep)\t \"2-断面-标尺\"\t )\t (EntMakeText\t (+ varBarStartX (* (/ varScale 10.0) 1.1))\t varStartY\t (itoa Hi)\t varTextHeight\t \"LevelBar\"\t \"2-断面-标尺\"\t )\t (setq judge 1)\t )\t (progn\t (setq varPts nil)\t (setq varPts\t\t (cons (list varBarStartX varStartY) varPts))\t (setq\t varPts (cons (list varBarStartX varEndY) varPts))\t (setq varPts (cons (list varEndX varEndY) varPts))\t (setq varPts (cons (list varEndX varStartY) varPts))\t (entMakePLine varPts \"2-断面-标尺\")\t (setq judge 0)\t )\t )\t(setq i (+ i 1))\t(setq varBarsCount (- varBarsCount 1))\t) (if (= judge 0)\t(progn\t (setq Lfp (list varBarStartX varEndY))\t (setq\tLep\t\t (list (+ varBarStartX (/ varScale 10.0)) varEndY))\t (setq Hi (+ varBarStartLevel (* varScale i)))\t (EntMakeLine\t (car lfp)\t (cadr Lfp)\t (car Lep)\t (cadr Lep)\t \"2-断面-标尺\"\t )\t (EntMakeText\t (+ varBarStartX (* (/ varScale 10.0) 1.1))\t varEndY\t (itoa Hi)\t varTextHeight\t \"LevelBar\"\t \"2-断面-标尺\"\t )\t )\t) (princ\t\"\\n(C)水电十二局宁海施工局测量队 覃东 qd.xyz@139.com\"\t) (vl-cmdf \"regen\") (princ) ) ;;end progn main (progn (princ\t\"\\n输入错误！请按提示输入！ (C)水电十二局宁海施工局测量队 覃东 qd.xyz@139.com\"\t) (princ) ) ) ;;end if main );;绘横断面高程标尺----------------------------------------------------------------------------------;;" }, { "title": "删除封闭区域内地形点AutoLISP程序源代码", "url": "/posts/lisp-program-code-del-inner-points/", "categories": "编程开发, AutoLISP", "tags": "地形图, 测点", "date": "2010-05-08 13:57:10 +0800", "snippet": "本段代码是 AutoCAD工程测量工具集 中的一个功能的源代码，可以单独运行。功能为将一封闭区域内的地形点全部删除。;;区域外地形点生成文件，删除区域内地形点------------------------------------------------------------;;(defun C:zzQywdx\t\t (/ ptName ptSign ptE ptN ptH ptCount filename1 filename2) (princ \"功能：删除指定区域内的点，取区域外的地形点。(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\" ) (setq\tfilename1\t (getfiled \"提示字符串\"\t\t \"D:\\\\\"\t\t \"dat\"\t\t 2\t\t )\t) (if filename1 (progn (setq\tfilename2 (strcat (car (splitx filename1 \".dat\"))\t\t\t \"-区域外提取-\"\t\t\t (date)\t\t\t \"-\"\t\t\t (time)\t\t\t \".dat\"\t\t\t )\t) (setq regionObj (entsel)) (setq f1 (open filename1 \"r\")) (if (and f1 regionObj)\t(progn\t (setq f2 (open filename2 \"w\"))\t (setq rIndex 0)\t (setq ptCount 0)\t (while (setq lineStr (read-line f1))\t (setq lineStrs (splitX lineStr \",\"))\t (setq ptName (cons (nth 0 lineStrs) ptName))\t ;;将点编号或点名生成表\t (setq ptE (cons (nth 2 lineStrs) ptE))\t ;;将E生成表\t (setq ptN (cons (nth 3 lineStrs) ptN))\t ;;将N生成表\t (setq ptH (cons (nth 4 lineStrs) ptH))\t ;;将H生成表\t (setq ptSign (cons (itoa rIndex) ptSign))\t ;;生成记号表\t (setq rIndex (+ rIndex 1))\t )\t (setq ptName (reverse ptName))\t ;;反序\t (setq ptSign (reverse ptSign))\t ;;反序\t (setq ptE (reverse ptE))\t ;;反序\t (setq ptN (reverse ptN))\t ;;反序\t (setq ptH (reverse ptH))\t ;;反序\t (close f1)\t ;;表处理\t (setq rIndex 0)\t (while (setq tmpPtname (nth rIndex ptName))\t (setq tmpE (nth rIndex ptE))\t (setq tmpN (nth rIndex ptN))\t (setq tmpH (nth rIndex ptH))\t (setq tmpSign (nth rIndex ptSign))\t (if\t (not (pt_inorout\t\t regionObj\t\t (list (atof tmpE) (atof tmpN)))\t\t )\t (progn\t\t (write-line\t\t (strcat tmpPtname \",,\" tmpE \",\" tmpN \",\" tmpH)\t\t f2\t\t )\t\t (setq ptCount (+ 1 ptCount))\t\t )\t )\t (setq rIndex (+ rIndex 1))\t )\t ;;表处理\t (princ\t (strcat\t \"共提取\"\t (itoa ptCount)\t \"个点。(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\"\t )\t )\t ;;(princ \"\\n\")\t (close f2)\t )\t;;End progn\t(princ\t \"用户取消操作！(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\"\t )\t) ;;end if ) ;; end progn1 (princ \"用户取消操作！(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\" ) ) ;;end if1 (princ) );;区域外地形点生成文件，删除区域内地形点------------------------------------------------------------;;" }, { "title": "删除封闭区域以外地形点AutoLISP程序源代码", "url": "/posts/lisp-program-code-del-outer-points/", "categories": "编程开发, AutoLISP", "tags": "地形图, 测点", "date": "2010-05-08 13:56:10 +0800", "snippet": "本段代码是 AutoCAD工程测量工具集 中的一个功能的源代码，可以单独运行。功能为将一封闭区域以外的地形点全部删除。;;提取指定区域内的点，删除区域外地形点------------------------------------------------------------;;(defun C:zzQydx\t\t (/ ptName ptSign ptE ptN ptH ptCount filename1 filename2) (princ \"功能：删除指定区域外的点。(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\" ) (setq\tfilename1\t (getfiled \"提示字符串\"\t\t \"D:\\\\\"\t\t \"dat\"\t\t 2\t\t )\t) (if filename1 (progn (setq\tfilename2 (strcat (car (splitx filename1 \".dat\"))\t\t\t \"-区域提取-\"\t\t\t (date)\t\t\t \"-\"\t\t\t (time)\t\t\t \".dat\"\t\t\t )\t) (setq regionObj (entsel)) (setq f1 (open filename1 \"r\")) (if (and f1 regionObj)\t(progn\t (setq f2 (open filename2 \"w\"))\t (setq rIndex 0)\t (setq ptCount 0)\t (while (setq lineStr (read-line f1))\t (setq lineStrs (splitX lineStr \",\"))\t (setq ptName (cons (nth 0 lineStrs) ptName))\t ;;将点编号或点名生成表\t (setq ptE (cons (nth 2 lineStrs) ptE))\t ;;将E生成表\t (setq ptN (cons (nth 3 lineStrs) ptN))\t ;;将N生成表\t (setq ptH (cons (nth 4 lineStrs) ptH))\t ;;将H生成表\t (setq ptSign (cons (itoa rIndex) ptSign))\t ;;生成记号表\t (setq rIndex (+ rIndex 1))\t )\t (setq ptName (reverse ptName))\t ;;反序\t (setq ptSign (reverse ptSign))\t ;;反序\t (setq ptE (reverse ptE))\t ;;反序\t (setq ptN (reverse ptN))\t ;;反序\t (setq ptH (reverse ptH))\t ;;反序\t (close f1)\t ;;表处理\t (setq rIndex 0)\t (while (setq tmpPtname (nth rIndex ptName))\t (setq tmpE (nth rIndex ptE))\t (setq tmpN (nth rIndex ptN))\t (setq tmpH (nth rIndex ptH))\t (setq tmpSign (nth rIndex ptSign))\t (if\t(pt_inorout\t\t regionObj\t\t (list (atof tmpE) (atof tmpN)))\t (progn\t\t(write-line\t\t (strcat tmpPtname \",,\" tmpE \",\" tmpN \",\" tmpH)\t\t f2\t\t )\t\t(setq ptCount (+ 1 ptCount))\t\t)\t )\t (setq rIndex (+ rIndex 1))\t )\t ;;表处理\t (princ\t (strcat\t \"共提取\"\t (itoa ptCount)\t \"个点。(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\"\t )\t )\t ;;(princ \"\\n\")\t (close f2)\t )\t;;End progn\t(princ\t \"用户取消操作！(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\"\t )\t) ;;end if ) ;; end progn1 (princ \"用户取消操作！(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\" ) ) ;;end if1 (princ) );;提取指定区域内的点，删除区域外地形点------------------------------------------------------------;;" }, { "title": "横断面区域面积标注AutoLISP程序", "url": "/posts/lisp-program-code-section-area-label/", "categories": "编程开发, AutoLISP", "tags": "横断面, 面积, 标注", "date": "2010-05-07 13:49:10 +0800", "snippet": "本段代码是 AutoCAD工程测量工具集 中的一个功能的源代码，可以单独运行。代码中各命令功能如下： zzA与zzArea：标注面积到区域中心 zzArea2Table：输出面积到AutoCAD表格 zzArea2File：输出面积到文件;;------------------------------------------------------------;;;; Author: Qin Dong, Copyright 2020 ;;;;------------------------------------------------------------;;;; Version 2.01 - 2020-08-17 宁海 ;;;;------------------------------------------------------------;;(defun c:zzArea nil (AreaLabel 3))(defun c:zzA nil (AreaLabel 3));; Areas to Text(defun c:zzArea2Table nil (AreaLabel 1));; Areas to Table(defun c:zzArea2File nil (AreaLabel 2));; Areas to File;;------------------------------------------------------------;;(defun AreaLabel (flag\t/ *error* _startundo _endundo _centroid\t_text _open _select _getobjectid\t\t _isannotative acdoc acspc ap\tar as cf cm el fd fl fo\tn of om\tp1 pf pt sf st t1 t2\t\t tb th ts tx ucsxang ucszdir) ;;------------------------------------------------------------;; ;; Adjustments ;; ;;------------------------------------------------------------;; (setq\th1 \"断 面 面 积 统 计 表\"\t;; Heading\tt1 \"序号\"\t;; Number Title\tt2 \"面积\"\t;; Area Title\tpf \"\"\t;; Number Prefix (optional, \"\" if none)\tsf \"\"\t;; Number Suffix (optional, \"\" if none)\tap \"\"\t;; Area Prefix (optional, \"\" if none)\tas \"\"\t;; Area Suffix (optional, \"\" if none)\tcf 1.0\t;; Area Conversion Factor (e.g. 1e-6 = mm2-&gt;m2)\tfd t\t;; Use fields to link numbers/objects to table (t=yes, nil=no)\tfo \"%lu6%qf1\"\t ;; Area field formatting\t) (if (= nil areaName) (setq areaName \"\") ) ;;------------------------------------------------------------;; (defun *error* (msg) (if\tcm (setvar 'CMDECHO cm) ) (if\tel (progn (entdel el) (setq el nil)) ) (if\tacdoc (_EndUndo acdoc) ) (if\t(and of (eq 'FILE (type of))) (close of) ) (if\t(and Shell (not (vlax-object-released-p Shell))) (vlax-release-object Shell) ) (if\t(null (wcmatch (strcase msg) \"*BREAK,*CANCEL*,*EXIT*\")) (princ (strcat \"\\n--&gt; Error: \" msg)) ) (princ) ) ;;------------------------------------------------------------;; (defun _StartUndo (doc) (_EndUndo doc) (vla-StartUndoMark doc) ) ;;------------------------------------------------------------;; (defun _EndUndo (doc) (if\t(= 8 (logand 8 (getvar 'UNDOCTL))) (vla-EndUndoMark doc) ) ) ;;------------------------------------------------------------;; (defun _centroid (space objs / reg cen) (setq reg (car (vlax-invoke space 'addregion objs))\t cen (vlax-get reg 'centroid)\t ) (vla-delete reg) (trans cen 1 0) ) ;;------------------------------------------------------------;; (defun _text\t(space point string height rotation / text) (setq text (vla-addtext space string (vlax-3D-point point) height)) (vla-put-alignment text acalignmentmiddlecenter) (vla-put-textalignmentpoint text (vlax-3D-point point)) (vla-put-rotation text rotation) text ) ;;------------------------------------------------------------;; (defun _Open\t(target / Shell result) (if\t(setq Shell (vla-getInterfaceObject\t\t (vlax-get-acad-object)\t\t \"Shell.Application\"\t\t )\t ) (progn\t(setq result\t (and\t\t (or (eq 'INT (type target))\t\t (setq target (findfile target)))\t\t (not\t\t (vl-catch-all-error-p\t\t (vl-catch-all-apply\t\t 'vlax-invoke\t\t (list Shell 'Open target)\t\t )\t\t )\t\t )\t\t )\t )\t(vlax-release-object Shell)\t) ) result ) ;;------------------------------------------------------------;; (defun _Select (msg pred func init / e) (setq pred (eval pred)) (while (progn (setvar 'ERRNO 0)\t (apply 'initget init)\t (setq e (func msg))\t (cond\t ((= 7 (getvar 'ERRNO))\t\t(princ \"\\nMissed, try again.\")\t\t)\t ((eq 'STR (type e))\t\tnil\t\t)\t ((vl-consp e)\t\t(if (and pred (not (pred (setq e (car e)))))\t\t (princ \"\\nInvalid Object Selected.\")\t\t )\t\t)\t )\t ) ) e ) ;;------------------------------------------------------------;; (defun _GetObjectID (doc obj) (if\t(vl-string-search \"64\" (getenv \"PROCESSOR_ARCHITECTURE\")) (vlax-invoke-method\t(vla-get-Utility doc)\t'GetObjectIdString\tobj\t:vlax-false\t) (itoa (vla-get-Objectid obj)) ) ) ;;------------------------------------------------------------;; (defun _isAnnotative\t(style / object annotx) (and (setq object (tblobjname \"STYLE\" style)) (setq\tannotx\t (cadr (assoc -3 (entget object '(\"AcadAnnotative\"))))\t) (= 1 (cdr (assoc 1070 (reverse annotx)))) ) ) ;;------------------------------------------------------------;; (setq\tacdoc\t(vla-get-activedocument (vlax-get-acad-object))\tacspc\t(vlax-get-property\t\t acdoc\t\t (if (= 1 (getvar 'CVPORT))\t\t 'Paperspace\t\t 'Modelspace\t\t )\t\t )\tucszdir\t(trans '(0. 0. 1.) 1 0 t)\tucsxang\t(angle '(0. 0. 0.) (trans (getvar 'UCSXDIR) 0 ucszdir))\t) (_StartUndo acdoc) (setq cm (getvar 'CMDECHO)) (setvar 'CMDECHO 0) (setq\tom (eq \"1\"\t (cond ((getenv \"LMAC_AreaLabel\"))\t\t ((setenv \"LMAC_AreaLabel\" \"0\"))\t\t )\t )\t) (setq\tts\t (/ (getvar 'TEXTSIZE)\t (if\t(_isAnnotative (getvar 'TEXTSTYLE))\t (cond ((getvar 'CANNOSCALEVALUE))\t\t (1.0)\t\t )\t 1.0\t )\t )\t) (cond ((not (vlax-method-applicable-p acspc 'addtable)) (princ \"\\n--&gt; Table Objects not Available in this Version.\") ) ((=\t4\t(logand\t4\t\t(cdr (assoc 70 (tblsearch \"LAYER\" (getvar 'CLAYER))))\t\t)\t) (princ \"\\n--&gt; Current Layer Locked.\") ) ((not (setq *al:num\t (cond\t\t((= flag 3) 1)\t\t(\t\t (getint\t\t (strcat \"\\n面积序号起始值 &lt;\"\t\t\t (itoa (setq *al:num (1+ (cond (*al:num)\t\t\t\t\t\t\t (0)\t\t\t\t\t\t\t )\t\t\t\t\t\t )\t\t\t\t )\t\t\t\t )\t\t\t \"&gt;: \"\t\t\t )\t\t )\t\t )\t\t(*al:num)\t\t)\t ) ) ) ((= flag 1) (setq th\t (* 2.\t (if\t\t (zerop\t\t (setq th\t\t\t (vla-gettextheight\t\t\t (setq st\t\t\t\t (vla-item\t\t\t\t (vla-item\t\t\t\t (vla-get-dictionaries acdoc)\t\t\t\t \"ACAD_TABLESTYLE\"\t\t\t\t )\t\t\t\t (getvar 'CTABLESTYLE)\t\t\t\t )\t\t\t\t )\t\t\t acdatarow\t\t\t )\t\t\t )\t\t )\t\t ts\t\t (/ th\t\t (if (_isAnnotative (vla-gettextstyle st acdatarow))\t\t (cond ((getvar 'CANNOSCALEVALUE))\t\t\t (1.0)\t\t\t )\t\t 1.0\t\t )\t\t )\t\t )\t )\t ) (if (cond\t (\t (progn (initget \"Add\")\t\t (vl-consp (setq pt\t\t\t\t (getpoint \"\\n输入放置面积表的位置 &lt;选择现有面积表&gt;: \"\t\t\t\t\t )\t\t\t\t )\t\t\t )\t\t )\t (setq\ttb\t\t (vla-addtable\t\t acspc\t\t (vlax-3D-point (trans pt 1 0))\t\t 2\t\t 2\t\t th\t\t (* 1.5 th (max (strlen t1) (strlen t2)))\t ;表格宽度在这设置\t\t )\t\t)\t (vla-put-direction tb (vlax-3D-point (getvar 'UCSXDIR)))\t (vla-settext tb 0 0 h1)\t (vla-settext tb 1 0 t1)\t (vla-settext tb 1 1 t2)\t (while\t (progn\t (if om\t\t(setq p1\t\t (_Select\t\t\t (strcat \"\\n选择下一个对象[拾点]&lt;退出&gt;: \")\t\t\t '(lambda (x)\t\t\t (and\t\t\t (vlax-property-available-p\t\t\t\t(vlax-ename-&gt;vla-object x)\t\t\t\t'area\t\t\t\t)\t\t\t (not (eq \"HATCH\"\t\t\t\t (cdr (assoc 0 (entget x)))))\t\t\t (or (eq \"REGION\"\t\t\t\t (cdr (assoc 0 (entget x))))\t\t\t\t (vlax-curve-isclosed x)\t\t\t\t )\t\t\t )\t\t\t )\t\t\t entsel\t\t\t '(\"Pick\")\t\t\t )\t\t )\t\t(progn\t\t (initget \"Object\")\t\t (setq p1 (getpoint \"\\n选择区域[对象]&lt;退出&gt;: \"))\t\t )\t\t)\t (cond\t\t((null p1)\t\t (vla-delete tb)\t\t )\t\t((eq \"Pick\" p1)\t\t (setq om nil)\t\t t\t\t )\t\t((eq \"Object\" p1)\t\t (setq om t)\t\t )\t\t((eq 'ENAME (type p1))\t\t (setq tx\t\t\t(cons\t\t\t (_text\t\t\t acspc\t\t\t (_centroid\t\t\t acspc\t\t\t (list\t\t\t\t(setq p1 (vlax-ename-&gt;vla-object p1)))\t\t\t )\t\t\t (strcat pf (itoa *al:num) sf)\t\t\t ts\t\t\t ucsxang\t\t\t )\t\t\t tx\t\t\t )\t\t )\t\t (vla-insertrows tb (setq n 2) th 1)\t\t (vla-settext\t\t tb\t\t n\t\t 1\t\t (if fd\t\t (strcat \"%&lt;\\\\AcObjProp Object(%&lt;\\\\_ObjId \"\t\t\t (_GetObjectID acdoc p1)\t\t\t \"&gt;%).Area \\\\f \\\"\"\t\t\t fo\t\t\t \"\\\"&gt;%\"\t\t\t )\t\t (strcat ap\t\t\t (rtos (* cf (vla-get-area p1)) 2 2)\t\t\t as)\t\t )\t\t )\t\t (vla-settext\t\t tb\t\t n\t\t 0\t\t (if fd\t\t (strcat \"%&lt;\\\\AcObjProp Object(%&lt;\\\\_ObjId \"\t\t\t (_GetObjectID acdoc (car tx))\t\t\t \"&gt;%).TextString&gt;%\"\t\t\t )\t\t (strcat pf (itoa *al:num) sf)\t\t )\t\t )\t\t nil\t\t )\t\t((vl-consp p1)\t\t (setq el (entlast))\t\t (vl-cmdf \"_.-boundary\"\t\"_A\" \"_I\" \"_N\" \"\" \"_O\" \"_P\" \"\" \"_non\" p1 \"\")\t\t (if (not (equal el (setq el (entlast))))\t\t (progn\t\t (setq tx\t\t\t (cons\t\t\t (_text\t\t\t\tacspc\t\t\t\t(_centroid\t\t\t\t acspc\t\t\t\t (list (vlax-ename-&gt;vla-object el))\t\t\t\t )\t\t\t\t(strcat pf (itoa *al:num) sf)\t\t\t\tts\t\t\t\tucsxang\t\t\t\t)\t\t\t tx\t\t\t )\t\t\t )\t\t (vla-insertrows tb (setq n 2) th 1)\t\t (vla-settext\t\t tb\t\t n\t\t 1\t\t (strcat\t\t\t ap\t\t\t (rtos (* cf (vlax-curve-getarea el))\t\t\t 2\t\t\t 2)\t\t\t as\t\t\t )\t\t )\t\t (vla-settext\t\t tb\t\t n\t\t 0\t\t (if fd\t\t\t (strcat\t\t\t \"%&lt;\\\\AcObjProp Object(%&lt;\\\\_ObjId \"\t\t\t (_GetObjectID acdoc (car tx))\t\t\t \"&gt;%).TextString&gt;%\"\t\t\t )\t\t\t (strcat pf (itoa *al:num) sf)\t\t\t )\t\t )\t\t (redraw el 3)\t\t nil\t\t )\t\t (vla-delete tb)\t\t )\t\t )\t\t)\t )\t )\t (not (vlax-erased-p tb))\t )\t (\t (and\t (setq tb\t\t (_Select\t\t \"\\n选择现有表加入: \"\t\t '(lambda (x)\t\t\t(eq \"ACAD_TABLE\" (cdr (assoc 0 (entget x))))\t\t\t)\t\t entsel\t\t nil\t\t )\t\t )\t (&lt; 1\t (vla-get-columns\t\t (setq tb (vlax-ename-&gt;vla-object tb)))\t )\t )\t (setq\tn\t(1- (vla-get-rows tb))\t\t*al:num\t(1- *al:num)\t\t)\t )\t )\t(progn\t (while\t (if\tom\t (setq p1\t\t (_Select\t\t (strcat \"\\nSelect Object [\"\t\t\t (if tx\t\t\t\t \"Undo/\"\t\t\t\t \"\"\t\t\t\t )\t\t\t \"Pick] &lt;Exit&gt;: \"\t\t\t )\t\t '(lambda\t(x)\t\t\t (and\t\t\t (vlax-property-available-p\t\t\t (vlax-ename-&gt;vla-object x)\t\t\t 'area\t\t\t )\t\t\t (not\t\t\t (eq \"HATCH\" (cdr (assoc 0 (entget x)))))\t\t\t (or\t(eq \"REGION\"\t\t\t\t (cdr (assoc 0 (entget x))))\t\t\t\t(vlax-curve-isclosed x)\t\t\t\t)\t\t\t )\t\t\t )\t\t entsel\t\t (list (if tx\t\t\t \"Undo Pick\"\t\t\t \"Pick\"\t\t\t )\t\t\t )\t\t )\t\t )\t (progn (initget (if tx\t\t\t\t\"Undo Object\"\t\t\t\t\"Object\"\t\t\t\t)\t\t\t )\t\t (setq p1 (getpoint\t(strcat\t\"\\n选择区域[\"\t\t\t\t\t\t(if tx\t\t\t\t\t\t \"Undo/\"\t\t\t\t\t\t \"\"\t\t\t\t\t\t )\t\t\t\t\t\t\"Object] &lt;Exit&gt;: \"\t\t\t\t\t\t)\t\t\t\t\t)\t\t\t )\t\t )\t )\t (cond\t ((and tx (eq \"Undo\" p1))\t\t(if el\t\t (progn (entdel el) (setq el nil))\t\t )\t\t(vla-deleterows tb n 1)\t\t(vla-delete (car tx))\t\t(setq n\t (1- n)\t\t tx (cdr tx)\t\t *al:num (1- *al:num)\t\t )\t\t)\t ((eq \"Undo\" p1)\t\t(princ \"\\n--&gt; 啥也没干.\")\t\t)\t ((eq \"Object\" p1)\t\t(if el\t\t (progn (entdel el) (setq el nil))\t\t )\t\t(setq om t)\t\t)\t ((eq \"Pick\" p1)\t\t(setq om nil)\t\t)\t ((and om (eq 'ENAME (type p1)))\t\t(setq tx\t\t (cons\t\t\t (_text\t\t\t acspc\t\t\t (_centroid\t\t\t acspc\t\t\t (list (setq p1 (vlax-ename-&gt;vla-object p1)))\t\t\t )\t\t\t (strcat pf\t\t\t\t (itoa (setq *al:num (1+ *al:num)))\t\t\t\t sf)\t\t\t ts\t\t\t ucsxang\t\t\t )\t\t\t tx\t\t\t )\t\t )\t\t(vla-insertrows tb (setq n (1+ n)) th 1)\t\t(vla-settext\t\t tb\t\t n\t\t 1\t\t (if fd\t\t (strcat \"%&lt;\\\\AcObjProp Object(%&lt;\\\\_ObjId \"\t\t\t (_GetObjectID acdoc p1)\t\t\t \"&gt;%).Area \\\\f \\\"\"\t\t\t fo\t\t\t \"\\\"&gt;%\"\t\t\t )\t\t (strcat ap\t\t\t (rtos (* cf (vla-get-area p1)) 2 2)\t\t\t as)\t\t )\t\t )\t\t(vla-settext\t\t tb\t\t n\t\t 0\t\t (if fd\t\t (strcat \"%&lt;\\\\AcObjProp Object(%&lt;\\\\_ObjId \"\t\t\t (_GetObjectID acdoc (car tx))\t\t\t \"&gt;%).TextString&gt;%\"\t\t\t )\t\t (strcat pf (itoa *al:num) sf)\t\t )\t\t )\t\t)\t ((vl-consp p1)\t\t(if el\t\t (progn (entdel el) (setq el nil))\t\t )\t\t(setq el (entlast))\t\t(vl-cmdf \"_.-boundary\" \"_A\" \"_I\" \"_N\" \"\" \"_O\" \"_P\" \"\" \"_non\" p1\t\"\")\t\t(if (not (equal el (setq el (entlast))))\t\t (progn\t\t (setq tx\t\t\t (cons\t\t\t (_text\t\t\t acspc\t\t\t (_centroid\t\t\t\t acspc\t\t\t\t (list (vlax-ename-&gt;vla-object el))\t\t\t\t )\t\t\t (strcat\t\t\t\t pf\t\t\t\t (itoa (setq *al:num (1+ *al:num)))\t\t\t\t sf)\t\t\t ts\t\t\t ucsxang\t\t\t )\t\t\t tx\t\t\t )\t\t\t )\t\t (vla-insertrows tb (setq n (1+ n)) th 1)\t\t (vla-settext\t\t tb\t\t n\t\t 1\t\t (strcat\t\t\tap\t\t\t(rtos (* cf (vlax-curve-getarea el)) 2 2)\t\t\tas\t\t\t)\t\t )\t\t (vla-settext\t\t tb\t\t n\t\t 0\t\t (if fd\t\t\t(strcat\t\"%&lt;\\\\AcObjProp Object(%&lt;\\\\_ObjId \"\t\t\t\t(_GetObjectID acdoc (car tx))\t\t\t\t\"&gt;%).TextString&gt;%\"\t\t\t\t)\t\t\t(strcat pf (itoa *al:num) sf)\t\t\t)\t\t )\t\t (redraw el 3)\t\t )\t\t (princ \"\\n--&gt; Error Retrieving Area.\")\t\t )\t\t)\t )\t )\t (if el\t (progn (entdel el) (setq el nil))\t )\t )\t) ) ((= flag 2) (and (setq fl\t(getfiled \"创建面积统计文件\"\t\t\t (cond\t(*file*)\t\t\t\t(\"\")\t\t\t\t)\t\t\t \"txt;csv;xls\"\t\t\t 1\t\t\t )\t ) (setq of (open fl \"w\")) ) (setq *file* (vl-filename-directory fl)\t de\t (cdr\t\t (assoc (strcase (vl-filename-extension fl) t)\t\t\t '((\".txt\" . \"\\t\") (\".csv\" . \",\") (\".xls\" . \"\\t\"))\t\t\t )\t\t )\t *al:num (1- *al:num)\t ) (write-line h1 of) (write-line (strcat t1 de t2) of) (while (if om\t (setq p1\t\t(_Select\t\t (strcat \"\\n选择对象[拾取]&lt;退出&gt;: \")\t\t '(lambda (x)\t\t (and\t\t (vlax-property-available-p\t\t\t (vlax-ename-&gt;vla-object x)\t\t\t 'area\t\t\t )\t\t (not (eq \"HATCH\" (cdr (assoc 0 (entget x)))))\t\t (or (eq \"REGION\" (cdr (assoc 0 (entget x))))\t\t\t (vlax-curve-isclosed x)\t\t\t )\t\t )\t\t )\t\t entsel\t\t '(\"Pick\")\t\t )\t )\t (progn\t (initget \"Object\")\t (setq p1 (getpoint (strcat \"\\n选择区域[对象]&lt;退出&gt;: \")))\t )\t )\t(cond\t ((eq \"Object\" p1)\t (if el\t (progn (entdel el) (setq el nil))\t )\t (setq om t)\t )\t ((eq \"Pick\" p1)\t (setq om nil)\t )\t ((eq 'ENAME (type p1))\t (_text\t acspc\t (_centroid\tacspc\t\t\t(list (setq p1 (vlax-ename-&gt;vla-object p1)))\t\t\t)\t (strcat pf (itoa (setq *al:num (1+ *al:num))) sf)\t ts\t ucsxang\t )\t (write-line\t (strcat pf\t\t (itoa *al:num)\t\t sf\t\t de\t\t ap\t\t (rtos (* cf (vla-get-area p1)) 2)\t\t as\t\t )\t of\t )\t )\t ((vl-consp p1)\t (if el\t (progn (entdel el) (setq el nil))\t )\t (setq el (entlast))\t (vl-cmdf \"_.-boundary\" \"_A\" \"_I\" \"_N\" \"\" \"_O\" \"_P\" \"\" \"_non\"\tp1 \"\")\t (if (not (equal el (setq el (entlast))))\t (progn\t (_text\t\t acspc\t\t (_centroid acspc\t\t\t (list (vlax-ename-&gt;vla-object el)))\t\t (strcat pf (itoa (setq *al:num (1+ *al:num))) sf)\t\t ts\t\t ucsxang\t\t )\t (write-line\t\t (strcat pf\t\t\t (itoa *al:num)\t\t\t sf\t\t\t de\t\t\t ap\t\t\t (rtos (* cf (vlax-curve-getarea el)) 2 2)\t\t\t as\t\t\t )\t\t of\t\t )\t (redraw el 3)\t )\t (princ \"\\n--&gt; Error Retrieving Area.\")\t )\t )\t )\t) (if el (progn (entdel el) (setq el nil)) ) (setq of (close of)) (_Open (findfile fl)) ) ((= flag 3)\t ;为面积指定编号或名称，以便与方量表对应\t ;(setq areaName\t ; (cond\t ;\t(\t ;\t (getstring (strcat \"\\n面积编号 &lt;\\042\" areaName \"\\042&gt;: \" ) )\t ;\t)\t ; \t (areaName)\t ; )\t ; ) (princ \"功能：标注封闭区域的面积。(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\" ) (if (= areaName \"zz\") (setq areaName \"\") ) (setq areaName_old areaName) (setq areaName\t (getstring (strcat \"\\n面积编号 &lt;\\042\" areaName \"\\042&gt;: \")\t\t )\t ) (if (= areaName \"\") (setq areaName areaName_old) ) (while (if om\t (setq p1\t\t(_Select\t\t (strcat \"\\n选择对象[拾取]&lt;退出&gt;: \")\t\t '(lambda (x)\t\t (and\t\t (vlax-property-available-p\t\t\t (vlax-ename-&gt;vla-object x)\t\t\t 'area\t\t\t )\t\t (not (eq \"HATCH\" (cdr (assoc 0 (entget x)))))\t\t (or (eq \"REGION\" (cdr (assoc 0 (entget x))))\t\t\t (vlax-curve-isclosed x)\t\t\t )\t\t )\t\t )\t\t entsel\t\t '(\"Pick\")\t\t )\t )\t (progn\t (initget \"Object\")\t (setq p1 (getpoint (strcat \"\\n选择区域&lt;退出&gt;: \")))\t )\t )\t(cond\t ((eq \"Object\" p1)\t (if el\t (progn (entdel el) (setq el nil))\t )\t (setq om t)\t )\t ((eq \"Pick\" p1)\t (setq om nil)\t )\t ((eq 'ENAME (type p1))\t (_text\t acspc\t (_centroid\tacspc\t\t\t(list (setq p1 (vlax-ename-&gt;vla-object p1)))\t\t\t)\t (strcat pf (rtos (* cf (vla-get-area p1)) 2) sf)\t ts\t ucsxang\t )\t )\t ((vl-consp p1)\t (setq el (entlast))\t (vl-cmdf \"_.-boundary\" \"_A\" \"_I\" \"_N\" \"\" \"_O\" \"_P\" \"\" \"_non\"\tp1 \"\")\t (if (not (equal el (setq el (entlast))))\t (progn\t (_text\t\t acspc\t\t (_centroid acspc\t\t\t (list (vlax-ename-&gt;vla-object el)))\t\t (strcat\t\t (if (and (/= areaName \"zz\") (/= areaName \"\"))\t\t (strcat areaName \":\")\t\t (strcat \"\" \"\")\t\t )\t\t (rtos (* cf (vlax-curve-getarea el)) 2 2)\t\t sf\t\t )\t\t ts\t\t ucsxang\t\t )\t (redraw el 1)\t )\t (princ \"\\n--&gt; Error Retrieving Area.\")\t )\t )\t )\t) ) ) (setenv \"LMAC_AreaLabel\"\t (if om\t \"1\"\t \"0\"\t )\t ) (setvar 'CMDECHO cm) (_EndUndo acdoc) (princ) )" }, { "title": "绘坐标方格网AutoLISP程序代码", "url": "/posts/lisp-coord-net-code/", "categories": "编程开发, AutoLISP", "tags": "坐标, 代码", "date": "2010-03-07 13:49:10 +0800", "snippet": "绘坐标方格网程序代码,本段代码是 AutoCAD工程测量工具集 中的一个功能的源代码，可以单独运行。;;生成方格网数据文件------------------------------------------------------------;;;;;求模(defun mod (numA numB) (- (/ (* 1.0 numA) (* numB 1.0)) (fix (/ (* numA 1.0) (* 1.0 numB))) ) )(defun C:zzFGW\t(/ mscale gridDistCm pointId datFile pointA pointB pA pB gridDist zx_x zx_y zs_x\t\t zs_y fileId gridPointX\tgridPointY) (princ \"功能：生成地形图方格网数据文件。(C)水电十二局宁海施工局测量队 覃东 2017.05 qd.xyz@139.com\\n\" ) (setq\tmscale\t (getint \"请输入成图比例尺分母(100/200/500/1000/2000/5000)：\"\t\t )\t) (while (or (/= (mod mscale 100) 0) (&lt;= mscale 0)) (setq mscale\t (getint \"请输入成图比例尺分母100/200/500/1000/2000/5000：\")\t ) );;;(setq gridDistCm (getint \"请输入格网距离(cm):\")) (setq gridDistCm 10);;;默认10cm (setq pointId 0);;;(setq\tdatFile;;; (getfiled \"请输入格网坐标文件名：\";;;\t (cond (*file*);;;\t\t (\"\");;;\t );;;\t \"dat\";;;\t 1;;;);;;) (setq datFile \"D:\\\\地形图坐标方格网数据.dat\") (setq pointA (getpoint \"请输入第一点：\")) (princ (strcat \"N:\"\t\t (rtos (cadr pointA) 2 3)\t\t \" E:\"\t\t (rtos (car pointA) 2 3)\t\t \"\\n\"\t\t )\t ) (setq pointB (getpoint \"请输入第二点：\")) (princ (strcat \"N:\"\t\t (rtos (cadr pointB) 2 3)\t\t \" E:\"\t\t (rtos (car pointB) 2 3)\t\t \"\\n\"\t\t )\t ) (setq\tpA pointA\tpB pointB\t) (setq\tpointA (list (min (car pA) (car pB))\t\t (min (cadr pA) (cadr pB))\t\t )\t) (setq\tpointB (list (max (car pA) (car pB))\t\t (max (cadr pA) (cadr pB))\t\t )\t);;;格网距离：米 (setq gridDist (* (/ mscale 100) gridDistCm)) (setq zx_x (* (+ (fix (/ (car pointA) gridDist)) 1) gridDist)) (setq zx_y (* (+ (fix (/ (cadr pointA) gridDist)) 1) gridDist)) (setq zs_x (* (fix (/ (car pointB) gridDist)) gridDist)) (setq zs_y (* (fix (/ (cadr pointB) gridDist)) gridDist)) (setq gridPointX zx_x) (setq fileId (open datFile \"w\")) (while (&lt;= gridPointX zs_x) (setq gridPointY zx_y) (while (&lt;= gridPointY zs_y) (setq pointId (+ pointId 1)) (write-line\t(strcat\t(itoa pointId)\t\t\",+,\"\t\t(itoa gridPointX)\t\t\",\"\t\t(itoa gridPointY)\t\t\",0.0\"\t\t)\tfileId\t) (setq pointId (+ pointId 1)) (write-line\t(strcat\t(itoa pointId)\t\t\",NE,\"\t\t(itoa gridPointX)\t\t\",\"\t\t(itoa gridPointY)\t\t\",0.0\"\t\t)\tfileId\t) '(command \"_point\" (list gridPointX gridPointY)) (setq gridPointY (+ gridPointY gridDist)) );;;end while y (setq gridPointX (+ gridPointX gridDist)) );;;end while x (setq fileId (close fileId)) (princ) );;生成方格网数据文件------------------------------------------------------------;;" }, { "title": "南方CASS地形图地形碎部点坐标导出程序代码", "url": "/posts/lisp-cass-zzExport2Dat/", "categories": "编程开发, AutoLISP", "tags": "CASS, 代码, 地形图, 测点, 坐标", "date": "2010-03-06 13:50:10 +0800", "snippet": "工程人员收到的地形图通常都是南方CASS生成的，虽然南方CASS可以将图中地形点导出为文本格式地形数据文件，但并不是每个技术人员电脑上都装有CASS，多数只使用AutoCAD，对于只安装有AutoCAD的想将地形图中的地形点坐标导出来是比较麻烦的。以下代码可以在AutoCAD中运行将凡是CASS生成的地形图中保留有地形点的导出点坐标为.dat格式文本数据文件。以下代码在所有AutoCAD版本上都可正常运行，一般的AutoLisp程序只要不调用Visual Lisp增加的函数，对CAD版本是不挑剔的，兼容性很好。将以下代码拷贝粘贴到计事本中，保存为一文本文件，扩展名为 “.lsp”，在AutoCAD命令行输入命令 “Appload”，找到这个文件加载，就可执行命令 “zzExport2Dat”，按提示输入导出数据点文件名保存即可。(defun C:zzExport2Dat () (vl-load-com) (setq\tfilename\t (getfiled \"保存为...\"\t\t (getvar \"dwgprefix\")\t\t \"dat;csv\"\t\t 1\t ) );;;选择所有地形点图块 (SETQ\tSS (ssget \"x\"\t\t (list\t\t '(0 . \"INSERT\")\t\t (cons 8 \"gcd\")\t\t )\t ) );;;提取块坐标即地形点坐标 (if (and (/= ss nil) (/= filename nil)) ;if1 (progn\t\t\t\t;progn1 (setq fileId (open filename \"w\")) (setq i 0) (repeat (sslength ss)\t(setq ssn (ssname ss i))\t(setq endata (assoc '10 (entget ssn)))\t(if (/= endata nil)\t (progn\t ;;读取颜色值\t (setq pcolor (cdr (assoc '62 (entget ssn))))\t (if\t(/= pcolor nil)\t (setq pcolor_str (strcat \"co\" (itoa pcolor)))\t (setq pcolor_str \"\")\t )\t (setq pxyz (cdr endata))\t (setq px (car pxyz))\t (setq py (cadr pxyz))\t (setq pz (caddr pxyz))\t (setq pxyz_str (strcat (itoa (+ i 1))\t\t\t\t \",\"\t\t\t\t pcolor_str\t\t\t\t \",\"\t\t\t\t (rtos px 2 3)\t\t\t\t \",\"\t\t\t\t (rtos py 2 3)\t\t\t\t \",\"\t\t\t\t (rtos pz 2 3)\t\t\t )\t )\t (write-line pxyz_str fileId)\t )\t)\t(setq i (1+ i)) ) (setq fileId (close fileId)) (princ (strcat \"共导出\"\t\t (itoa i)\t\t \"个CASS地形点！ (C)覃东 201709 QQ:61902475\"\t ) ) )\t\t\t\t\t;end progn1 (princ \"图中没有找到CASS地形点或未输入文件名！(C)覃东 201709 QQ:61902475\" ) )\t\t\t\t\t;end if1 (princ));;;CASS地形图中点对象属性;;;((-1 . &lt;图元名: 7ffffb491b0&gt;) (0 . \"INSERT\") (330 . &lt;图元名: 7ffffb6d980&gt;) (5 . \"9A4AB\") (100 . \"AcDbEntity\");;(67 . 0) (410 . \"Model\") (8 . \"GCD\") (6 . \"Continuous\") (100 . \"AcDbBlockReference\") (66 . 1) (2 . \"GC200\");;(10 269544.0 3.74404e+006 2713.01) (41 . 0.5) (42 . 0.5) (43 . 0.5) (50 . 0.0) (70 . 0) (71 . 0) (44 . 0.0);;(45 . 0.0) (210 0.0 0.0 1.0))" }, { "title": "南方CASS点状地物符号代码展点程序", "url": "/posts/lisp-cass-dat-file-layout-code/", "categories": "编程开发, AutoLISP", "tags": "CASS, 代码", "date": "2010-03-05 13:39:10 +0800", "snippet": "网上看到的一个南方CASS点状地物符号代码展点程序，未验正正确与否。(defun c:dzw(/ file d key) ;主程序 (setq file (open (getfiled \"选择要数据文件&lt;.dat&gt;\" \"c:/\" \"dat;txt;*\" 8) \"r\")) (princ \"\\n\") (setvar \"CMDECHO\" 0) (command \"undo\" \"be\") (while (setq d (read-line file)) (setq key(substr d 1 2));以下为规律 每行一个类别 可以编辑; 关键字 块名 颜色、图层 cass编码 (cond ((and(= key \"YS\")(findblock (getid d) \"gcbj0103\"))(entmake-dzw \"gcbj0103\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340103\"))))));雨水＃ ((and(= key \"WS\")(findblock (getid d) \"gcbj0102\"))(entmake-dzw \"gcbj0102\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340102\"))))));污水＃ ((and(= key \"DX\")(findblock (getid d) \"gcbj0107\"))(entmake-dzw \"gcbj0107\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340107\"))))));电信＃ ((and(= key \"JS\")(findblock (getid d) \"gcbj0101\"))(entmake-dzw \"gcbj0101\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340101\"))))));给水＃ ((and(= key \"GS\")(findblock (getid d) \"gcbj0101\"))(entmake-dzw \"gcbj0101\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340101\"))))));给水＃ ((and(= key \"DL\")(findblock (getid d) \"gcbj0105\"))(entmake-dzw \"gcbj0105\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340105\"))))));电力＃ ((and(= key \"BM\")(findblock (getid d) \"gcbj0114\"))(entmake-dzw \"gcbj0114\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340114\"))))));不明＃ ((and(= key \"RQ\")(findblock (getid d) \"gcbj0111\"))(entmake-dzw \"gcbj0111\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340111\"))))));燃气＃ ((and(= key \"JT\")(findblock (getid d) \"gcbj0112\"))(entmake-dzw \"gcbj0112\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340112\"))))));交通＃ ((and(= key \"CH\")(findblock (getid d) \"gc298\"))(entmake-dzw \"gc298\" (getid d) 8 \"DLSS\" '((-3 (\"SOUTH\" (1000 . \"165631\")))))) ;车红 ((and(= key \"RH\")(findblock (getid d) \"gc299\"))(entmake-dzw \"gc299\" (getid d) 8 \"DLSS\" '((-3 (\"SOUTH\" (1000 . \"165632\")))))) ;人红 ((and(= key \"YB\")(findblock (getid d) \"gcbj0104\"))(entmake-dzw \"gcbj0104\" (getid d) 8 \"DLSS\" '((-3 (\"SOUTH\" (1000 . \"340104\")))))) ;雨篦 ((and(= key \"FN\")(findblock (getid d) \"gc111\"))(entmake-dzw \"gc111\" (getid d) 24 \"DLDW\" '((-3 (\"SOUTH\" (1000 . \"158703\")))))) ;坟 ((and(= key \"SE\")(findblock (getid d) \"gc019\"))(entmake-dzw \"gc019\" (getid d) 7 \"DLDW\" '((-3 (\"SOUTH\" (1000 . \"155221\")))))) ;射灯 ((and(= key \"LD\")(findblock (getid d) \"gcbj0118\"))(entmake-dzw \"gcbj0118\" (getid d) 7 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340118\"))))));路灯 ((and(= key \"LB\")(findblock (getid d) \"gc052\"))(entmake-dzw \"gc052\" (getid d) 5 \"DLSS\" '((-3 (\"SOUTH\" (1000 . \"165603\")))))) ;路标 ((and(= key \"JK\")(findblock (getid d) \"gcbj0612\"))(entmake-dzw \"gcbj0612\" (getid d) 7 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340612\"))))));监控 ((and(= key \"XF\")(findblock (getid d) \"gcbj0113\"))(entmake-dzw \"gcbj0113\" (getid d) 8 \"COMPONENT\" '((-3 (\"SOUTH\" (1000 . \"340113\"))))));消防栓 ((and(= key \"FN\")(findblock (getid d) \"gc111\"))(entmake-dzw \"gc111\" (getid d) 8 \"DLDW\" '((-3 (\"SOUTH\" (1000 . \"158703\"))))));坟 );cond );while (command \"undo\" \"e\") (command \"ZOOM\" \"E\") (princ) );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(defun getid(d / ddd xok yok);获取坐标 (9.26541e+006 9.18972e+006 0) (while (vl-string-search \" \" d) (setq d (vl-string-subst \"\" \" \" d)));如果点号有空格，替换之 (while (vl-string-search \",\" d) (setq d (vl-string-subst \" \" \",\" d)));用空格替换逗号 (setq DDD (read (strcat \"(\" d \")\")));以空格分隔的方式读取点号坐标高程 (if (/= (NTH 4 DDD) nil);;;如果坐标表 是5列 (progn;;; (SETQ xok (NTH 2 DDD)) (SETQ yok (NTH 3 DDD)) ) (progn;;;如果坐标表 是4列 (SETQ xok (NTH 1 DDD)) (SETQ yok (NTH 2 DDD)) )) (list xok yok ) );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(defun entmake-dzw(km pt co la bm / data);插块 改颜色图层编码 (command \"_.insert\" km \"x\" 0.5 \"y\" 0.5 \"non\" pt\"\") (command \"chprop\" (entlast)\"\" \"c\" co \"la\" la \"\") (setq data(entget(entlast))) (setq data(append data bm)) (entmod data) );;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(defun findblock(id block / p1 P2 P3 P4); 60厘米范围内找到同样的图块，就不绘制（可调） (command \"zoom\" \"c\" id 10) (setq P1(mapcar '+ id '(0.6 0.6))) (setq P2(mapcar '+ id '(0.6 -0.6))) (setq P3(mapcar '+ id '(-0.6 -0.6))) (setq P4(mapcar '+ id '(-0.6 0.6))) (if(null(ssget \"_CP\" (LIST p1 p2 p3 p4)(list(cons 2 block)))) T ) )" }, { "title": "MicroStation VBA 64位内置通用文件对话框代码", "url": "/posts/mstn-vba-mdl-common-file-dialog/", "categories": "编程开发, VBA-MicroStation", "tags": "通用代码, 文件, 对话框", "date": "2010-02-16 09:32:00 +0800", "snippet": "Attribute VB_Name = \"mdlbltin_fileOpen_Dialog\"Declare PtrSafe Function mdlDialog_fileOpen Lib \"stdmdlbltin.dll\" (ByVal fileName As String, _ ByVal fFileH As Long, ByVal resourceId As Long, ByVal suggestedFileName _ As String, ByVal filterstring As String, ByVal defaultDirectory As String, _ ByVal titlestring As String) As LongDeclare PtrSafe Function mdlDialog_fileCreate Lib \"stdmdlbltin.dll\" (ByVal fileName As String, _ ByVal rFileH As Long, ByVal resourceId As Long, ByVal suggestedFi1eName As String, ByVal _ filterstring As String, ByVal defaultDirectory As String, ByVal titlestring As String) As Long'Learning MicroStation VBA教程代码：C19 P440'以下对话框并不真正创建或打开文件，只是返回'一个文件名称字符串而已，真正的打开、创建操'作需代码实现'2022-04-04'内置打开对话框，只选择存在的文件Function fileOpen(filter As String, initPath As String, dlgTitle As String) Dim strFName As String Dim lngfhandle As Long Dim lngrid As Long Dim retVal As Long strFName = Space(255) retVal = mdlDialog_fileOpen(strFName, lngfhandle, lngrid, \"\", filter, initPath, dlgTitle) '*.dat;*.txt Select Case retVal Case 0 'open strFName = Left(strFName, InStr(1, strFName, Chr(0)) - 1) fileOpen = Trim(strFName) Case 1 'cancel fileOpen = \"\" End Select End Function'内置打开创建对话框，可以输入文件名，选择存在的提示覆盖Function fi1eOpenCreate(filter As String, initPath As String, dlgTitle As String) Dim strFName As String Dim lngfhandle As Long Dim lngrid As Long Dim retVal As Long strFName = Space(255) retVal = mdlDialog_fileCreate(strFName, lngfhandle, lngrid, \"\", filter, initPath, dlgTitle) Select Case retVal Case 0 'Open strFName = Left(strFName, InStr(1, strFName, Chr(0)) - 1) fi1eOpenCreate = Trim(strFName) Case 1 'Cancel fi1eOpenCreate = \"\" End Select End Function" }, { "title": "VBA 64位通用文件夹对话框代码", "url": "/posts/vba-common-folder-dialog-CommonDialogFolder64bas/", "categories": "编程开发, VBA", "tags": "通用代码, 文件夹, 对话框", "date": "2010-02-15 11:33:00 +0800", "snippet": "Attribute VB_Name = \"Dialog_64_Folder\"'选择文件夹(http://blog.sina.com.cn/s/blog_55fc7c2f0101mb4t.html)：Option Explicit'http://www.mvps.org/access/api/api0002.htm'Code courtesy of Terry Kreft Private Type BROWSEINFO hOwner As LongPtr pidlRoot As LongPtr pszDisplayName As String lpszTitle As String ulFlags As Long lpfn As LongPtr lParam As LongPtr iImage As Long End Type Private Declare PtrSafe Function SHGetPathFromIDList Lib \"shell32.dll\" Alias \"SHGetPathFromIDListA\" (ByVal pidl As Long, ByVal pszPath As String) As Long Private Declare PtrSafe Function SHBrowseForFolder Lib \"shell32.dll\" Alias \"SHBrowseForFolderA\" (lpBrowseInfo As BROWSEINFO) As LongPrivate Const BIF_RETURNONLYFSDIRS = &amp;H1Public Function BrowseDirectory(szDialogTitle As String) As StringOn Error GoTo Err_BrowseDirectory Dim X As Long, bi As BROWSEINFO, dwIList As Long Dim szPath As String, wPos As Integer With bi '.hOwner = hWndAccessApp .lpszTitle = szDialogTitle .ulFlags = BIF_RETURNONLYFSDIRS End With dwIList = SHBrowseForFolder(bi) szPath = Space$(512) X = SHGetPathFromIDList(ByVal dwIList, ByVal szPath) If X Then wPos = InStr(szPath, Chr(0)) BrowseDirectory = Left$(szPath, wPos - 1) Else BrowseDirectory = \"\" End IfExit_BrowseDirectory: Exit FunctionErr_BrowseDirectory: MsgBox Err.Number &amp; \" - \" &amp; Err.Description Resume Exit_BrowseDirectoryEnd FunctionPublic Sub TestOpeningDirectory()On Error GoTo Err_TestOpeningDirectory Dim sDirectoryName As String sDirectoryName = BrowseDirectory(\"Find and select where to export the Excel report files.\") If sDirectoryName &lt;&gt; \"\" Then MsgBox \"You selected the '\" &amp; sDirectoryName &amp; \"' directory.\", vbInformation Exit_TestOpeningDirectory: Exit Sub Err_TestOpeningDirectory: MsgBox Err.Number &amp; \" - \" &amp; Err.Description Resume Exit_TestOpeningDirectoryEnd Sub" }, { "title": "VBA 64位通用文件对话框代码", "url": "/posts/vba-common-file-dialog-CommonDialogFile64-bas/", "categories": "编程开发, VBA", "tags": "通用代码, 文件, 对话框", "date": "2010-02-13 10:36:00 +0800", "snippet": "Attribute VB_Name = \"Dialog_64_File\"' INSTRUCTIONS:'' ( For a working example, open the Debug window )' ( and enter tsGetFileFromUserTest. )''.All the arguments for the function are optional. You may call it with no'.arguments whatsoever and simply assign its return value to a variable of'.the Variant type. For example:'.'. varFileName = tsGetFileFromUser()'.'.The function will return:'. the full path and filename selected or entered by the user, or'. Null if an error occurs or if the user presses Cancel.'.'.Optional arguments may include any of the following:'. rlngFlags : one or more of the tscFN* constants (declared below)'. Combine multiple constants like this:'. tscFNHideReadOnly Or tscFNFileMustExist'. strInitialDir : the directory to display when dialog opens'. strFilter : a string containing any filters you want to use. Each'. part must be separated by the vbNullChar. -example below'. lngFilterIndex: a 1-based index indicating which filter to start with.'. strDefaultExt : Extension to use if user does not enter one.'. strFileName : Default File to display in the File Name text box.'. strDialogTitle: Caption to display in the dialog's title bar.'. fOpenFile : Boolean-True for the Open dialog, False for Save dialog.'' FILTER EXAMPLE: The filter must be a string containing two parts for each' filter. The first part is the Description, it is what the user will see' in the Files of Type box, e.g. \"Text Files (*.txt)\". The second part is' the actual filter, e.g. \"*.txt\". Each part and each filter must be' separated by the vbNullChar. For example, to provide two filters, one for' *.mdb files, and one for all files, use a statement like this:'' strFilter = \"Access (*.mdb)\" &amp; vbNullChar &amp; \"*.mdb\" _' &amp; vbNullChar &amp; \"All Files (*.*)\" &amp; vbNullChar &amp; \"*.*\"'' Then pass your strFilter variable as the strFilter argument for the call' to tsGetFileFromUser()''.--------------------------------------------------------------------------Option ExplicitPrivate Declare PtrSafe Function ts_apiGetOpenFileName Lib \"comdlg32.dll\" Alias \"GetOpenFileNameA\" (tsFN As tsFileName) As BooleanPrivate Declare PtrSafe Function ts_apiGetSaveFileName Lib \"comdlg32.dll\" Alias \"GetSaveFileNameA\" (tsFN As tsFileName) As BooleanPrivate Declare PtrSafe Function CommDlgExtendedError Lib \"comdlg32.dll\" () As LongPrivate Type tsFileName lStructSize As Long hwndOwner As LongPtr hInstance As LongPtr strFilter As String strCustomFilter As String nMaxCustFilter As Long nFilterIndex As Long strFile As String nMaxFile As Long strFileTitle As String nMaxFileTitle As Long strInitialDir As String strTitle As String flags As Long nFileOffset As Integer nFileExtension As Integer strDefExt As String lCustData As Long lpfnHook As LongPtr lpTemplateName As StringEnd Type' Flag ConstantsPrivate Const tscFNAllowMultiSelect = &amp;H200Private Const tscFNCreatePrompt = &amp;H2000Private Const tscFNExplorer = &amp;H80000Private Const tscFNExtensionDifferent = &amp;H400Private Const tscFNFileMustExist = &amp;H1000Private Const tscFNPathMustExist = &amp;H800Private Const tscFNNoValidate = &amp;H100Private Const tscFNHelpButton = &amp;H10Private Const tscFNHideReadOnly = &amp;H4Private Const tscFNLongNames = &amp;H200000Private Const tscFNNoLongNames = &amp;H40000Private Const tscFNNoChangeDir = &amp;H8Private Const tscFNReadOnly = &amp;H1Private Const tscFNOverwritePrompt = &amp;H2Private Const tscFNShareAware = &amp;H4000Private Const tscFNNoReadOnlyReturn = &amp;H8000Private Const tscFNNoDereferenceLinks = &amp;H100000Public Function tsGetFileFromUser( _ Optional ByRef rlngflags As Long = 0&amp;, _ Optional ByVal strInitialDir As String = \"\", _ Optional ByVal strFilter As String = \"All Files (*.*)\" &amp; vbNullChar &amp; \"*.*\", _ Optional ByVal lngFilterIndex As Long = 1, _ Optional ByVal strDefaultExt As String = \"\", _ Optional ByVal strFileName As String = \"\", _ Optional ByVal strDialogTitle As String = \"\", _ Optional ByVal fOpenFile As Boolean = True) As Variant'On Error GoTo tsGetFileFromUser_Err Dim tsFN As tsFileName Dim strFileTitle As String Dim fResult As Boolean ' Allocate string space for the returned strings. strFileName = Left(strFileName &amp; String(256, 0), 256) strFileTitle = String(256, 0) ' Set up the data structure before you call the function With tsFN .lStructSize = LenB(tsFN) '.hwndOwner = Application.hWndAccessApp .strFilter = strFilter .nFilterIndex = lngFilterIndex .strFile = strFileName .nMaxFile = Len(strFileName) .strFileTitle = strFileTitle .nMaxFileTitle = Len(strFileTitle) .strTitle = strDialogTitle .flags = rlngflags .strDefExt = strDefaultExt .strInitialDir = strInitialDir .hInstance = 0 .strCustomFilter = String(255, 0) .nMaxCustFilter = 255 .lpfnHook = 0 End With ' Call the function in the windows API If fOpenFile Then fResult = ts_apiGetOpenFileName(tsFN) Else fResult = ts_apiGetSaveFileName(tsFN) End If ' If the function call was successful, return the FileName chosen ' by the user. Otherwise return null. Note, the CancelError property ' used by the ActiveX Common Dialog control is not needed. If the ' user presses Cancel, this function will return Null. If fResult Then rlngflags = tsFN.flags tsGetFileFromUser = tsTrimNull(tsFN.strFile) Else tsGetFileFromUser = Null End IfEnd Function' Trim Nulls from a string returned by an API call.Private Function tsTrimNull(ByVal strItem As String) As StringOn Error GoTo tsTrimNull_Err Dim I As Integer I = InStr(strItem, vbNullChar) If I &gt; 0 Then tsTrimNull = Left(strItem, I - 1) Else tsTrimNull = strItem End If tsTrimNull_End: On Error GoTo 0 Exit FunctiontsTrimNull_Err: Beep MsgBox Err.Description, , \"Error: \" &amp; Err.Number _ &amp; \" in function basBrowseFiles.tsTrimNull\" Resume tsTrimNull_EndEnd Function'--------------------------------------------------------------------------' Project : tsDeveloperTools' Description : An example of how you can call tsGetFileFromUser()' Calls :' Accepts :' Returns :' Written By : Carl Tribble' Date Created : 05/04/1999 11:19:41 AM' Rev. History :' Comments : This is provided merely as an example to the programmer' It may be safely deleted from production code.'--------------------------------------------------------------------------Public Sub tsGetFileFromUserTest()On Error GoTo tsGetFileFromUserTest_Err Dim strFilter As String Dim lngFlags As Long Dim varFileName As Variant' strFilter = \"Access (*.mdb)\" &amp; vbNullChar &amp; \"*.mdb\" _' &amp; vbNullChar &amp; \"All Files (*.*)\" &amp; vbNullChar &amp; \"*.*\" strFilter = \"All Files (*.*)\" &amp; vbNullChar &amp; \"*.*\" lngFlags = tscFNPathMustExist Or tscFNFileMustExist Or tscFNHideReadOnly varFileName = tsGetFileFromUser( _ fOpenFile:=True, _ strFilter:=strFilter, _ rlngflags:=lngFlags, _ strDialogTitle:=\"GetFileFromUser Test (Please choose a file)\") If IsNull(varFileName) Then Debug.Print \"User pressed 'Cancel'.\" Else Debug.Print varFileName 'Forms![Form1]![Text1] = varFileName End If If varFileName &lt;&gt; \"\" Then MsgBox \"You selected the '\" &amp; varFileName &amp; \"' file.\", vbInformationtsGetFileFromUserTest_End: On Error GoTo 0 Exit SubtsGetFileFromUserTest_Err: Beep MsgBox Err.Description, , \"Error: \" &amp; Err.Number _ &amp; \" in sub basBrowseFiles.tsGetFileFromUserTest\" Resume tsGetFileFromUserTest_EndEnd Sub" }, { "title": "MicroStation VBA-OpenDesignFileForProgram", "url": "/posts/mstn-vba-OpenDesignFileForProgram/", "categories": "编程开发, VBA-MicroStation", "tags": "代码, VBA, MicroStation, 文件", "date": "2009-03-13 11:36:00 +0800", "snippet": "OpenDesignFileForProgram and MicroStation’s Dependency State1. Private Declare PtrSafe Function mdlDependency_processAffected Lib \"stdmdlbltin.dll\" () As Long 2. 3. ' 4. ' For design files loaded via OpenDesignFileForProgram it is sometimes necessary 5. ' to call UpdateElementDependencyState 6. ' 7. Private Sub UpdateDependencyPre0800903() 8. ' UpdateElementDependencyState was added in 8.9.3. Code that must be 9. ' backwards compatible can use the MDL function 10. mdlDependency_processAffected 11. End Sub 12. 13. Private Sub UpdateDependency0800903() 14. UpdateElementDependencyState 15. End Sub 16. 17. Public Sub ScanOpenDgnForProgram() 18. Dim oFile As DesignFile 19. Dim sFullFileName As String 20. 21. sFullFileName = ActiveDesignFile.Path &amp; \"\\Test.dgn\" 22. Set oFile = OpenDesignFileForProgram(sFullFileName) 23. Call DoScan(oFile) 24. oFile.Close 25. End Sub 26. 27. Private Sub DoScan(ByRef oFile As DesignFile) 28. Dim oElement As Element 29. Dim oClosed As ClosedElement 30. Dim oSc As New ElementScanCriteria 31. 32. oSc.ExcludeAllTypes 33. oSc.IncludeType msdElementTypeShape 34. 35. Dim iCountClosedShapes As Integer 36. Dim iCountShapesWithTags As Integer 37. 38. Dim oScanEnumerator As ElementEnumerator 39. Set oScanEnumerator = oFile.DefaultModelReference.Scan(oSc) 40. 41. UpdateDependency0800903 42. 43. Do While oScanEnumerator.MoveNext 44. Set oElement = oScanEnumerator.Current 45. If oElement.IsClosedElement Then 46. iCountClosedShapes = iCountClosedShapes + 1 47. Set oClosed = oElement 48. If oElement.HasAnyTags Then 49. iCountShapesWithTags = iCountShapesWithTags + 1 50. End If 51. Debug.Print iCountClosedShapes &amp; \" - \" &amp; iCountShapesWithTags 52. End If 53. Loop 54. 55. Debug.Print \"Number of Closed Shapes: \" &amp; iCountClosedShapes 56. Debug.Print \"Number of Closed Shapes with Tags: \" &amp; iCountShapesWithTags 57. End Sub" }, { "title": "MicroStation VBA调用内置文件对话框", "url": "/posts/mstn-vba-inner-common-dialog/", "categories": "编程开发, VBA-MicroStation", "tags": "方件, 对话框, MicroStation, VBA, 通用代码, 代码", "date": "2009-03-12 10:37:00 +0800", "snippet": "稍作修改：1. Declare PtrSafe Function mdlDialog_fileOpen Lib \"stdmdlbltin.dll\" (ByVal fileName As String, _ 2. ByVal fFileH As Long, ByVal resourceId As Long, ByVal suggestedFileName _ 3. As String, ByVal filterstring As String, ByVal defaultDirectory As String, _ 4. ByVal titlestring As String) As Long 5. 6. Declare PtrSafe Function mdlDialog_fileCreate Lib \"stdmdlbltin.dll\" (ByVal fileName As String, _ 7. ByVal rFileH As Long, ByVal resourceId As Long, ByVal suggestedFi1eName As String, ByVal _ 8. filterstring As String, ByVal defaultDirectory As String, ByVal titlestring As String) As Long 9. 10. 'Learning MicroStation VBA教程代码：C19 P440 11. '以下对话框并不真正创建或打开文件，只是返回 12. '一个文件名称字符串而已，真正的打开、创建操 13. '作需代码实现 14. '2022-04-04 15. 16. '内置打开对话框，只选择存在的文件 17. Function fileOpen(filter As String, initPath As String, dlgTitle As String) 18. Dim strFName As String 19. Dim lngfhandle As Long 20. Dim lngrid As Long 21. Dim retVal As Long 22. strFName = Space(255) 23. retVal = mdlDialog_fileOpen(strFName, lngfhandle, lngrid, \"\", filter, initPath, dlgTitle) '*.dat;*.txt 24. Select Case retVal 25. Case 0 'open 26. strFName = Left(strFName, InStr(1, strFName, Chr(0)) - 1) 27. fileOpen = Trim(strFName) 28. Case 1 'cancel 29. fileOpen = \"\" 30. End Select 31. 32. End Function 33. 34. '内置打开创建对话框，可以输入文件名，选择存在的提示覆盖 35. Function fi1eOpenCreate(filter As String, initPath As String, dlgTitle As String) 36. Dim strFName As String 37. Dim lngfhandle As Long 38. Dim lngrid As Long 39. Dim retVal As Long 40. strFName = Space(255) 41. retVal = mdlDialog_fileCreate(strFName, lngfhandle, lngrid, \"\", filter, initPath, dlgTitle) 42. Select Case retVal 43. Case 0 'Open 44. strFName = Left(strFName, InStr(1, strFName, Chr(0)) - 1) 45. fi1eOpenCreate = Trim(strFName) 46. Case 1 'Cancel 47. fi1eOpenCreate = \"\" 48. End Select 49. End Function原始代码：1. Declare PtrSafe Function mdlDialog_fileOpen Lib \"stdmdlbltin.dll\" (ByVal fileName As String, _ 2. ByVal fFileH As Long, ByVal resourceId As Long, ByVal suggestedFileName _ 3. As String, ByVal filterstring As String, ByVal defaultDirectory As String, _ 4. ByVal titlestring As String) As Long 5. 6. Declare PtrSafe Function mdlDialog_fileCreate Lib \"stdmdlbltin.dll\" (ByVal fileName As String, _ 7. ByVal rFileH As Long, ByVal resourceId As Long, ByVal suggestedFi1eName As String, ByVal _ 8. filterstring As String, ByVal defaultDirectory As String, ByVal titlestring As String) As Long 9. 10. 'Learning MicroStation VBA教程代码：C19 P440 11. '以下对话框并不真正创建或打开文件，只是返回 12. '一个文件名称字符串而已，真正的打开、创建操 13. '作需代码实现 14. '2022-04-04 15. 16. '内置打开对话框，只选择存在的文件 17. Sub TestFileOpen() 18. Dim strFName As String 19. Dim lngfhandle As Long 20. Dim lngrid As Long 21. Dim retVal As Long 22. strFName = Space(255) 23. retVal = mdlDialog_fileOpen(strFName, lngfhandle, lngrid, \"\", \"*.dat;*.txt\", \"f:\\\", \"Open File\") 24. Select Case retVal 25. Case 0 'open 26. strFName = Left(strFName, InStr(1, strFName, Chr(0)) - 1) 27. MsgBox \"File Selected:\" &amp; vbCr &amp; strFName 28. Case 1 'cancel 29. MsgBox \"No selected.\" 30. End Select 31. End Sub 32. 33. '内置打开创建对话框，可以输入文件名，选择存在的提示覆盖 34. Sub TestFi1eCreateA() 35. Dim strFName As String 36. Dim lngfhandle As Long 37. Dim lngrid As Long 38. Dim retVal As Long 39. strFName = Space(255) 40. retVal = mdlDialog_fileCreate(strFName, lngfhandle, lngrid, \"\", \"*.dat \", \" F:\\\", \"Create Fi1eA\") 41. Select Case retVal 42. Case 0 'Open 43. strFName = Left(strFName, InStr(1, strFName, Chr(0)) - 1) 44. MsgBox \"Fi1eSelected: \" &amp; vbCr &amp; strFName 45. Case 1 'Cancel 46. MsgBox \"No Fi1e Selected. \" 47. 'User hit the Cancel Button 48. End Select 49. End Sub " }, { "title": "Create a Solid of Rotation using MicroStation VBA", "url": "/posts/mstn-vba-Create-a-Solid-of-Rotation/", "categories": "编程开发, VBA-MicroStation", "tags": "剖面, 实体, 代码", "date": "2009-02-02 09:36:00 +0800", "snippet": " SmartSolids Solid of Rotation 2D Profile Rotation Parameters Rotate Profile Cap Surface Problems QuestionsThis page lists some solutions to common MicroStation VBA (MVBA) problems. Tips are published as examples and are not necessarily working code.SmartSolidsBentley Systems add the SmartSolid class to MicroStation VBA in a late version of MicroStation V8i. It continues to be available with MicroStation CONNECT. There are two related classes. The comments are taken from MicroStation VBA help … SmartSolid: Holds generic methods useful in dealing with SmartSolid objects SmartSolidElement: A kind of Element that corresponds to a MicroStation SmartSolid/SmartSurface elementIn other words, the SmartSolid class is an implementation of mathematical concepts that help us create and manipulate 3D solid objects. The SmartSolidElement class provide tools to handle a 3D solid as a MicroStation DGN element.Solid of RotationWe can create a solid of rotation by first identifying or creating a 2D profile. Next, we rotate the profile about a given point, in a given orientation, by a specified angle. The VBA method is SmartSolid.RevolveProfile.2D ProfileLook at the VBA documentation for SmartSolid.RevolveProfile: Revolves a wire or sheet body about the axis passing through the point and along the axis.The profile element is a DGN element: profile body which is swept along the path, it should not be a closed curve.A profile is a two-dimensional open shape. You can create such an element from a simple line-string or other primitive curve, or a complex string. Here’s an example …Dim profileElements(3) As ChainableElementSet profileElements(0) = CreateLineElement2(Nothing, Point3dFromXYZ(0.0591, 0.0245, 0), Point3dFromXYZ(0.0836, 0.0806, 0))Set profileElements(1) = CreateLineElement2(Nothing, Point3dFromXYZ(0.0836, 0.0806, 0), Point3dFromXYZ(0.0899, 0.0792, 0))Set profileElements(2) = CreateLineElement2(Nothing, Point3dFromXYZ(0.0899, 0.0792, 0), Point3dFromXYZ(0.0899, 0.0203, 0))Set profileElements(3) = CreateLineElement2(Nothing, Point3dFromXYZ(0.0899, 0.0203, 0), Point3dFromXYZ(0.0591, 0.0245, 0))Dim oProfile As ComplexStringElementSet oProfile = CreateComplexStringElement1(profileElements())Rotation ParametersNext, decide how to rotate that profile. We need a point to rotate about, an axis of rotation, and a rotation angle (the angle, as is usual, is measured in Radians) …Dim pointOfRotation As Point3dpointOfRotation = Point3dZeroDim xAxis As Vector3d' Rotate about the X-axisxAxis = Vector3dFromXYZ(1, 0, 0)Dim rotateAngle As Double' Rotate by Pi radians (180°)rotateAngle = PiRotate ProfileNow everything is ready. We’re going to create a SmartSolidElement that can be added to a DGN model. We create that SmartSolidElement using the RevolveProfile method of class SmartSolid. The actual rotation is quite simple …Dim oBodySolid As SmartSolidElementSet oBodySolid = SmartSolid.RevolveProfile(oProfile, pointOfRotation, xAxis, rotateAngle)Cap SurfaceFinally, you may want to call SmartSolidElement.CapSurface. That ensures that you create a 3D solid rather than a 3D surface. Or, as VBA help puts it: Converts a sheet body to a solid by adding faces to fill up “hollow spaces”.oBodySolid.CapSurfaceActiveModelReference.AddElement oBodySolidHere’s a screenshot of the resulting solid …Rotated ProfileProblemsSome people have reported problems using SmartSolidElement.RevolveProfile. Here are some comments … The profile of rotation must be an open element. It should not be a closed shape The angle of rotation is specified in radians, not degrees. Note that if you intend to rotate by, say, 180° and specify 180 for the rotation, that is about 10313°, which is quite a few rotations and probably not what you intended. VBA provides a conversion function Radians(), so you’ve no excuse for not using radians The axis of rotation is define by a vector. If you want to rotate about the Z axis that vector is 0,0,1 (the example above rotates about the X axis) The origin and range of the resulting solid must conform to MicroStation’s rules for solids, in particular the solid working areaMicroStation VBA developer Paul Rowlands commented, after struggling with SmartSolidElement.RevolveProfile: Cause of the problem is global origins set at large values which a certain infrastructure client likes to use in their seed filesQuestionsPost questions about MicroStation programming to the MicroStation Programming Forum." }, { "title": "MicroStation VBA创建线段生成线串示例代码", "url": "/posts/mstn-vba-line-to-complexlinestring/", "categories": "编程开发, VBA-MicroStation", "tags": "代码, 线段, 线串", "date": "2009-02-02 09:31:00 +0800", "snippet": "以下代码先创建相连的线段，然后生成一个复杂线串对象。Dim profileElements(3) As ChainableElementSet profileElements(0) = CreateLineElement2(Nothing, Point3dFromXYZ(0.0591, 0.0245, 0), Point3dFromXYZ(0.0836, 0.0806, 0))Set profileElements(1) = CreateLineElement2(Nothing, Point3dFromXYZ(0.0836, 0.0806, 0), Point3dFromXYZ(0.0899, 0.0792, 0))Set profileElements(2) = CreateLineElement2(Nothing, Point3dFromXYZ(0.0899, 0.0792, 0), Point3dFromXYZ(0.0899, 0.0203, 0))Set profileElements(3) = CreateLineElement2(Nothing, Point3dFromXYZ(0.0899, 0.0203, 0), Point3dFromXYZ(0.0591, 0.0245, 0))Dim oProfile As ComplexStringElementSet oProfile = CreateComplexStringElement1(profileElements())" }, { "title": "MicroStation XM 断面处理程序源码-类-clsCopyElementCommand", "url": "/posts/mstn-xm-vba-class-clsCopyElementCommand/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-18 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsCopyElementCommand.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsCopyElementCommand\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = False'' Copyright: (c) 2004 Bentley Systems, Incorporated. All rights reserved.'Option ExplicitImplements ILocateCommandEventsPrivate m_oStartElement As ElementPrivate m_tStartPoint As Point3dFunction CreateMovedElement(oBase As Element, oInputPoint As Point3d, addToFile As Boolean) As Element Dim oDistance As Point3d Dim oCopyContext As New CopyContext With oDistance .X = oInputPoint.X - m_tStartPoint.X .Y = oInputPoint.Y - m_tStartPoint.Y .Z = oInputPoint.Z - m_tStartPoint.Z End With oCopyContext.AddElementToModel = addToFile Set CreateMovedElement = ActiveModelReference.CopyElement(m_oStartElement, oCopyContext) CreateMovedElement.Move oDistanceEnd Function' MicroStation calls the Accept handler after the userPrivate Sub ILocateCommandEvents_Accept(ByVal Element As Element, Point As Point3d, ByVal View As View) Dim oTemp As Element Set oTemp = CreateMovedElement(m_oStartElement, Point, True) oTemp.Redraw oTemp.Rewrite CommandState.StartLocate New clsCopyElementCommandEnd SubPrivate Sub ILocateCommandEvents_Cleanup()End SubPrivate Sub ILocateCommandEvents_Dynamics(Point As Point3d, ByVal View As View, ByVal DrawMode As MsdDrawingMode) Dim oTemp As Element m_oStartElement.Redraw Set oTemp = CreateMovedElement(m_oStartElement, Point, False) oTemp.Redraw DrawModeEnd SubPrivate Sub ILocateCommandEvents_LocateFailed() CommandState.StartLocate New clsCopyElementCommandEnd SubPrivate Sub ILocateCommandEvents_LocateFilter(ByVal Element As Element, Point As Point3d, Accepted As Boolean) ShowPrompt \"Datapoint to define distance or Reset for another element\" Set m_oStartElement = Element m_tStartPoint = Point CommandState.StartDynamicsEnd SubPrivate Sub ILocateCommandEvents_LocateReset() CommandState.StartLocate New clsCopyElementCommandEnd SubPrivate Sub ILocateCommandEvents_Start() Dim lc As LocateCriteria ' Since this command does not modify the original element, ' set the locate criteria to allow the read-only elements. Set lc = CommandState.CreateLocateCriteria(False) CommandState.SetLocateCriteria lc ShowCommand \"Copy Element\" ShowPrompt \"Select element to Copy\"End Sub" }, { "title": "MicroStation XM 断面处理程序源码-类-clsDelTriangles", "url": "/posts/mstn-xm-vba-class-clsDelTriangles/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-17 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsDelTriangles.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsDelTriangles\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = FalseImplements ILocateCommandEventsPrivate Sub ILocateCommandEvents_Accept(ByVal Element As Element, Point As Point3d, ByVal View As View)'Dim oDE As m'Dim oEE As ElementEnumerator'Dim oNew As Element''Set oDE = ElementActiveModelReference.RemoveElement Element'If Element.IsDroppableElement Then MsgBox \"fasdf\"'If Element.IsDroppableElement Then'Set oEE = oDE.Drop'' ActiveModelReference.RemoveElement Element' Do While oEE.MoveNext' Set oNew = oEE.Current' ActiveModelReference.AddElement oNew' oNew.Redraw msdDrawingModeNormal' Loop'''End If' CommandState.StartDefaultCommandEnd SubPrivate Sub ILocateCommandEvents_Cleanup()End SubPrivate Sub ILocateCommandEvents_Dynamics(Point As Point3d, ByVal View As View, ByVal DrawMode As MsdDrawingMode)End SubPrivate Sub ILocateCommandEvents_LocateFailed() ' ShowStatus \"No arc element found\"End SubPrivate Sub ILocateCommandEvents_LocateFilter(ByVal Element As Element, Point As Point3d, Accepted As Boolean) ' Accepted defaults to False'If Element.IsDroppableElement Then' Accepted = False ' If Element.Type = 105 Then Accepted = True' Else 'lpSelected = False 'Set lpLineElement = Nothing 'LineInfoFrm.LineInfoTxt.Text = \"\" ' LineInfoFrm.LineInfoTxt = \"您选择的元素不是直线元素!\" ' End IfEnd SubPrivate Sub ILocateCommandEvents_LocateReset()CommandState.StartDefaultCommandEnd SubPrivate Sub ILocateCommandEvents_Start() Dim lc As LocateCriteria ' Since this command does not modify the original element, ' set the locate criteria to allow read-only elements. Set lc = CommandState.CreateLocateCriteria(False) CommandState.SetLocateCriteria lc ' CommandState.EnableAccuSnap ShowCommand \"设置断面线属性\" ShowPrompt \"请选择直线元素\"End Sub" }, { "title": "MicroStation XM 断面处理程序源码-类-clsEditPointSelect", "url": "/posts/mstn-xm-vba-class-clsEditPointSelect/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-15 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsEditPointSelect.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsEditPointSelect\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = FalseImplements IPrimitiveCommandEventsPrivate Sub IPrimitiveCommandEvents_Cleanup()End Sub'' Data point event handler'Private Sub IPrimitiveCommandEvents_DataPoint(Point As Point3d, ByVal View As View) Dim oEle As Element Dim LineEle As LineElement Dim xdataInfo As String Dim xdataInfos Dim pntInfo As String Dim pntInfos Dim pntId As DLong Dim pntIdstr As String On Error Resume Next ShowStatus \"\" On Error GoTo NoElement Set oEle = CommandState.LocateElement(Point, View, True) If Not (oEle Is Nothing) Then If oEle.HasXData(\"surmap_points\") Then Set LineEle = oEle pntInfo = getElementXdata(LineEle, \"surmap_points\", msdXDatumTypeString) pntInfos = Split(pntInfo, \"|\") peditLastPointLabelID = DLongFromString(pntInfos(3)) If ChkEleExist(peditLastPointLabelID, \"surmap_pointlabel\", \"地形点标注\") Then Set peditLastText = ActiveModelReference.GetElementByID(peditLastPointLabelID) Set peditLastPoint = oEle peditLastPointID = LineEle.id PointEditFrm.PntE = LineEle.StartPoint.X PointEditFrm.PntN = LineEle.StartPoint.Y PointEditFrm.PntH = LineEle.StartPoint.Z PointEditFrm.PntName = pntInfos(0) CommandState.StartPrimitive Me ElseIf oEle.HasXData(\"surmap_pointlabel\") Then xdataInfo = getElementXdata(oEle, \"surmap_pointlabel\", msdXDatumTypeString) xdataInfos = Split(xdataInfo, \"|\") pntIdstr = xdataInfos(1) peditLastPointID = DLongFromString(pntIdstr) peditLastPointLabelID = oEle.id If ChkEleExist(peditLastPointID, \"surmap_points\", \"地形点标记\") Then Set LineEle = ActiveModelReference.GetElementByID(peditLastPointID) 'End If ' If Not (lineEle Is Nothing) Then pntInfo = getElementXdata(LineEle, \"surmap_points\", msdXDatumTypeString) pntInfos = Split(pntInfo, \"|\") PointEditFrm.PntE = LineEle.StartPoint.X PointEditFrm.PntN = LineEle.StartPoint.Y PointEditFrm.PntH = LineEle.StartPoint.Z PointEditFrm.PntName = pntInfos(0) Set peditLastPoint = LineEle Set peditLastText = oEle PointEditFrm.LocatePoint.Enabled = True PointEditFrm.DelPointCom.Enabled = True PointEditFrm.ModifyCom.Enabled = True Else PointEditFrm.PntE = \"\" PointEditFrm.PntN = \"\" PointEditFrm.PntH = \"\" PointEditFrm.PntName = \"\" PointEditFrm.LocatePoint.Enabled = False PointEditFrm.DelPointCom.Enabled = False PointEditFrm.ModifyCom.Enabled = False End If CommandState.StartPrimitive Me Else ShowError \"选择对象类型不正确!\" End If Else CommandState.StartPrimitive Me End If Exit SubNoElement: ShowStatus \"Element not found\"End SubPrivate Sub IPrimitiveCommandEvents_Dynamics(Point As Point3d, ByVal View As View, ByVal DrawMode As MsdDrawingMode)End SubPrivate Sub IPrimitiveCommandEvents_Keyin(ByVal Keyin As String)End SubPrivate Sub IPrimitiveCommandEvents_Reset() CommandState.StartPrimitive MeEnd Sub'' Start event handler'Private Sub IPrimitiveCommandEvents_Start() ShowCommand \"选择地形点或标注\" ShowPrompt \"请选择地形点或标注\" CommandState.SetLocateCursorEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-类-clsIniFile", "url": "/posts/mstn-xm-vba-class-clsIniFile/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-10 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsIniFile.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsIniFile\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = FalseOption Explicit'--------classIniFile.cls 代码----------------'这里定义了一个classIniFile类'一个绝对经典的在VB中操作.ini文件的通用类源代码'程序编写：中国青岛·许家国' 2002.6.16'E－Mail: goj2000@163.com'HomePage: http://www.gojclub.com''Private member that holds a reference to'the path of our ini filePrivate strINI As String'Windows API DeclaresPrivate Declare Function WritePrivateProfileString Lib \"kernel32\" Alias \"WritePrivateProfileStringA\" _ (ByVal lpApplicationName As String, _ ByVal lpKeyName As Any, _ ByVal lpString As Any, _ ByVal lpFileName As String) As LongPrivate Declare Function GetPrivateProfileString _ Lib \"kernel32\" Alias \"GetPrivateProfileStringA\" _ (ByVal lpApplicationName As String, _ ByVal lpKeyName As Any, _ ByVal lpDefault As String, _ ByVal lpReturnedString As String, _ ByVal nSize As Long, _ ByVal lpFileName As String) As LongPrivate Function MakePath(ByVal strDrv As String, ByVal strDir As String) As String ' Makes an INI file: Guarantees a sub dir Do While Right$(strDrv, 1) = \"\\\" strDrv = Left$(strDrv, Len(strDrv) - 1) Loop Do While Left$(strDir, 1) = \"\\\" strDir = Mid$(strDir, 2) Loop ' Return the path MakePath = strDrv &amp; \"\\\" &amp; strDirEnd FunctionPrivate Sub CreateIni(strDrv As String, strDir As String) ' Make a new ini file strINI = MakePath(strDrv, strDir)End SubPublic Sub WriteIniKey(strSection As String, strKey As String, strValue As String) ' Write to strINI WritePrivateProfileString strSection, strKey, strValue, strINIEnd SubPublic Function GetIniKey(strSection As String, strKey As String) As String Dim strTmp As String Dim lngRet As String Dim i As Integer Dim strTmp2 As String If Dir(INIFileName) &lt;&gt; \"\" Then strTmp = String$(1024, Chr(32)) lngRet = GetPrivateProfileString(strSection, strKey, \"\", strTmp, Len(strTmp), strINI) strTmp = Trim(strTmp) strTmp2 = \"\" For i = 1 To Len(strTmp) If Asc(Mid(strTmp, i, 1)) &lt;&gt; 0 Then strTmp2 = strTmp2 + Mid(strTmp, i, 1) End If Next i strTmp = strTmp2 GetIniKey = strTmp Else GetIniKey = \"\" End IfEnd FunctionPublic Property Let INIFileName(ByVal New_IniPath As String) ' Sets the new ini path strINI = New_IniPathEnd PropertyPublic Property Get INIFileName() As String ' Returns the current ini path INIFileName = strINIEnd Property'***************************************清除KeyWord\"键\"(Sub)***********************************************Public Function DelIniKey(ByVal SectionName As String, ByVal KeyWord As String) Dim RetVal As Integer RetVal = WritePrivateProfileString(SectionName, KeyWord, 0&amp;, strINI)End Function'如果是清除section就少写一个Key多一个\"\"。'**************************************清除 Section\"段\"(Sub)***********************************************Public Function DelIniSec(ByVal SectionName As String) '清除section Dim RetVal As Integer RetVal = WritePrivateProfileString(SectionName, 0&amp;, \"\", strINI)End Function" }, { "title": "MicroStation XM 断面处理程序源码-类-clsOpenClose", "url": "/posts/mstn-xm-vba-class-clsOpenClose/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-09 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsOpenClose.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsOpenClose\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = FalseDim WithEvents hooks As ApplicationAttribute hooks.VB_VarHelpID = -1Private Sub Class_Initialize() Set hooks = ApplicationEnd SubPrivate Sub hooks_OnDesignFileClosed(ByVal DesignFileName As String) 'ShowMessage \"Closed design file \" &amp; DesignFileNameEnd SubPrivate Sub hooks_OnDesignFileOpened(ByVal DesignFileName As String) 'splashForm.dgnFilename.Caption = DesignFileName Init 'ToolsFrm.Show 'ShowMessage \"Opened design file \" &amp; DesignFileNameEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-类-clsReadLineCommand", "url": "/posts/mstn-xm-vba-class-clsReadLineCommand/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-08 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsReadLineCommand.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsReadLineCommand\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = FalseImplements ILocateCommandEventsPrivate Sub ILocateCommandEvents_Accept(ByVal Element As Element, Point As Point3d, ByVal View As View) Dim StartPnt As Point3d Dim EndPnt As Point3d Dim oLineElement As LineElement Dim LineVertices() As Point3d Dim i As Long Dim iDecimalPoint As Integer '小数位 Dim iDelimiter As String '分隔符 Dim iLevel As String Dim iColor As Integer Dim iStyle As String Dim iWeight As Integer Set oLineElement = Element iDelimiter = \",\" iDecimalPoint = 3 LineInfoFrm.LineInfoTxt = \"\" LineVertices = oLineElement.GetVertices For i = 0 To UBound(LineVertices) LineInfoFrm.LineInfoTxt = LineInfoFrm.LineInfoTxt &amp; Round(LineVertices(i).X, iDecimalPoint) &amp; iDelimiter &amp; Round(LineVertices(i).Y, iDecimalPoint) &amp; iDelimiter &amp; Round(LineVertices(i).Z, iDecimalPoint) &amp; vbCrLf Next lpLineID = GetEleID(Element, \"(C)SurMap.com ProfileLine\") If Element.HasXData(\"(C)SurMap.com ProfileLine\") And lpLineID &lt;&gt; \"\" Then LineInfoFrm.Li_All.Enabled = True Else LineInfoFrm.Li_All.Enabled = False End If lpSelected = True Set lpLineElement = Element iLevel = Element.Level.Name iColor = Element.Color iStyle = Element.LineStyle.Name iWeight = Element.LineWeight LineInfoFrm.Li_CLevel.Value = iLevel LineInfoFrm.Li_CColor.Value = iColor LineInfoFrm.Li_CStyle.Value = iStyle LineInfoFrm.Li_CWeight.Value = iWeight LineInfoFrm.Li_Levels.Value = iLevel LineInfoFrm.Li_SColor.Value = iColor LineInfoFrm.Li_SStyle.Value = iStyle LineInfoFrm.Li_SWeight.Value = iWeight CommandState.StartDefaultCommandEnd SubPrivate Sub ILocateCommandEvents_Cleanup()End SubPrivate Sub ILocateCommandEvents_Dynamics(Point As Point3d, ByVal View As View, _ ByVal DrawMode As MsdDrawingMode)End SubPrivate Sub ILocateCommandEvents_LocateFailed() ' ShowStatus \"No arc element found\"End SubPrivate Sub ILocateCommandEvents_LocateFilter(ByVal Element As Element, Point As Point3d, Accepted As Boolean) ' Accepted defaults to False Accepted = False If Element.Type = msdElementTypeLine Or Element.Type = msdElementTypeLineString Then Accepted = True Else 'lpSelected = False 'Set lpLineElement = Nothing 'LineInfoFrm.LineInfoTxt.Text = \"\" LineInfoFrm.LineInfoTxt = \"您选择的元素不是直线元素!\" End IfEnd SubPrivate Sub ILocateCommandEvents_LocateReset()CommandState.StartDefaultCommandEnd SubPrivate Sub ILocateCommandEvents_Start() Dim lc As LocateCriteria ' Since this command does not modify the original element, ' set the locate criteria to allow read-only elements. Set lc = CommandState.CreateLocateCriteria(False) CommandState.SetLocateCriteria lc CommandState.EnableAccuSnap ShowCommand \"设置断面线属性\" ShowPrompt \"请选择直线元素\"End Sub" }, { "title": "MicroStation XM 断面处理程序源码-类-clsReadPointCommand", "url": "/posts/mstn-xm-vba-class-clsReadPointCommand/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-06 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsReadPointCommand.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsReadPointCommand\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = FalseImplements ILocateCommandEventsPrivate Sub ILocateCommandEvents_Accept(ByVal Element As Element, Point As Point3d, ByVal View As View)End SubPrivate Sub ILocateCommandEvents_Cleanup()End SubPrivate Sub ILocateCommandEvents_Dynamics(Point As Point3d, ByVal View As View, ByVal DrawMode As MsdDrawingMode)End SubPrivate Sub ILocateCommandEvents_LocateFailed() ShowStatus \"请选择元素上的点！\"End SubPrivate Sub ILocateCommandEvents_LocateFilter(ByVal Element As Element, Point As Point3d, Accepted As Boolean)DspMsg.X.Text = Round(Point.X, 3)DspMsg.Y.Text = Round(Point.Y, 3)DspMsg.Z.Text = Round(Point.Z, 3)DspMsg.ShowEnd SubPrivate Sub ILocateCommandEvents_LocateReset()End SubPrivate Sub ILocateCommandEvents_Start() Dim lc As LocateCriteria ' Since this command does not modify the original element, ' set the locate criteria to allow read-only elements. Set lc = CommandState.CreateLocateCriteria(False) CommandState.SetLocateCriteria lc CommandState.EnableAccuSnap ShowCommand \"读取点坐标\" ShowPrompt \"请选择一个点,可以捕捉:\"End Sub" }, { "title": "MicroStation XM 断面处理程序源码-类-clsSelectDesignLine", "url": "/posts/mstn-xm-vba-class-clsSelectDesignLine/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-05 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsSelectDesignLine.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsSelectDesignLine\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = FalseImplements IPrimitiveCommandEventsPrivate Sub IPrimitiveCommandEvents_Cleanup()End Sub'' Data point event handler'Private Sub IPrimitiveCommandEvents_DataPoint(Point As Point3d, ByVal View As View) Dim oEle As Element Dim lEle As LineElement Dim cmsEle As ComplexStringElement Dim LineVers() As Point3d Dim dsnI As Long ShowStatus \"\" On Error GoTo NoElement Set oEle = CommandState.LocateElement(Point, View, True) ' MsgBox oEle.Type If Not (oEle Is Nothing) Then If oEle.Type = msdElementTypeLine Or oEle.Type = msdElementTypeLineString Then Set lEle = oEle LineVers = lEle.GetVertices DesignLineFrm.ComStringTxt.Text = \"S \" &amp; lEle.StartPoint.X &amp; \",\" &amp; lEle.StartPoint.Y For dsnI = 1 To UBound(LineVers) DesignLineFrm.ComStringTxt.Text = DesignLineFrm.ComStringTxt.Text &amp; vbCrLf &amp; \"P \" &amp; LineVers(dsnI).X &amp; \",\" &amp; LineVers(dsnI).Y Next CommandState.StartPrimitive Me ElseIf oEle.Type = msdElementTypeComplexString Then Set cmsEle = oEle 'LineVers = cmsEle.get DesignLineFrm.ComStringTxt.Text = \"S \" &amp; lEle.StartPoint.X &amp; \",\" &amp; lEle.StartPoint.Y For dsnI = 1 To UBound(LineVers) DesignLineFrm.ComStringTxt.Text = DesignLineFrm.ComStringTxt.Text &amp; vbCrLf &amp; \"P \" &amp; LineVers(dsnI).X &amp; \",\" &amp; LineVers(dsnI).Y Next CommandState.StartPrimitive Me Else MsgBox oEle.Type ShowError \"请选择一条件直线元素!\" End If Else CommandState.StartPrimitive Me End If Exit SubNoElement: ShowStatus \"Element not found\"' Dim oEle As Element' ShowStatus \"\"' On Error GoTo NoElement'' Set oEle = CommandState.LocateElement(Point, View, True)' If Not (oEle Is Nothing) Then' MsgBox oEle.Type' If oEle.Type = msdElementTypeLine Then' MsgBox \"OK:\"' CommandState.StartPrimitive Me' Else' ShowError \"That element cannot be dropped\"' End If' Else' CommandState.StartPrimitive Me' End If' Exit Sub'NoElement:' ShowStatus \"Element not found\"End SubPrivate Sub IPrimitiveCommandEvents_Dynamics(Point As Point3d, ByVal View As View, ByVal DrawMode As MsdDrawingMode)End SubPrivate Sub IPrimitiveCommandEvents_Keyin(ByVal Keyin As String)End SubPrivate Sub IPrimitiveCommandEvents_Reset() CommandState.StartDefaultCommand 'CommandState.StartPrimitive Me 'm_nPoints = 0End Sub'' Start event handler'Private Sub IPrimitiveCommandEvents_Start() ShowCommand \"选择元素\" ShowPrompt \"请选择一条直线\" CommandState.SetLocateCursorEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-类-clsSelectElement", "url": "/posts/mstn-xm-vba-class-clsSelectElement/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码, 类", "date": "2008-08-03 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 类：clsSelectElement.clsVERSION 1.0 CLASSBEGIN MultiUse = -1 'TrueENDAttribute VB_Name = \"clsSelectElement\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = FalseAttribute VB_Exposed = TrueImplements IPrimitiveCommandEventsPrivate m_atPoints(0 To 1) As Point3dPrivate m_nPoints As IntegerPrivate Sub IPrimitiveCommandEvents_Cleanup()End Sub'' Data point event handler'Private Sub IPrimitiveCommandEvents_DataPoint(Point As Point3d, ByVal View As View) Dim oEle As Element Dim lEle As LineElement ShowStatus \"\" On Error GoTo NoElement If m_nPoints = 0 Then CommandState.StartDynamics m_atPoints(0) = Point m_nPoints = 1 ShowPrompt \"Place end point\" ElseIf m_nPoints = 1 Then m_atPoints(1) = Point m_nPoints = 0 Set lEle = CreateLineElement1(Nothing, m_atPoints) ActiveModelReference.AddElement lEle lEle.Redraw LableLevelLine lEle CommandState.StartPrimitive Me End If NoElement:End SubPrivate Sub IPrimitiveCommandEvents_Dynamics(Point As Point3d, ByVal View As View, ByVal DrawMode As MsdDrawingMode) If m_nPoints = 1 Then m_atPoints(1) = Point Dim oEl As LineElement Set oEl = CreateLineElement1(Nothing, m_atPoints) oEl.Redraw DrawMode End IfEnd SubPrivate Sub IPrimitiveCommandEvents_Keyin(ByVal Keyin As String)End SubPrivate Sub IPrimitiveCommandEvents_Reset() CommandState.StartDefaultCommand 'CommandState.StartPrimitive Me 'm_nPoints = 0End Sub'' Start event handler'Private Sub IPrimitiveCommandEvents_Start() ShowCommand \"选择元素\" ShowPrompt \"请选择一条直线\" 'CommandState.SetLocateCursorEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-窗体-AddModelFrm", "url": "/posts/mstn-xm-vba-code-AddModelFrm-form/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-05-26 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 窗体：AddModelFrm.frmVERSION 5.00Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} AddModelFrm Caption = \"添加断面 (C)SurMap.com 覃东\" ClientHeight = 855 ClientLeft = 45 ClientTop = 435 ClientWidth = 4575 OleObjectBlob = \"AddModelFrm.frx\":0000 ShowModal = 0 'False StartUpPosition = 1 '所有者中心EndAttribute VB_Name = \"AddModelFrm\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = TrueAttribute VB_Exposed = FalsePrivate Sub AddCom_Click()Dim strModelDescrip As StringIf Not FindModel(Trim(adModelName)) Then strModelDescrip = \"桩 号:\" &amp; strModelName &amp; vbCrLf &amp; \"创建于:\" &amp; Now &amp; vbCrLf &amp; \"创建者:\" &amp; vbCrLf &amp; vbCrLf &amp; \"操作记录:\" Set m = ActiveDesignFile.Models.Add(ActiveDesignFile.DefaultModelReference, Trim(adModelName), strModelDescrip, msdModelTypeNormal, False) ViewModelFrm.DescriptionTxt.Text = ActiveModelReference.Description ViewModelFrm.ComboBox1.AddItem Trim(adModelName) ViewModelFrm.ComboBox1.Text = Trim(adModelName) ViewModelFrm.cmdPrevious.Enabled = True ViewModelFrm.cmdNext.Enabled = True ViewModelFrm.ComboBox1.Enabled = True ViewModelFrm.DelModelCom.Enabled = True ViewModelFrm.SaveInfoCmd.Enabled = TrueMe.HideEnd IfEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-窗体-DesignLineFrm", "url": "/posts/mstn-xm-vba-code-DesignLineFrm-form/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-05-23 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 窗体：DesignLineFrm.frmVERSION 5.00Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} DesignLineFrm Caption = \"绘设计线程序 (C)SurMap.com 覃东\" ClientHeight = 7935 ClientLeft = 45 ClientTop = 435 ClientWidth = 6390 OleObjectBlob = \"DesignLineFrm.frx\":0000 ShowModal = 0 'False StartUpPosition = 1 '所有者中心EndAttribute VB_Name = \"DesignLineFrm\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = TrueAttribute VB_Exposed = FalsePrivate Sub BatchDraw_Click()Dim cmScale As StringDim bComStringsDim i As LongcmScale = LoadScalePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")If cmScale = \"\" ThencurScale = 500 / 1000ElsecurScale = cmScale / 1000End If'curScale = 500 / 1000bComStrings = Split(ComStringTxt.Text, vbCrLf)comRows = 0For i = 0 To UBound(bComStrings)comRows = comRows + 1If Trim(bComStrings(i)) &lt;&gt; \"\" Then doComm (bComStrings(i))NextEnd SubPrivate Sub ComStringTxt_Change()If Trim(ComStringTxt) &lt;&gt; \"\" ThenDoCal.Enabled = TrueElseDoCal.Enabled = FalseEnd IfEnd SubPrivate Sub ComStringTxt_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)If KeyCode = 13 Then KeyInChr = \"\"End SubPrivate Sub ComStringTxt_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)If KeyAscii &lt;&gt; 32 ThenKeyInChr = KeyInChr &amp; Chr(KeyAscii)ElseSelect Case UCase(KeyInChr)Case \"I\"Echo = \"语法：I 坡比(1/0.5，20/100),到达高程[,(L|R)]\"Case \"A\"Echo = \"语法：A 角度(D.MMSS),到达高程\"Case \"H\"Echo = \"语法：H 平距(正向右负向左)\"Case \"V\"Echo = \"语法：V 垂直距离(正向上负向下)\"Case \"S\"Echo = \"语法：S 坐标X,坐标Y\"Case \"@\"Echo = \"语法：@ 增量DX,增量DY\"Case \"P\"Echo = \"语法：P 坐标X,坐标Y\"Case \"LEVEL\"Echo = \"设定图层：LEVEL 图层名\"Case \"COLOR\"Echo = \"设定颜色：COLOR 颜色值(0～255)\"Case \"STYLE\"Echo = \"指定线性：STYLE 线性序号\"Case \"WEIGHT\"Echo = \"指定线宽：WEIGHT 线宽值(0～32)\"Case \"WEIGHT\"Echo = \"按函数表达式绘图:f(x) x^2+0.5*x,1,100,0.1\"Case ElseEcho = \"命令不能被识别，输入可能有误！\"End SelectKeyInChr = \"\"End IfEnd SubPrivate Sub comtxt_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)If KeyCode = 13 Then KeyInChr = \"\"End SubPrivate Sub comtxt_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)If KeyAscii &lt;&gt; 32 ThenKeyInChr = KeyInChr &amp; Chr(KeyAscii)ElseSelect Case UCase(KeyInChr)Case \"I\"Echo = \"语法：I 坡比(1/0.5，20/100),到达高程[,(L|R)]\"Case \"A\"Echo = \"语法：A 角度(D.MMSS),到达高程\"Case \"H\"Echo = \"语法：H 平距(正向右负向左)\"Case \"V\"Echo = \"语法：V 垂直距离(正向上负向下)\"Case \"S\"Echo = \"语法：S 坐标X,坐标Y\"Case \"@\"Echo = \"语法：@ 增量DX,增量DY\"Case \"P\"Echo = \"语法：P 坐标X,坐标Y\"Case \"LEVEL\"Echo = \"设定图层：LEVEL 图层名\"Case \"COLOR\"Echo = \"设定颜色：COLOR 颜色值(0～255)\"Case \"STYLE\"Echo = \"指定线性：STYLE 线性序号\"Case \"WEIGHT\"Echo = \"指定线宽：WEIGHT 线宽值(0～32)\"Case ElseEcho = \"命令不能被识别，输入可能有误！\"End SelectKeyInChr = \"\"End IfEnd SubPrivate Sub DoCal_Click()'Dim cmScale As StringDim bComStringsDim i As LongDim vpCoors() As StringDim kwnCoor() As String'cmScale = LoadScalePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")'If cmScale = \"\" Then'curScale = 500 / 1000'Else'curScale = cmScale / 1000'End If'curScale = 500 / 1000vCoorList = \"\"bComStrings = Split(ComStringTxt.Text, vbCrLf)comRows = 0For i = 0 To UBound(bComStrings)comRows = comRows + 1If Trim(bComStrings(i)) &lt;&gt; \"\" Then doCommForCal (bComStrings(i))NextvpCoors = Split(vCoorList, \",\")BubbleCoorListSortMath vpCoors, TrueCalResult = \"\"If Trim(toH) &lt;&gt; \"\" ThenCalResult = CalResult &amp; \"X--&gt;Y S--&gt;H\" &amp; vbCrLfCalResult = CalResult &amp; \"==============\" &amp; vbCrLfCalResult = CalResult &amp; \"X\" &amp; vbTab &amp; \"Y\" &amp; vbCrLfCalResult = CalResult &amp; \"--------------\" &amp; vbCrLfkwnCoor = Split(Trim(toH), \",\")For i = LBound(kwnCoor) To UBound(kwnCoor)If IsNumeric(kwnCoor(i)) ThenCalResult = CalResult &amp; calH(vpCoors, Val(kwnCoor(i)))End IfNextEnd IfIf CalResult &lt;&gt; \"\" Then CalResult = CalResult &amp; vbCrLfIf Trim(toX) &lt;&gt; \"\" ThenCalResult = CalResult &amp; \"Y--&gt;X H--S\" &amp; vbCrLfCalResult = CalResult &amp; \"==============\" &amp; vbCrLfCalResult = CalResult &amp; \"Y\" &amp; vbTab &amp; \"X\" &amp; vbCrLfCalResult = CalResult &amp; \"--------------\" &amp; vbCrLfkwnCoor = Split(Trim(toX), \",\")For i = LBound(kwnCoor) To UBound(kwnCoor)If IsNumeric(kwnCoor(i)) Then'CalResult = CalResult &amp; kwnCoor(i) &amp; vbTab &amp; Format(calX(vpCoors, Val(kwnCoor(i))), \"0.000\") &amp; vbCrLfCalResult = CalResult &amp; calX(vpCoors, Val(kwnCoor(i)))End IfNextEnd IfEnd SubPrivate Sub DrawLine_Click()doComm (comtxt.Text)ComStringTxt.Text = ComStringTxt.Text &amp; Trim(comtxt.Text) &amp; vbCrLfcomtxt.Text = \"\"End SubPrivate Sub hlpCom_Click()HelpDesignLineFrm.ShowEnd SubPrivate Sub Load_Click()Dim FileNum As LongDim comStr As StringComStringTxt.Text = \"\"CD.DialogTitle = \"读取设计线定义文件\"CD.Filter = \"设计线(*.sjx) (C)SurMap.com 覃东|*.sjx\"CD.ShowOpenIf CD.FileName &lt;&gt; \"\" ThenFileNum = FreeFileOpen CD.FileName For Input As FileNumDo Until EOF(FileNum)Line Input #FileNum, comStrIf Trim(comStr) &lt;&gt; \"\" Then ComStringTxt.Text = ComStringTxt.Text &amp; comStr &amp; vbCrLfLoopClose #FileNumEcho = \"已打开文件:\" &amp; CD.FileTitleEnd IfEnd SubPrivate Sub ReadCom_Click() CommandState.StartPrimitive New clsSelectDesignLineEnd SubPrivate Sub save_Click()Dim FileNum As LongCD.DialogTitle = \"保存设计线定义文件\"CD.Filter = \"设计线(*.sjx) (C)SurMap.com 覃东|*.sjx\"CD.ShowSaveIf CD.FileName &lt;&gt; \"\" And Trim(ComStringTxt.Text) &lt;&gt; \"\" ThenFileNum = FreeFileOpen CD.FileName For Output As FileNumPrint #FileNum, UCase(Trim(ComStringTxt.Text))Close #FileNumEcho = \"已保存为:\" &amp; CD.FileTitleEnd IfEnd SubPrivate Sub UserForm_Initialize()Echo = \"版权所有 (C)2006-2008 SurMap.com 覃东\"preStr = \"▽\"onPaperSize = 2 '标注在图尺上的打印尺寸为3毫米curColor = 0Set curLineStyle = ByLevelLineStyleSet curLevel = FindLevel(\"缺省\")curWeight = 0curPoint.X = 0curPoint.Y = 0curPoint.Z = 0End Sub" }, { "title": "MicroStation XM 断面处理程序源码-窗体-DtmEditFrm", "url": "/posts/mstn-xm-vba-code-DtmEditFrm-form/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-05-15 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 窗体：DtmEditFrm.frmVERSION 5.00Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} DtmEditFrm Caption = \"三角网(DTM)编辑 (C)SurMap.com 覃东\" ClientHeight = 1095 ClientLeft = 45 ClientTop = 435 ClientWidth = 5895 OleObjectBlob = \"DtmEditFrm.frx\":0000 ShowModal = 0 'False StartUpPosition = 1 '所有者中心EndAttribute VB_Name = \"DtmEditFrm\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = TrueAttribute VB_Exposed = FalsePrivate Sub AddTri_Click() CadInputQueue.SendCommand \"PLACE SHAPE CONSTRAINED\"End SubPrivate Sub DelTri_Click() CommandState.StartLocate New clsDelTrianglesEnd SubPrivate Sub DropDtm_Click() Dim triEe As ElementEnumerator Dim oScanCriteria As ElementScanCriteria Dim TriShp As ShapeElement Dim Point As Point3d Dim triGrp As NamedGroupElement Dim LastId As Long Dim pBar As Long pBar = 0'PPbar.Visible = TrueLabel1.Visible = FalsedxCombo.Visible = FalseDtmEditFrm.RepaintShowMessage \"开始准备工作请等待...\" LastId = ActiveModelReference.GraphicalElementCache.GetLastValidElement.CacheIndex If ActiveModelReference.GetNamedGroup(\"triangles\") Is Nothing Then Set triGrp = ActiveModelReference.AddNewNamedGroup(\"triangles\") Else Set triGrp = ActiveModelReference.GetNamedGroup(\"triangles\") End If Set oScanCriteria = New ElementScanCriteria oScanCriteria.ExcludeAllTypes oScanCriteria.IncludeType msdElementTypeMeshHeader Set triEe = ActiveModelReference.GraphicalElementCache.Scan(oScanCriteria) Do While triEe.MoveNext If triEe.Current.Type = msdElementTypeMeshHeader Then ActiveModelReference.SelectElement triEe.Current End If Loop CadInputQueue.SendCommand \"DROP ELEMENT\" Point.X = 0 Point.Y = 0 Point.Z = 0 CadInputQueue.SendDataPoint Point, 1 If LastId &lt;&gt; ActiveModelReference.GraphicalElementCache.GetLastValidElement.CacheIndex Then Set oScanCriteria = New ElementScanCriteria oScanCriteria.ExcludeAllTypes oScanCriteria.IncludeType msdElementTypeShape oScanCriteria.ExcludeAllLevels oScanCriteria.IncludeLevel FindLevel(\"三角网\") Set triEe = ActiveModelReference.GraphicalElementCache.Scan(oScanCriteria) Do While triEe.MoveNext If pBar &lt; 1000 Then pBar = pBar + 1 Else pBar = 1 End If' PPbar.Value = pBar Set TriShp = triEe.Current If TriShp.VerticesCount = 4 And triGrp.GetMember(triEe.Current) Is Nothing Then triGrp.AddMember triEe.Current Loop triGrp.Rewrite End If LastElementID = ActiveModelReference.GraphicalElementCache.GetLastValidElement.CacheIndexShowMessage \"准备工作结束!\"'PPbar.Visible = FalseLabel1.Visible = TruedxCombo.Visible = TrueEnd SubPrivate Sub dxCombo_Change()If Trim(dxCombo.Text) &lt;&gt; \"\" Then If ActiveModelReference.Name &lt;&gt; Trim(dxCombo.Text) Then If FindModel(Trim(dxCombo.Text)) Then ActiveDesignFile.Models(Trim(dxCombo.Text)).Activate End IfEnd IfEnd SubPrivate Sub TriChange_Click()Dim ShpVer1() As Point3dDim ShpVer2() As Point3dDim SamePoints As IntegerDim Ee As ElementEnumeratorDim Shps(100) As ShapeElementDim Shp As ShapeElementDim Cnt As LongSamePoints = 0Cnt = 0 Set Ee = ActiveModelReference.GetSelectedElements Do While Ee.MoveNext If Ee.Current.Type = msdElementTypeShape Then Set Shp = Ee.Current If Shp.VerticesCount = 4 And Cnt &lt; 100 Then Set Shps(Cnt) = Ee.Current Cnt = Cnt + 1 End If End If Loop If Cnt = 2 Then ShpVer1 = Shps(0).GetVertices ShpVer2 = Shps(1).GetVertices For i = 0 To UBound(ShpVer1) - 1 For j = 0 To UBound(ShpVer2) - 1 If (ShpVer2(j).X = ShpVer1(i).X) And (ShpVer2(j).Y = ShpVer1(i).Y) And (ShpVer2(j).Z = ShpVer1(i).Z) Then SamePoints = SamePoints + 1 End If Next Next If SamePoints = 2 Then ChangeShape Shps(0), Shps(1) End IfEnd SubPrivate Sub UpDate_Click() Dim triEe As ElementEnumerator Dim oScanCriteria As ElementScanCriteria Dim TriShp As ShapeElement Dim Point As Point3d Dim LastId As Long Dim CurId As Long Dim LastEle As Element Dim triGrp As NamedGroupElement Dim cEleID As Long Dim i As Long Dim LastElementTmp As Element 'Set dtmGrp = ActiveModelReference.GetNamedGroup(\"dtm\") ActiveModelReference.UnselectAllElements CadInputQueue.SendCommand \"DIALOG TOOLBOX MESH TOGGLE\" CadInputQueue.SendCommand \"FACET MODIFY stitch\" ' 设置一个与对话框关联的变量 SetCExpressionValue \"tcb-&gt;ms3DToolSettings.trimCurve.meshModifyType\", 1, \"FACET\" LastId = ActiveModelReference.GraphicalElementCache.GetLastValidElement.CacheIndex 'dtmGrp.SelectElements msdMemberTraverseSimpleIf ActiveModelReference.GetNamedGroup(\"triangles\") Is Nothing Or ActiveModelReference.GetNamedGroup(\"triangles\").MembersCount = 0 Then Set oScanCriteria = New ElementScanCriteria oScanCriteria.ExcludeAllTypes oScanCriteria.IncludeType msdElementTypeShape Set triEe = ActiveModelReference.GraphicalElementCache.Scan(oScanCriteria) Do While triEe.MoveNext If triEe.Current.Type = msdElementTypeShape And triEe.Current.IsValid Then Set TriShp = triEe.Current If TriShp.VerticesCount = 4 Then ActiveModelReference.SelectElement triEe.Current End If LoopElse 'LastElementID = LastId Set triGrp = ActiveModelReference.GetNamedGroup(\"triangles\") If LastElementID &lt;&gt; -1 And LastId &gt; LastElementID Then For i = LastElementID + 1 To LastId If ActiveModelReference.GraphicalElementCache.IsElementValid(i) Then Set LastElementTmp = ActiveModelReference.GraphicalElementCache.GetElement(i) If LastElementTmp.Type = msdElementTypeShape And triGrp.GetMember(LastElementTmp) Is Nothing Then LastElementTmp.Color = 7 LastElementTmp.Rewrite triGrp.AddMember LastElementTmp End If End If Next End If triGrp.SelectElements msdMemberTraverseSimpleEnd If CadInputQueue.SendCommand \"FACET MODIFY stitch\" Point.X = 0 Point.Y = 0 Point.Z = 0 CadInputQueue.SendDataPoint Point, 1 CurId = ActiveModelReference.GraphicalElementCache.GetLastValidElement.CacheIndex If LastId &lt;&gt; CurId Then Set LastEle = ActiveModelReference.GraphicalElementCache.GetLastValidElement LastEle.Level = FindLevel(\"三角网\") LastEle.Color = 9 LastEle.Rewrite LastEle.Redraw End IfEnd SubPrivate Sub UserForm_Initialize() Dim i As Long Dim j As Long Dim ModelArray() As String j = ActiveDesignFile.Models.Count ReDim ModelArray(j) For i = 1 To j ModelArray(i) = ActiveDesignFile.Models(i).Name Next BubbleSort ModelArray, j For i = 1 To j If getModelXdata(ActiveDesignFile.Models(ModelArray(i)), \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" And ActiveDesignFile.Models(ModelArray(i)).Is3D Then dxCombo.AddItem ModelArray(i) Next If dxCombo.ListCount = 0 Then 'genTriCom.Enabled = FalseElse 'genTriCom.Enabled = True If getModelXdata(ActiveModelReference, \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" Then dxCombo.Text = ActiveModelReference.Name Else dxCombo.ListIndex = 0 End IfEnd IfLastElementID = -1End Sub" }, { "title": "MicroStation XM 断面处理程序源码-窗体-ExportPointFrm", "url": "/posts/mstn-xm-vba-code-ExportPointFrm-form/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-05-10 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 窗体：ExportPointFrm.frmVERSION 5.00Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} ExportPointFrm Caption = \"地形点导出 (C)SurMap.com 覃东\" ClientHeight = 4170 ClientLeft = 45 ClientTop = 435 ClientWidth = 6240 OleObjectBlob = \"ExportPointFrm.frx\":0000 ShowModal = 0 'False StartUpPosition = 1 '所有者中心EndAttribute VB_Name = \"ExportPointFrm\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = TrueAttribute VB_Exposed = FalsePrivate Sub dxCombo_Change()If Trim(dxCombo.Text) &lt;&gt; \"\" Then If ActiveModelReference.Name &lt;&gt; Trim(dxCombo.Text) Then If FindModel(Trim(dxCombo.Text)) Then ActiveDesignFile.Models(Trim(dxCombo.Text)).Activate End IfEnd IfEnd SubPrivate Sub exOpenFileCom_Click()expCD.DialogTitle = \"导出地形点为数据文件 (C)SurMap.com 覃东\"expCD.Filter = \"地形数据文件(*.dat)|*.dat|文本文件(*.txt)|*.txt|逗号分隔文件(*.csv)|*.csv\"expCD.ShowSaveIf Trim(expCD.FileName) &lt;&gt; \"\" ThenexpFileName.Text = expCD.FileNameEnd IfEnd SubPrivate Sub ExpCom_Click()Dim FileFmt As StringDim SelMethod As Integer If psneh.Value Then FileFmt = \"psneh\" If psenh.Value Then FileFmt = \"psenh\" If pneh.Value Then FileFmt = \"pneh\" If penh.Value Then FileFmt = \"penh\" If neh.Value Then FileFmt = \"neh\" If enh.Value Then FileFmt = \"enh\" If AutoSel.Value Then SelMethod = 1 If ManSel.Value Then SelMethod = 2If Trim(dxCombo.Text) &lt;&gt; \"\" And Trim(expFileName.Text) &lt;&gt; \"\" Then ExportPoints Trim(expFileName.Text), FileFmt, SelMethodEnd SubPrivate Sub UserForm_Initialize() Dim i As Long Dim j As Long Dim ModelArray() As String j = ActiveDesignFile.Models.Count ReDim ModelArray(j) For i = 1 To j ModelArray(i) = ActiveDesignFile.Models(i).Name Next BubbleSort ModelArray, j For i = 1 To j If getModelXdata(ActiveDesignFile.Models(ModelArray(i)), \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" And ActiveDesignFile.Models(ModelArray(i)).Is3D Then dxCombo.AddItem ModelArray(i) Next If dxCombo.ListCount = 0 Then ExpCom.Enabled = FalseElse ExpCom.Enabled = True If getModelXdata(ActiveModelReference, \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" Then dxCombo.Text = ActiveModelReference.Name Else dxCombo.ListIndex = 0 End IfEnd IfEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-窗体-loadPointsFrm", "url": "/posts/mstn-xm-vba-code-loadPointsFrm-form/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-05-09 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 窗体：loadPointsFrm.frmVERSION 5.00Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} loadPointsFrm Caption = \"展点 (C)SurMap.com 覃东\" ClientHeight = 6360 ClientLeft = 45 ClientTop = 435 ClientWidth = 3810 OleObjectBlob = \"loadPointsFrm.frx\":0000 ShowModal = 0 'False StartUpPosition = 1 '所有者中心EndAttribute VB_Name = \"loadPointsFrm\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = TrueAttribute VB_Exposed = FalsePrivate Sub dxCombo_Change()If Trim(dxCombo.Text) &lt;&gt; \"\" Then If ActiveModelReference.Name &lt;&gt; Trim(dxCombo.Text) Then If FindModel(Trim(dxCombo.Text)) Then ActiveDesignFile.Models(Trim(dxCombo.Text)).Activate End IfEnd If' If ActiveModelReference.Name &lt;&gt; Trim(dxCombo.Text) Then' If FindModel(Trim(dxCombo.Text)) And Trim(dxCombo.Text) &lt;&gt; \"\" Then ActiveDesignFile.Models(Trim(dxCombo.Text)).Activate' End IfEnd SubPrivate Sub LoadPointsCom_Click()Dim FileFmt As StringDim zj As StringDim pointXs As IntegerDim pointColor As IntegerDim remarkColor As IntegerDim m As ModelReferenceDim adModelName As StringDim cmScale As String'提取绘图比例cmScale = LoadScalePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")If cmScale = \"\" ThencurScale = 500 / 1000ElsecurScale = cmScale / 1000End If'curScale = 500 / 1000If Trim(dxCombo.Text) &lt;&gt; \"\" Then adModelName = Trim(dxCombo.Text) If Not FindModel(Trim(adModelName)) Then Set m = ActiveDesignFile.Models.Add(ActiveDesignFile.DefaultModelReference, Trim(adModelName), \"地形模型(C)SurMap.com 覃东\", msdModelTypeNormal, True) SetModelXdata m, \"surmap_dx\", msdXDatumTypeString, \"dxmodel\" m.Activate Else ActiveDesignFile.Models(adModelName).Activate End If If psneh.Value Then FileFmt = \"psneh\" If psenh.Value Then FileFmt = \"psenh\" If pneh.Value Then FileFmt = \"pneh\" If penh.Value Then FileFmt = \"penh\" If neh.Value Then FileFmt = \"neh\" If enh.Value Then FileFmt = \"enh\" If pntGc.Value Then zj = \"gc\" If pntDh.Value Then zj = \"dh\" If Trim(pntXs.Text) &lt;&gt; \"\" And IsNumeric(Trim(pntXs.Text)) And Trim(pntXs.Text) &gt; 0 And Trim(pntXs.Text) &lt; 5 Then pointXs = Trim(pntXs.Text) Else pointXs = 1 End If If Trim(pColor.Text) &lt;&gt; \"\" And IsNumeric(Trim(pColor.Text)) And Trim(pColor.Text) &gt;= 0 And Trim(pColor.Text) &lt;= 254 Then pointColor = Trim(pColor.Text) Else pointColor = 0 End If If Trim(rColor.Text) &lt;&gt; \"\" And IsNumeric(Trim(rColor.Text)) And Trim(rColor.Text) &gt;= 0 And Trim(rColor.Text) &lt;= 254 Then remarkColor = Trim(rColor.Text) Else remarkColor = 0 End If If DataFileName.Text &lt;&gt; \"\" Then LoadPoints DataFileName.Text, FileFmt, zj, pointXs, pointColor, remarkColorEnd If CadInputQueue.SendCommand \"FIT VIEW EXTENDED\"End SubPrivate Sub OpenDataFile_Click()Dim FileNum As LongDim DateLine As StringdataOpenDlg.DialogTitle = \"打开地形数据文件 (C)SurMap.com 覃东\"dataOpenDlg.Filter = \"地形数据文件(*.dat)|*.dat|文本文件(*.txt)|*.txt|逗号分隔文件(*.csv)|*.csv\"dataOpenDlg.ShowOpenIf dataOpenDlg.FileName &lt;&gt; \"\" ThenDataFileName = dataOpenDlg.FileName FileNum = FreeFile() Open dataOpenDlg.FileName For Input As FileNum If Not EOF(FileNum) Then Line Input #FileNum, DataLine 'pNum, pX, pY, pH sample = DataLine End If Close FileNumElseDataFileName = \"\"End IfEnd SubPrivate Sub UserForm_Initialize() Dim i As Long Dim j As Long Dim ModelArray() As String j = ActiveDesignFile.Models.Count ReDim ModelArray(j) For i = 1 To j ModelArray(i) = ActiveDesignFile.Models(i).Name Next 'BubbleSort ModelArray, j For i = 1 To j' ComboBox1.AddItem ActiveDesignFile.Models(i).Name ' If getModelXdata(ActiveDesignFile.Models(ModelArray(i)), \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" And ActiveDesignFile.Models(ModelArray(i)).Is3D Then dxCombo.AddItem ModelArray(i) NextEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-窗体-mapLevelFrm", "url": "/posts/mstn-xm-vba-code-mapLevelFrm-form/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-05-08 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 窗体：mapLevelFrm.frmVERSION 5.00Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} mapLevelFrm Caption = \"绘等高线 (C)SurMap.com 覃东\" ClientHeight = 2520 ClientLeft = 45 ClientTop = 435 ClientWidth = 6240 OleObjectBlob = \"mapLevelFrm.frx\":0000 ShowModal = 0 'False StartUpPosition = 1 '所有者中心EndAttribute VB_Name = \"mapLevelFrm\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = TrueAttribute VB_Exposed = FalsePrivate Sub cz1_Click()If cz3.Value ThenSpinBtn.Enabled = TrueCurvPara.Enabled = TrueElseSpinBtn.Enabled = FalseCurvPara.Enabled = FalseEnd IfEnd SubPrivate Sub cz2_Click()If cz3.Value ThenSpinBtn.Enabled = TrueCurvPara.Enabled = TrueElseSpinBtn.Enabled = FalseCurvPara.Enabled = FalseEnd IfEnd SubPrivate Sub cz3_Click()If cz3.Value ThenSpinBtn.Enabled = TrueCurvPara.Enabled = TrueElseSpinBtn.Enabled = FalseCurvPara.Enabled = FalseEnd IfEnd SubPrivate Sub DrawLevelLine_Click() Dim Point As Point3d, point2 As Point3d Dim lngTemp As Long Dim i As Long Dim LevelLine As Long '等高线高程值 Dim curLevel As Level Dim dgxLevel As Level '取对象ID号判断是否生成了新的对象 Dim LastEleId As Long Dim lvlId As Long Dim CvPara As Single Dim sEle As Element Dim cz As Integer '是否插值,1不插,2为中间插值,3为二次插值 Dim sEles Dim sElestr As String Dim lvI As Long Dim Ele2D3D As String'水面高程,等高线等深线颜色Dim WaterLevel As DoubleDim MainLineColor As IntegerDim CountLineColor As IntegerDim WaterLineColor As IntegerCommandState.ErrorMessagesEnabled = FalseCommandState.MessagesEnabled = FalseIf Trim(WaterLevelTxt.Text) &lt;&gt; \"\" And IsNumeric(Trim(WaterLevelTxt.Text)) ThenWaterLevel = Trim(WaterLevelTxt.Text)ElseWaterLevel = 0End IfIf Trim(mlColor.Text) &lt;&gt; \"\" And IsNumeric(Trim(mlColor.Text)) ThenMainLineColor = Int(Trim(mlColor.Text))If MainLineColor &lt; 0 Or MainLineColor &gt; 254 Then MainLineColor = 4ElseMainLineColor = 4End IfIf Trim(ClColor.Text) &lt;&gt; \"\" And IsNumeric(Trim(ClColor.Text)) ThenCountLineColor = Int(Trim(ClColor.Text))If CountLineColor &lt; 0 Or CountLineColor &gt; 254 Then CountLineColor = 4ElseCountLineColor = 2End IfIf Trim(WlColor.Text) &lt;&gt; \"\" And IsNumeric(Trim(WlColor.Text)) ThenWaterLineColor = Int(Trim(WlColor.Text))If WaterLineColor &lt; 0 Or WaterLineColor &gt; 254 Then WaterLineColor = 4ElseWaterLineColor = 3End IfIf Ele2D3Dchk.Value ThenEle2D3D = \"2D\"ElseEle2D3D = \"3D\"End If If cz1.Value Then cz = 1 If cz2.Value Then cz = 2 If cz3.Value Then cz = 3 LastEleId = ActiveModelReference.GraphicalElementCache.GetLastValidElement.CacheIndex CvPara = 0.1 + 0.03 * CurvPara If Trim(dgxDgj.Text) &lt;&gt; \"\" And IsNumeric(Trim(dgxDgj.Text)) Then dgxDist = Int(Trim(dgxDgj.Text)) If dgxDist &lt; 0 Then dgxDist = 5 Else dgxDist = 5 End If Set curLevel = ActiveSettings.Level LevelLine = Int(miniH / dgxDist) * dgxDist CadInputQueue.SendCommand \"CONSTRUCT SECTION PLANE\" 'CadInputQueue.SendCommand \"SECTION CREATE\" If sEleChk.Value = False Then For i = LevelLine To maxH Step dgxDist ' 给当前命令传送一个数据点 Point.X = miniE Point.Y = miniN Point.Z = i CadInputQueue.SendDataPoint Point, 1 Point.X = maxE Point.Y = miniN Point.Z = i CadInputQueue.SendDataPoint Point, 1 Point.X = maxE Point.Y = maxN Point.Z = i CadInputQueue.SendDataPoint Point, 1 Point.X = miniE Point.Y = maxN Point.Z = i CadInputQueue.SendDataPoint Point, 1 CadInputQueue.SendReset NextElsesElestr = Replace(Trim(sEleList.Text), \" \", \",\") ' If InStr(sElestr, \",\") &lt;&gt; 0 Then sEles = Split(sElestr, \",\") For lvI = 0 To UBound(sEles) If sEles(lvI) &lt;&gt; \"\" Then Point.X = miniE Point.Y = miniN Point.Z = sEles(lvI) CadInputQueue.SendDataPoint Point, 1 Point.X = maxE Point.Y = miniN Point.Z = sEles(lvI) CadInputQueue.SendDataPoint Point, 1 Point.X = maxE Point.Y = maxN Point.Z = sEles(lvI) CadInputQueue.SendDataPoint Point, 1 Point.X = miniE Point.Y = maxN Point.Z = sEles(lvI) CadInputQueue.SendDataPoint Point, 1 CadInputQueue.SendReset End If Next ' End IfEnd IfActiveSettings.Level = curLevelSplineLevelLine_closed CvPara, cz, WaterLevel, MainLineColor, CountLineColor, WaterLineColor, Ele2D3DSplineLevelLine_open CvPara, cz, WaterLevel, MainLineColor, CountLineColor, WaterLineColor, Ele2D3DCommandState.MessagesEnabled = TrueCommandState.ErrorMessagesEnabled = TrueCommandState.StartDefaultCommandEnd SubPrivate Sub dxCombo_Change()Dim fw As StringDim fw2If Trim(dxCombo.Text) &lt;&gt; \"\" Then If ActiveModelReference.Name &lt;&gt; Trim(dxCombo.Text) Then If FindModel(Trim(dxCombo.Text)) Then ActiveDesignFile.Models(Trim(dxCombo.Text)).Activate End IfEnd Iffw = getModelXdata(ActiveModelReference, \"surmap_fw\", msdXDatumTypeString)If Trim(fw) &lt;&gt; \"\" Thenfw2 = Split(fw, \",\") If UBound(fw2) &gt; 1 Then DrawLevelLine.Enabled = True miniN = fw2(0) miniE = fw2(1) miniH = fw2(2) maxN = fw2(3) maxE = fw2(4) maxH = fw2(5) End IfElse miniN = 0 miniE = 0 miniH = 0 maxN = 0 maxE = 0 maxH = 0 DrawLevelLine.Enabled = FalseEnd IfEnd SubPrivate Sub sEleChk_Click()If sEleChk.Value = True ThensEleList.Enabled = TrueElsesEleList.Enabled = FalseEnd IfEnd SubPrivate Sub SpinBtn_Change()CurvPara = Format(SpinBtn.Value, \"0\")End SubPrivate Sub UserForm_Initialize()Dim fw As StringDim fw2 Dim i As Long Dim j As Long Dim ModelArray() As String j = ActiveDesignFile.Models.Count ReDim ModelArray(j) For i = 1 To j ModelArray(i) = ActiveDesignFile.Models(i).Name Next BubbleSort ModelArray, j For i = 1 To j If getModelXdata(ActiveDesignFile.Models(ModelArray(i)), \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" And ActiveDesignFile.Models(ModelArray(i)).Is3D Then dxCombo.AddItem ModelArray(i) Next If dxCombo.ListCount = 0 Then DrawLevelLine.Enabled = FalseElse DrawLevelLine.Enabled = True If getModelXdata(ActiveModelReference, \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" Then dxCombo.Text = ActiveModelReference.Name Else dxCombo.ListIndex = 0 End IfEnd Iffw = getModelXdata(ActiveModelReference, \"surmap_fw\", msdXDatumTypeString)If Trim(fw) &lt;&gt; \"\" Thenfw2 = Split(fw, \",\") If UBound(fw2) &gt; 1 Then DrawLevelLine.Enabled = True miniN = fw2(0) miniE = fw2(1) miniH = fw2(2) maxN = fw2(3) maxE = fw2(4) maxH = fw2(5) End IfElse miniN = 0 miniE = 0 miniH = 0 maxN = 0 maxE = 0 maxH = 0 DrawLevelLine.Enabled = FalseEnd IfEnd SubPrivate Sub UserForm_Layout()SpinBtn.Value = CurvParaEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-窗体-TrianglesFrm", "url": "/posts/mstn-xm-vba-code-TrianglesFrm-form/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-04-01 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 窗体：TrianglesFrm.frmVERSION 5.00Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} TrianglesFrm Caption = \"生成三角网 (C)SurMap.com 覃东\" ClientHeight = 1710 ClientLeft = 45 ClientTop = 435 ClientWidth = 6900 OleObjectBlob = \"TrianglesFrm.frx\":0000 ShowModal = 0 'False StartUpPosition = 1 '所有者中心EndAttribute VB_Name = \"TrianglesFrm\"Attribute VB_GlobalNameSpace = FalseAttribute VB_Creatable = FalseAttribute VB_PredeclaredId = TrueAttribute VB_Exposed = FalsePrivate Sub dxCombo_Change()If Trim(dxCombo.Text) &lt;&gt; \"\" Then If ActiveModelReference.Name &lt;&gt; Trim(dxCombo.Text) Then If FindModel(Trim(dxCombo.Text)) Then ActiveDesignFile.Models(Trim(dxCombo.Text)).Activate End IfEnd If' If ActiveModelReference.Name &lt;&gt; Trim(dxCombo.Text) Then' If FindModel(Trim(dxCombo.Text)) And Trim(dxCombo.Text) &lt;&gt; \"\" Then ActiveDesignFile.Models(Trim(dxCombo.Text)).Activate' End IfEnd SubPrivate Sub genTriCom_Click()If AutoSel.Value = True Then DrawTriangles 1If ManSel.Value = True Then DrawTriangles 2End SubPrivate Sub UserForm_Initialize() Dim i As Long Dim j As Long Dim ModelArray() As String j = ActiveDesignFile.Models.Count ReDim ModelArray(j) For i = 1 To j ModelArray(i) = ActiveDesignFile.Models(i).Name Next BubbleSort ModelArray, j For i = 1 To j If getModelXdata(ActiveDesignFile.Models(ModelArray(i)), \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" And ActiveDesignFile.Models(ModelArray(i)).Is3D Then dxCombo.AddItem ModelArray(i) Next If dxCombo.ListCount = 0 Then genTriCom.Enabled = FalseElse genTriCom.Enabled = True If getModelXdata(ActiveModelReference, \"surmap_dx\", msdXDatumTypeString) = \"dxmodel\" Then dxCombo.Text = ActiveModelReference.Name Else dxCombo.ListIndex = 0 End IfEnd IfEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-模块-BarCode", "url": "/posts/mstn-xm-vba-code-bar-bas/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-03-12 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 模块名：BarCode.basAttribute VB_Name = \"BarCode\"Dim miniX As DoubleDim miniY As DoubleDim maxX As DoubleDim maxY As DoubleSub DelSingleBar()Dim dbModel As ModelReferenceDim dbEle As ElementDim dbEe As ElementEnumeratorSet dbModel = ActiveModelReference Set dbEe = dbModel.GraphicalElementCache.Scan Do While dbEe.MoveNext Set dbEle = dbEe.Current dbEle.IsLocked = False If dbEle.HasXData(\"(C)SurMap.com BarCreator\") Then dbModel.RemoveElement dbEle LoopEnd SubSub DelAllBar()Dim dbModel As ModelReferenceDim dbEle As ElementDim dbEe As ElementEnumeratorFor Each dbModel In ActiveDesignFile.Models Set dbEe = dbModel.GraphicalElementCache.Scan Do While dbEe.MoveNext Set dbEle = dbEe.Current dbEle.IsLocked = False If dbEle.HasXData(\"(C)SurMap.com BarCreator\") Then dbModel.RemoveElement dbEle LoopNextEnd SubSub CrtSingleBar()Dim cmModel As ModelReferenceDim cmScale As StringDim cmSide As IntegerDim cmGrid As BooleanDim cmPaperWidth As IntegerDim cmPaperHeight As IntegerDim cmFullGrid As BooleancmGrid = LoadGridPara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")cmScale = LoadScalePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")cmSide = LoadSidePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")If cmScale = \"\" Then cmScale = \"500\"If cmSide = 0 Then cmSide = -1gAppName = \"(C)SurMap.com BarCreator\"'For Each cmModel In ActiveDesignFile.ModelsSet cmModel = ActiveModelReference'If cmModel.Name &lt;&gt; \"Default\" ThenActiveDesignFile.Views(1).DisplaysFill = TrueViewArea cmModel'调整图纸cmFullGrid = LoadFullGridPara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")If cmGrid And cmFullGrid ThenDeterminePaper ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\", cmPaperWidth, cmPaperHeightcmPaperWidth = cmPaperWidth - 60cmPaperHeight = cmPaperHeight - 50 If cmPaperWidth / 10 * Val(cmScale) / 100 &gt; (maxX - miniX) And cmPaperHeight / 10 * Val(cmScale) / 100 &gt; (maxY - miniY) Then miniX = miniX - (cmPaperWidth / 10 * Val(cmScale) / 100 - (maxX - miniX)) / 2 miniY = miniY - (cmPaperHeight / 10 * Val(cmScale) / 100 - (maxY - miniY)) / 2 maxX = miniX + cmPaperWidth / 10 * Val(cmScale) / 100 maxY = miniY + cmPaperHeight / 10 * Val(cmScale) / 100 End IfEnd If'调整图纸crtBar cmModel, miniX, miniY, maxX - miniX, maxY - miniY, Val(cmScale), cmSide, cmGrid, \"标尺_\" &amp; cmScale, \"宋体\", 2, 2'crtBar cmModel, -135, 253, 200, 200, 500, 1, False, \"标尺\", \"宋体\", 2, 2'End If'NextEnd SubSub CrtAllBar()Dim cmModel As ModelReferenceDim cmScale As StringDim cmSide As IntegerDim cmGrid As BooleanDim cmPaperWidth As IntegerDim cmPaperHeight As IntegerDim cmFullGrid As BooleancmGrid = LoadGridPara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")cmScale = LoadScalePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")cmSide = LoadSidePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")If cmScale = \"\" Then cmScale = \"500\"If cmSide = 0 Then cmSide = -1gAppName = \"(C)SurMap.com BarCreator\"For Each cmModel In ActiveDesignFile.ModelsIf cmModel.Name &lt;&gt; \"Default\" And getModelXdata(cmModel, \"surmap_dx\", msdXDatumTypeString) &lt;&gt; \"dxmodel\" ThenViewArea cmModel'调整图纸cmFullGrid = LoadFullGridPara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\")If cmGrid And cmFullGrid ThenDeterminePaper ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\", cmPaperWidth, cmPaperHeightcmPaperWidth = cmPaperWidth - 60cmPaperHeight = cmPaperHeight - 50 If cmPaperWidth / 10 * Val(cmScale) / 100 &gt; (maxX - miniX) And cmPaperHeight / 10 * Val(cmScale) / 100 &gt; (maxY - miniY) Then miniX = miniX - (cmPaperWidth / 10 * Val(cmScale) / 100 - (maxX - miniX)) / 2 miniY = miniY - (cmPaperHeight / 10 * Val(cmScale) / 100 - (maxY - miniY)) / 2 maxX = miniX + cmPaperWidth / 10 * Val(cmScale) / 100 maxY = miniY + cmPaperHeight / 10 * Val(cmScale) / 100 End IfEnd If'调整图纸crtBar cmModel, miniX, miniY, maxX - miniX, maxY - miniY, Val(cmScale), cmSide, cmGrid, \"标尺_\" &amp; cmScale, \"宋体\", 2, 2'crtBar cmModel, -135, 253, 200, 200, 500, 1, False, \"标尺\", \"宋体\", 2, 2End IfNextEnd Sub'创建标尺参数：左、右、宽、高、比例（整数分母）、左右侧（L or R）、网格（真或否）,字体样式名,字体名,字宽(毫米),字高(毫米),Sub crtBar(bModel As ModelReference, bLeft As Double, bBottom As Double, bWidth As Double, bHeight As Double, bScale As Integer, bSide As Integer, bGrid As Boolean, bTextStyleName As String, bFontName As String, bFontWidth_mm As Single, bFontHeight_mm As Single)Dim cbLevel As Level '绘标尺的层名Dim cbStep As Integer '步长Dim cbWeight As Single '竖标尺的宽度Dim cbLeft As IntegerDim cbBottom As IntegerDim cbWidth As Integer '宽度Dim cbHeight As Integer'循环次数Dim cbVtime As IntegerDim cbHtime As IntegerDim cbI As IntegerDim cbVpoints(3) As Point3dDim cbModel As ModelReferenceDim cbShp As ShapeElementDim cbText As TextElementDim cbLineEle As LineElement '水平线Dim cbLineStart As Point3dDim cbLineEnd As Point3dDim cbFontWidth As SingleDim cbFontHeight As Single'临时变量Dim cTmpLeft As DoubleDim cTmpBottom As DoubleDim cTmpRight As DoubleDim cTmpUp As DoubleDim cTmpVtag As Point3d '高程注记位置Dim cTmpHtag As Point3d '水平距离注记'断面桩号等信息Dim ProInfo As StringDim ProInfoPosition As Point3d'网格线Dim cTmpGridHStart As Point3d '水平Dim cTmpGridHEnd As Point3dDim cTmpGridHLine As LineElementDim cTmpGridVStart As Point3d '竖直Dim cTmpGridVEnd As Point3dDim cTmpGridVLine As LineElementSet cbLevel = FindLevel(\"断面标尺\")cbStep = Int(bScale / 100)cbWeight = 0.2 * cbStepcbLeft = (Int(bLeft / cbStep) - 1) * cbStepcbWidth = (Round(bWidth / cbStep, 0) + 2) * cbStepcbBottom = (Int(bBottom / cbStep) - 1) * cbStepcbHeight = (Round(bHeight / cbStep, 0) + 2) * cbStepcbVtime = cbHeight / cbStepcbHtime = cbWidth / cbStep'字高,将以mm为单位的字高换算为绘图单位cbFontWidth = bFontWidth_mm / 10 * cbStepcbFontHeight = bFontHeight_mm / 10 * cbStepSet cbModel = bModelFor cbI = 1 To cbVtimeIf bSide &lt;= 0 ThencTmpLeft = cbLeftcTmpRight = cTmpLeft + cbWeightElsecTmpLeft = cbLeft + cbWidth - cbWeightcTmpRight = cTmpLeft + cbWeightEnd IfcTmpBottom = (cbI - 1) * cbStep + cbBottomcTmpUp = cTmpBottom + cbStepcbVpoints(0).X = cTmpLeftcbVpoints(0).Y = cTmpBottomcbVpoints(1).X = cTmpRightcbVpoints(1).Y = cTmpBottomcbVpoints(2).X = cTmpRightcbVpoints(2).Y = cTmpUpcbVpoints(3).X = cTmpLeftcbVpoints(3).Y = cTmpUp'======================='竖标尺If cbI Mod 2 = 0 ThenSet cbShp = CreateShapeElement1(Nothing, cbVpoints, msdFillModeFilled)ElseSet cbShp = CreateShapeElement1(Nothing, cbVpoints, msdFillModeNotFilled)'竖标尺'======================='***********************'======================='调整高程注记与竖标尺的间距在此'竖标尺注记cTmpVtag = cbVpoints(2)If bSide &lt;= 0 ThencTmpVtag.X = cTmpVtag.X + 0.1 * cbStep '与竖标尺的间距,0.1为0.1公分,cbStep分图上一公分所对应的绘图长度ElsecTmpVtag.X = cTmpVtag.X - 0.1 * cbStep - cbFontWidth * 3 '与竖标尺的间距,0.1为0.1公分,cbStep分图上一公分所对应的绘图长度End IfcTmpVtag.Y = cTmpVtag.Y + cbFontHeightSet cbText = CreateTextElement1(Nothing, cTmpUp, cTmpVtag, Matrix3dIdentity)End If'调整高程注记与竖标尺的间距在此'竖标尺注记'======================= cbShp.LineStyle = ActiveDesignFile.LineStyles(\"0\") cbShp.Level = cbLevel cbShp.FillColor = 0 SetElementXdata cbShp, gAppName, msdXDatumTypeString, \"Type:Bar\" '锁定并禁止捕捉 cbShp.IsLocked = True cbShp.IsSnappable = False cbModel.AddElement cbShp cbShp.Rewrite cbShp.Redraw Set cbText.TextStyle = adTextStyle(bTextStyleName, bFontName, cbFontWidth, cbFontHeight) cbText.Level = cbLevel cbText.Color = 0 SetElementXdata cbText, gAppName, msdXDatumTypeString, \"Type:Bar\" '锁定并禁止捕捉' cbText.IsLocked = True' cbText.IsSnappable = False cbModel.AddElement cbText cbText.Rewrite cbText.Redraw '网络线:水平线###################### If bGrid Then If bSide = -1 Then '标尺在左侧时 cTmpGridHStart.X = cTmpRight cTmpGridHEnd.X = cTmpRight + cbWidth - cbWeight Else '标尺在右侧时 cTmpGridHStart.X = cbLeft cTmpGridHEnd.X = cbLeft + cbWidth - cbWeight End If cTmpGridHStart.Y = cTmpUp cTmpGridHEnd.Y = cTmpUp Set cTmpGridHLine = CreateLineElement2(Nothing, cTmpGridHStart, cTmpGridHEnd) cTmpGridHLine.LineStyle = ActiveDesignFile.LineStyles(\"0\") cTmpGridHLine.Level = cbLevel cTmpGridHLine.Color = 64 SetElementXdata cTmpGridHLine, gAppName, msdXDatumTypeString, \"Type:Bar\" '锁定并禁止捕捉 cTmpGridHLine.IsLocked = True cTmpGridHLine.IsSnappable = False cbModel.AddElement cTmpGridHLine cTmpGridHLine.Redraw cTmpGridHLine.Rewrite End If '网络线:水平线######################Next '********************** '水平标尺 If bSide &lt;= 0 Then '竖标尺在左边 cbLineStart.X = cbLeft + cbWeight cbLineStart.Y = cbBottom cbLineEnd.X = cbLeft + cbWidth cbLineEnd.Y = cbBottom Else '竖标尺在右边 cbLineStart.X = cbLeft cbLineStart.Y = cbBottom cbLineEnd.X = cbLineStart.X + cbWidth - cbWeight cbLineEnd.Y = cbBottom End If Set cbLineEle = CreateLineElement2(Nothing, cbLineStart, cbLineEnd) SetElementXdata cbLineEle, gAppName, msdXDatumTypeString, \"Type:Bar\" cbLineEle.LineStyle = ActiveDesignFile.LineStyles(\"0\") cbLineEle.Level = cbLevel '锁定并禁止捕捉 cbLineEle.IsLocked = True cbLineEle.IsSnappable = False cbModel.AddElement cbLineEle cbLineEle.Rewrite cbLineEle.Redraw '水平标尺 '**********************For cbI = 1 To cbHtimeIf bSide &lt;= 0 Then'左cbLineStart.X = cbLeft + cbI * cbStepcbLineEnd.X = cbLeft + cbI * cbStepElse'右cbLineStart.X = cbLeft + (cbI - 1) * cbStepcbLineEnd.X = cbLeft + (cbI - 1) * cbStepEnd IfcbLineStart.Y = cbBottomcbLineEnd.Y = cbBottom + 0.2 * cbStepSet cbLineEle = CreateLineElement2(Nothing, cbLineStart, cbLineEnd)cbModel.AddElement cbLineEleSetElementXdata cbLineEle, gAppName, msdXDatumTypeString, \"Type:Bar\"'锁定并取消捕捉cbLineEle.Level = cbLevelcbLineEle.LineStyle = ActiveDesignFile.LineStyles(\"0\")cbLineEle.IsLocked = TruecbLineEle.IsSnappable = FalsecbLineEle.RewritecbLineEle.Redraw'水平距离注记位置cTmpHtag.X = cbLineStart.X - cbFontWidthcTmpHtag.Y = cbLineEnd.Y + 0.1 * cbStep + cbFontHeightSet cbText = CreateTextElement1(Nothing, cbLineStart.X, cTmpHtag, Matrix3dIdentity)Set cbText.TextStyle = adTextStyle(bTextStyleName, bFontName, cbFontWidth, cbFontHeight)SetElementXdata cbText, gAppName, msdXDatumTypeString, \"Type:Bar\"cbText.Level = cbLevelcbText.Color = 0'锁定并取消捕捉'cbText.IsLocked = True'cbText.IsSnappable = FalsecbModel.AddElement cbTextcbText.RewritecbText.Redraw'网络线:竖直线######################If bGrid ThencTmpGridVStart.X = cbLineStart.XcTmpGridVStart.Y = cTmpHtag.YcTmpGridVEnd.X = cbLineStart.XcTmpGridVEnd.Y = cTmpHtag.Y + cbHeight - 0.3 * cbStep - cbFontHeightSet cTmpGridVLine = CreateLineElement2(Nothing, cTmpGridVStart, cTmpGridVEnd)cTmpGridVLine.Level = cbLevelcTmpGridVLine.Color = 64SetElementXdata cTmpGridVLine, gAppName, msdXDatumTypeString, \"Type:Bar\"'锁定并取消捕捉cTmpGridVLine.LineStyle = ActiveDesignFile.LineStyles(\"0\")cTmpGridVLine.IsLocked = TruecTmpGridVLine.IsSnappable = FalsecbModel.AddElement cTmpGridVLinecTmpGridVLine.RewritecTmpGridVLine.RedrawEnd If'网络线:竖直线######################NextProInfo = \"桩号:\" &amp; cbModel.Name &amp; \" 比例:1:\" &amp; cbStep * 100ProInfoPosition.X = cbLeft + (cbWidth - Len(ProInfo) * 0.3 * cbStep) / 2ProInfoPosition.Y = cbBottom + cbHeight + 0.5 * cbStep '桩号放在上面'ProInfoPosition.Y = cbBottom - 0.1 * cbStep '桩号放在下面Set cbText = CreateTextElement1(Nothing, ProInfo, ProInfoPosition, Matrix3dIdentity)cbModel.AddElement cbTextSet cbText.TextStyle = adTextStyle(bTextStyleName, bFontName, cbFontWidth, cbFontHeight)SetElementXdata cbText, gAppName, msdXDatumTypeString, \"Type:Bar\"cbText.TextStyle.Height = 0.4 * cbStepcbText.TextStyle.Width = 0.4 * cbStepcbText.Color = 0cbText.Level = cbLevelcbText.RewritecbText.RedrawEnd Sub'Sub TestTextStyle()'adTextStyle \"覃\", \"宋体\", 10, 10'End Sub'查找并设置文本样式格式'参数:样式名、字体名、高度、宽度'若样式不存在则创建，若存在则设置'Function adTextStyle(txtStyleName As String, txtFontName As String, txtStyleHeight As Single, txtStyleWidth As Single) As TextStyle'Dim aTextStyle As TextStyle'Set aTextStyle = ActiveDesignFile.TextStyles.Find(txtStyleName)'If aTextStyle Is Nothing Then'Set aTextStyle = ActiveDesignFile.TextStyles.Add(Nothing, txtStyleName)'aTextStyle.Height = txtStyleHeight'aTextStyle.Width = txtStyleWidth'aTextStyle.Font = FindFontByName(txtFontName)''Else''aTextStyle.Height = txtStyleHeight''aTextStyle.Width = txtStyleWidth''aTextStyle.Font = FindFontByName(txtFontName)'End If'Set adTextStyle = aTextStyle'End FunctionFunction FindFontByName(fFontName As String) As FontDim fFonts As FontsDim fFont As FontSet FindFontByName = NothingSet fFonts = ActiveDesignFile.FontsFor Each fFont In fFontsIf fFont.Name = fFontName Then Set FindFontByName = fFontNextEnd Function'********************查找绘图范围(只处理直线对象)**************Sub ViewArea(vaModel As ModelReference)Dim m As ModelReferenceDim Ee As ElementEnumeratorDim Ele As LineElementminiX = 1E+15miniY = 1E+15maxX = -1E+15maxY = -1E+15Set m = vaModelSet Ee = m.GraphicalElementCache.Scan Do While Ee.MoveNext If Ee.Current.Type = msdElementTypeLine Or Ee.Current.Type = msdElementTypeLineString Then If Ee.Current.Level.IsEffectivelyDisplayedInView(ActiveDesignFile.Views(1)) Then Set Ele = Ee.Current MiniMax Ele End If End If Loop'ShowMessage miniX &amp; \" \" &amp; miniY &amp; \" \" &amp; maxX &amp; \" \" &amp; maxYEnd SubSub MiniMax(Ele As LineElement)Dim tEle As LineElementDim vPoints() As Point3dDim i As LongvPoints = Ele.GetVerticesFor i = LBound(vPoints) To UBound(vPoints)If vPoints(i).X &lt; miniX Then miniX = vPoints(i).XIf vPoints(i).Y &lt; miniY Then miniY = vPoints(i).YIf vPoints(i).X &gt; maxX Then maxX = vPoints(i).XIf vPoints(i).Y &gt; maxY Then maxY = vPoints(i).YNextEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-模块-CalString", "url": "/posts/mstn-xm-vba-code-CalString-bas/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-03-12 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 模块名：CalString.basAttribute VB_Name = \"CalString\"Option ExplicitFunction Calc(ByVal Exp As String) Dim L As Integer, R As Integer, FN As String, Fv '将空格删除 Exp = Replace(Exp, \" \", \"\") Calc = CalCulNext(Exp)End FunctionPrivate Sub GetMatchExp(ByVal Exp As String, LF As String, RF As String, Lp As Integer, Rp As Integer) '从表达式中,查找匹配起始位置 Dim strT As String Rp = InStr(Exp, RF) If Rp = 0 Then Lp = 0 Else strT = Left(Exp, Rp - 1) strT = StrReverse(strT) Lp = Rp - InStr(strT, LF) End IfEnd SubFunction CalCulNext(ByVal Exp As String) As String '本函数可以计算一个完整的表达式，调用前保证去掉所有空格 '计算表达式中最优先的一步 Dim Lp As Integer, Rp As Integer, Mp As Integer, FirstNum As String, SecondNum As String Call GetMatchExp(Exp, \"(\", \")\", Lp, Rp) If Lp * Rp = 0 Then '没有括弧 Mp = FirstOperater(Exp) '可用的操作符位置 If Mp = 0 Then '没有运算符 CalCulNext = Exp Else FirstNum = GetOpNum(Exp, Mp, True) SecondNum = GetOpNum(Exp, Mp, False) CalCulNext = CalCulNext(Mid(Exp, 1, Mp - Len(FirstNum) - 1) &amp; CStr(DirectCalValue(FirstNum, SecondNum, Mid(Exp, Mp, 1))) &amp; Right(Exp, Len(Exp) - (Mp + Len(SecondNum)))) End If Else '有括弧 FirstNum = Left(Exp, Lp - 1) SecondNum = Right(Exp, Len(Exp) - Rp) CalCulNext = CalCulNext(FirstNum &amp; CalCulNext(Mid(Exp, Lp + 1, Rp - Lp - 1)) &amp; SecondNum) End IfEnd FunctionPrivate Function GetOpNum(ByVal Exp As String, ByVal OperPosition As Integer, ByVal AtLeft As Boolean) As String'从表达式中取出指定操作符左或右侧的操作数 Dim i As Integer, pStep As Integer, j As Integer, Ch As String j = OperPosition If AtLeft Then i = 1 pStep = -1 Else i = Len(Exp) pStep = 1 j = j + 1 End If For j = j + pStep To i Step pStep Ch = Mid(Exp, j, 1) If Not (Ch &gt;= \"0\" And Ch &lt;= \"9\" Or Ch = \".\") Then ' i = j - pStep Exit For End If Next j If AtLeft Then j = OperPosition If i &gt; 1 Then If Mid(Exp, i - 1, 1) = \"-\" Then If i = 2 Then '不是第一个字符,检查数字前有无负号 i = 1 ElseIf i &gt; 2 Then Ch = Mid(Exp, i - 2, 1) If Not (Ch &gt;= \"0\" And Ch &lt;= \"9\" Or Ch = \".\") Then i = i - 1 End If End If End If End If Else j = i + 1 i = OperPosition + 1 End If GetOpNum = Mid(Exp, i, j - i)End FunctionPrivate Function DirectCalValue(FirstV As String, SecondV As String, op As String)'用操作符计算两个操作数 Dim t1 As Double, t2 As Double t1 = Val(FirstV): t2 = Val(SecondV) Select Case op Case \"+\" t1 = t1 + t2 Case \"-\" t1 = t1 - t2 Case \"*\" t1 = t1 * t2 Case \"/\" t1 = t1 / t2 Case Else Exit Function End Select DirectCalValue = CStr(Format(t1, \"#.#######################\"))End FunctionPrivate Function FirstOperater(ByVal Exp As String) As Integer'返回指定表达式字符串中下一步可最先计算的操作符位置 Dim P1 As Integer, P2 As Integer P1 = InStr(Exp, \"*\") P2 = InStr(Exp, \"/\") GoSub SubFun '从子程序返回,则没有 * / 符号 P1 = InStr(Exp, \"+\") P2 = InStr(2, Exp, \"-\") '从子程序返回,则没有 + - 符号 GoSub SubFun FirstOperater = 0 Exit FunctionSubFun: If P1 * P2 = 0 Then If P1 + P2 &lt;&gt; 0 Then FirstOperater = P1 + P2 Exit Function End If Else If P1 &gt; P2 Then P1 = P2 FirstOperater = P1 Exit Function End If ReturnEnd Function" }, { "title": "MicroStation XM 断面处理程序源码-模块-CommFunction", "url": "/posts/mstn-xm-vba-code-CommFunction-bas/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-03-11 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 模块名：CommFunction.basAttribute VB_Name = \"CommFunction\"Public gAppName As StringPublic RegOk As Boolean '注册状态'编辑断面线属性时返回所选择的对象和状态Public lpSelected As BooleanPublic lpLineElement As ElementPublic lpLineID As String'Public gScale As String'Public gSide As Integer'作用:查找层,若不存在则创建层'返回值:层对象'参数:层名,字符串类型Function FindLevel(LvName As String) As Level Dim fLevel As Level Set fLevel = ActiveDesignFile.Levels.Find(LvName) If fLevel Is Nothing Then Set FindLevel = ActiveDesignFile.AddNewLevel(LvName) ActiveDesignFile.RewriteLevels Else Set FindLevel = fLevel End IfEnd FunctionSub ExportStage()Dim epModel As ModelReferenceDim epFileNumber As LongDim epI As LongepFileNumber = FreeFileOpen \"C:\\stage.txt\" For Output As #epFileNumberFor Each epModel In ActiveDesignFile.ModelsPrint #epFileNumber, epModel.NameNextClose #epFileNumberEnd SubSub SetElementXdata(xdEle As Element, xdAppName As String, xdType As MsdXDatumType, xdValue)Dim Xdata() As XDatumIf xdEle.HasAnyXData ThenXdata = xdEle.GetXData(xdAppName)End If 'AppendXDatum Xdata, msdXDatumTypeControlString, \"{\" AppendXDatum Xdata, xdType, xdValue 'AppendXDatum Xdata, msdXDatumTypeControlString, \"}\"xdEle.SetXData xdAppName, XdataEnd Sub'设置模型的扩展数据Sub SetModelXdata(xdModel As ModelReference, xdAppName As String, xdType As MsdXDatumType, xdValue)Dim Xdata() As XDatumDim xd_i As IntegerIf xdModel.HasXData(xdAppName) Then Xdata = xdModel.GetXData(xdAppName) For xd_i = LBound(Xdata) To UBound(Xdata) With Xdata(xd_i) If .Type = xdType Then .Value = xdValue End With NextElse 'AppendXDatum Xdata, msdXDatumTypeControlString, \"{\" AppendXDatum Xdata, xdType, xdValue 'AppendXDatum Xdata, msdXDatumTypeControlString, \"}\"End IfxdModel.SetXData xdAppName, XdataEnd Sub'得到模型的扩展数据Function getModelXdata(xdModel As ModelReference, xdAppName As String, xdType As MsdXDatumType)Dim Xdata() As XDatumDim xd_i As IntegerIf xdModel.HasXData(xdAppName) Then Xdata = xdModel.GetXData(xdAppName) For xd_i = LBound(Xdata) To UBound(Xdata) With Xdata(xd_i) If .Type = xdType Then getModelXdata = .Value End With NextElsegetModelXdata = \"\"End IfEnd FunctionFunction LoadScalePara(ldModel As ModelReference, ldAppName As String) As StringDim paraDim strXdata As String strXdata = getModelXdata(ldModel, ldAppName, msdXDatumTypeString) If strXdata &lt;&gt; \"\" Then para = Split(strXdata, \"|\") LoadScalePara = para(0) Else LoadScalePara = \"\" End IfEnd FunctionFunction LoadSidePara(ldModel As ModelReference, ldAppName As String) As IntegerDim paraDim strXdata As String strXdata = getModelXdata(ldModel, ldAppName, msdXDatumTypeString) If strXdata &lt;&gt; \"\" Then para = Split(strXdata, \"|\") LoadSidePara = Val(para(1)) Else LoadSidePara = 0 End IfEnd FunctionFunction LoadGridPara(ldModel As ModelReference, ldAppName As String) As BooleanDim paraDim strXdata As String strXdata = getModelXdata(ldModel, ldAppName, msdXDatumTypeString) If strXdata &lt;&gt; \"\" Then para = Split(strXdata, \"|\") If para(2) = \"True\" Then LoadGridPara = True Else LoadGridPara = False End If Else LoadGridPara = False End IfEnd FunctionFunction LoadFullGridPara(ldModel As ModelReference, ldAppName As String) As BooleanDim paraDim strXdata As String strXdata = getModelXdata(ldModel, ldAppName, msdXDatumTypeString) If strXdata &lt;&gt; \"\" Then para = Split(strXdata, \"|\") If para(3) = \"True\" Then LoadFullGridPara = True Else LoadFullGridPara = False End If Else LoadFullGridPara = False End IfEnd FunctionFunction LoadPaperPara(ldModel As ModelReference, ldAppName As String) As StringDim paraDim strXdata As String strXdata = getModelXdata(ldModel, ldAppName, msdXDatumTypeString) If strXdata &lt;&gt; \"\" Then para = Split(strXdata, \"|\") If para(4) = \"A4\" Then LoadPaperPara = \"A4\" If para(4) = \"A3\" Then LoadPaperPara = \"A3\" Else LoadPaperPara = \"A4\" End IfEnd FunctionFunction LoadPaperWidthPara(ldModel As ModelReference, ldAppName As String) As StringDim paraDim strXdata As String strXdata = getModelXdata(ldModel, ldAppName, msdXDatumTypeString) If strXdata &lt;&gt; \"\" Then para = Split(strXdata, \"|\") LoadPaperWidthPara = para(5) Else LoadPaperWidthPara = \"210\" End IfEnd FunctionFunction LoadPaperHeightPara(ldModel As ModelReference, ldAppName As String) As StringDim paraDim strXdata As String strXdata = getModelXdata(ldModel, ldAppName, msdXDatumTypeString) If strXdata &lt;&gt; \"\" Then para = Split(strXdata, \"|\") LoadPaperHeightPara = para(6) Else LoadPaperHeightPara = \"297\" End IfEnd FunctionFunction LoadPaperOrientationPara(ldModel As ModelReference, ldAppName As String) As StringDim paraDim strXdata As String strXdata = getModelXdata(ldModel, ldAppName, msdXDatumTypeString) If strXdata &lt;&gt; \"\" Then para = Split(strXdata, \"|\") LoadPaperOrientationPara = para(7) Else LoadPaperOrientationPara = \"H\" End IfEnd Function'确定选择的纸张Sub DeterminePaper(dModel As ModelReference, dAppName As String, dPaperWidth As Integer, dPaperHeight As Integer)Dim dpPaper As StringDim dpPaperWidth As StringDim dpPaperHeight As StringDim dpPaperOrien As StringdpPaperWidth = LoadPaperWidthPara(dModel, dAppName)dpPaperHeight = LoadPaperHeightPara(dModel, dAppName)dpPaperOrien = LoadPaperOrientationPara(dModel, dAppName)If dpPaperOrien = \"H\" ThendPaperWidth = Val(dpPaperHeight)dPaperHeight = Val(dpPaperWidth)ElsedPaperWidth = Val(dpPaperWidth)dPaperHeight = Val(dpPaperHeight)End IfEnd SubFunction MakeProfileLineID() As StringRandomize (Timer())MakeProfileLineID = Format(Date, \"yyyymmdd\") &amp; \"_\" &amp; Format(Time(), \"hhmm\") &amp; \"_\" &amp; Int(Rnd() * 100000#)End FunctionSub DelLine(dlModel As ModelReference, dlAppName As String, dlLineID As String)Dim dlEe As ElementEnumeratorSet dlEe = dlModel.GraphicalElementCache.ScanDo While dlEe.MoveNext If dlEe.Current.HasXData(dlAppName) And DetectEleID(dlEe.Current, dlAppName, dlLineID) Then dlModel.RemoveElement dlEe.Current End IfLoopEnd SubSub DelLineAll(dlAppName As String, dlLineID As String)Dim dlEe As ElementEnumeratorDim dlModel As ModelReferenceFor Each dlModel In ActiveDesignFile.Models Set dlEe = dlModel.GraphicalElementCache.Scan Do While dlEe.MoveNext If dlEe.Current.HasXData(dlAppName) And DetectEleID(dlEe.Current, dlAppName, dlLineID) Then dlModel.RemoveElement dlEe.Current End If LoopNextEnd Sub'得到断面线的ID号Function GetEleID(idEle As Element, idAppName As String) As StringDim Id_i As IntegerDim idXdata() As XDatum GetEleID = \"\" If idEle.HasXData(idAppName) Then idXdata = idEle.GetXData(idAppName) GetEleID = idXdata(0).ValueEnd IfEnd FunctionFunction DetectEleID(idEle As Element, idAppName As String, idEleID As String) As BooleanDim Id_i As IntegerDim idXdata() As XDatum DetectEleID = False If idEle.HasXData(idAppName) Then idXdata = idEle.GetXData(idAppName) For Id_i = LBound(idXdata) To UBound(idXdata) If idXdata(Id_i).Value = idEleID Then DetectEleID = True NextEnd IfEnd Function'ViewModelFrm使用排序过程Public Sub BubbleSort(arr() As String, numEls As Long, Optional Descending As Boolean = False) Dim Value As String Dim index As Long Dim firstItem As Long Dim indexLimit As Long Dim lastSwap As Long ' account for optional arguments firstItem = LBound(arr) lastSwap = numEls Do indexLimit = lastSwap - 1 lastSwap = 0 For index = firstItem To indexLimit Value = arr(index) If (Value &gt; arr(index + 1)) Xor Descending Then ' if the items are not in order, swap them arr(index) = arr(index + 1) arr(index + 1) = Value lastSwap = index End If Next Loop While lastSwapEnd Sub'ViewModelFrm使用排序过程Public Sub BubbleSortMath(arr() As String, numEls As Long, Optional Descending As Boolean = False) Dim Value As String Dim index As Long Dim firstItem As Long Dim indexLimit As Long Dim lastSwap As Long ' account for optional arguments firstItem = LBound(arr) lastSwap = numEls Do indexLimit = lastSwap - 1 lastSwap = 0 For index = firstItem + 1 To indexLimit Value = arr(index) If (ReplaceNotNumericChr(Value) &gt; ReplaceNotNumericChr(arr(index + 1))) Xor Descending Then ' if the items are not in order, swap them arr(index) = arr(index + 1) arr(index + 1) = Value lastSwap = index End If Next Loop While lastSwapEnd Sub'ViewModelFrm使用排序过程Public Sub BubbleCoorListSortMath(arr() As String, Optional Descending As Boolean = False) Dim Value As Double Dim Value2 As Double Dim ValueTmp As String Dim index As Long Dim numEls As Long Dim firstItem As Long Dim indexLimit As Long Dim lastSwap As Long Dim xy() As String Dim xy2() As String firstItem = LBound(arr) numEls = UBound(arr) lastSwap = numEls Do indexLimit = lastSwap - 1 lastSwap = 0 For index = firstItem + 1 To indexLimit xy = Split(arr(index), \"|\") Value = Val(xy(0)) ValueTmp = arr(index) xy2 = Split(arr(index + 1), \"|\") Value2 = Val(xy2(0)) If Value &gt; Value2 Xor Descending Then arr(index) = arr(index + 1) arr(index + 1) = ValueTmp lastSwap = index End If Next Loop While lastSwapEnd SubFunction Azimuth(Sx As Double, Sy As Double, Ex As Double, Ey As Double)Dim DltX As Double, DltY As Double'Pi = 3.14159265358979 'Atn(1) * 4 '定义PI值DltX = Ex - SxDltY = Ey - Sy + 1E-20Azimuth = Pi() * (1 - Sgn(DltY) / 2) - Atn(DltX / DltY) '计算方位角If Azimuth &lt; 0 Then Azimuth = Azimuth + 2 * Pi()End Function'判断指定名称的模型是否存在,返回值为布尔型Function FindModel(MdlName) As Boolean Dim i As Long Dim j As Long FindModel = False 'Dim ModelArray() As String 'Set OldModel = ActiveModelReference j = ActiveDesignFile.Models.Count 'ReDim ModelArray(j) For i = 1 To j If ActiveDesignFile.Models(i).Name &lt;&gt; \"Default\" Then If IsNumeric(ActiveDesignFile.Models(i).Name) And IsNumeric(MdlName) Then If Val(ActiveDesignFile.Models(i).Name) = Val(MdlName) Then FindModel = True Else If Trim(ActiveDesignFile.Models(i).Name) = Trim(MdlName) Then FindModel = True End If End If ' ModelArray(i) = ActiveDesignFile.Models(i).Name Next ' BubbleSort ModelArray, j ' For i = 1 To j' ComboBox1.AddItem ActiveDesignFile.Models(i).Name ' ComboBox1.AddItem ModelArray(i) 'Next 'ComboBox1.Text = ActiveModelReference.Name 'lblDescription.Caption = ActiveModelReference.DescriptionEnd FunctionFunction getElementXdata(xdElement As Element, xdAppName As String, xdType As MsdXDatumType)Dim Xdata() As XDatumDim xd_i As IntegerIf xdElement.HasXData(xdAppName) Then Xdata = xdElement.GetXData(xdAppName) For xd_i = LBound(Xdata) To UBound(Xdata) With Xdata(xd_i) If .Type = xdType Then getElementXdata = .Value End With NextElsegetElementXdata = \"\"End IfEnd Function'将桩号中的非数字字符去掉后进行比较用Function ReplaceNotNumericChr(srcStr As String) As DoubleDim srcStrTmp As StringDim rslStr As StringDim srcStrLen As LongDim rpIdx_i As LongDim replacedChr As StringsrcStrTmp = srcStrsrcStrLen = Len(srcStrTmp)For rpIdx_i = 1 To srcStrLenreplacedChr = Mid(srcStrTmp, rpIdx_i, 1)If replacedChr &lt;&gt; \"-\" And replacedChr &lt;&gt; \".\" And replacedChr &lt;&gt; \"0\" And replacedChr &lt;&gt; \"1\" And replacedChr &lt;&gt; \"2\" And replacedChr &lt;&gt; \"3\" And replacedChr &lt;&gt; \"4\" And replacedChr &lt;&gt; \"5\" And replacedChr &lt;&gt; \"6\" And replacedChr &lt;&gt; \"7\" And replacedChr &lt;&gt; \"8\" And replacedChr &lt;&gt; \"9\" And replacedChr &lt;&gt; \"^\" Then srcStrTmp = Replace(srcStrTmp, replacedChr, \"^\")NextrslStr = Replace(srcStrTmp, \"^\", \"\")If InStr(rslStr, \"-\") &lt;&gt; 0 And Left(Trim(rslStr), 1) &lt;&gt; \"-\" Then rslStr = Replace(rslStr, \"-\", \"\")If rslStr &lt;&gt; \"\" ThenReplaceNotNumericChr = rslStrElseReplaceNotNumericChr = 10000000000#End IfEnd Function" }, { "title": "MicroStation XM 断面处理程序源码-模块-DrawDesignLineModel", "url": "/posts/mstn-xm-vba-code-DrawDesignLineModel-bas/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-03-10 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 模块名：DrawDesignLineModel.basAttribute VB_Name = \"DrawDesignLineModel\"Public curPoint As Point3dPublic curColor As IntegerPublic curLineStyle As LineStylePublic curWeight As IntegerPublic curLevel As LevelPublic curScale As Double '比例尺分母Public onPaperSize As Integer '标注在图尺上的打印尺寸,毫米为单位Public preStr As String '高程标注前缘Public KeyInChr As String '判断输入的字符Public comRows As Long '当前命令行Dim csCal As New CSExpressionCalculator.Calculator'读取命令或命令的参数Function readCommand(cmd As String, pos As Integer) As StringDim rcmdrcmd = Split(cmd, \" \") '一个空格分隔命令与参数If pos &lt;= UBound(rcmd) + 1 And pos &gt; 0 ThenreadCommand = rcmd(pos - 1)ElsereadCommand = \"\"End IfEnd Function'读取命令指定参数Function readPara(para As String, pos As Integer) As StringDim rpararpara = Split(para, \",\")If pos &lt;= UBound(rpara) + 1 And pos &gt; 0 ThenreadPara = rpara(pos - 1)ElsereadPara = \"\"End IfEnd Function'读取命令指定参数Function readParaProfile(para As String, pos As Integer) As StringDim rpararpara = Split(para, \",\")If pos &lt;= UBound(rpara) + 1 And pos &gt; 0 ThenreadParaProfile = rpara(pos - 1)ElsereadParaProfile = \"-666666.666\"End IfIf Trim(readParaProfile = \"\") Then readParaProfile = \"-666666.666\"End FunctionSub CreateLine(spoint As Point3d, epoint As Point3d)Dim Lpoints(1) As Point3dDim cLine As LineElementLpoints(0) = spointLpoints(1) = epointSet cLine = CreateLineElement1(Nothing, Lpoints)cLine.Level = curLevelcLine.Color = curColorcLine.LineStyle = curLineStylecLine.LineWeight = curWeightActiveModelReference.AddElement cLinecLine.RewritecLine.RedrawEnd SubSub CreateShortLine(spoint As Point3d, epoint As Point3d, LevelName As String)Dim Lpoints(1) As Point3dDim cLine As LineElementLpoints(0) = spointLpoints(1) = epointSet cLine = CreateLineElement1(Nothing, Lpoints)cLine.Level = FindLevel(LevelName)cLine.Color = curColorcLine.LineStyle = ActiveDesignFile.LineStyles(\"0\")cLine.LineWeight = curWeightActiveModelReference.AddElement cLinecLine.RewritecLine.RedrawEnd SubFunction dms2rad(dms As String) As DoubleDim tmp, td As Integer, tm As Integer, ts As Singletmp = Split(dms, \".\")td = tmp(0)If UBound(tmp) = 1 Thentm = Int(tmp(1) / 100)ts = (tmp(1) / 100 - tm) * 100End Ifdms2rad = (td + tm / 60 + ts / 3600) / 180 * (Atn(1) * 4)End FunctionFunction doComm(comString As String) As BooleanDim comStr As StringDim comPara As StringDim comStrTmp As StringDim toPoint As Point3d Dim DltX As Double Dim DltY As Double Dim toH As Double Dim slope As String '函数计算Dim fxStr As StringDim resultStr As StringDim xFromVal As DoubleDim xToVal As DoubleDim xStepVal As DoubleDim xFromStr As StringDim xToStr As StringDim xStepStr As StringDim cal_I As DoubleDim codeStr As String comStrTmp = comStringDo While InStr(comStrTmp, \" \") &lt;&gt; 0comStrTmp = Replace(comStrTmp, \" \", \" \")LoopcomStr = UCase(readCommand(comStrTmp, 1)) '读取命令comPara = readCommand(comStrTmp, 2) '命令中的参数comPara = Replace(UCase(comPara), \"%X%\", curPoint.X)comPara = Replace(UCase(comPara), \"%Y%\", curPoint.Y)Select Case comStrCase \"S\" '设计起点 '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：S 10,20\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：S 10,20\" Exit Function End If curPoint.X = Calc(readPara(comPara, 1)) curPoint.Y = Calc(readPara(comPara, 2))Case \"H\" '水平线 Dim Hstr As String '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：H 10\" Exit Function End If toPoint.X = curPoint.X + Calc(readPara(comPara, 1)) toPoint.Y = curPoint.Y CreateLine curPoint, toPoint Hstr = Format(toPoint.Y, \"#.0##\") CrtHText Hstr, curPoint, toPoint CrtDText curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"V\" '竖线 '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：V 10\" Exit Function End If toPoint.Y = curPoint.Y + Calc(readPara(comPara, 1)) toPoint.X = curPoint.X CreateLine curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"I\" '坡比 'Dim toH As Double 'Dim slope As String Dim slope_h As Double '坡比分子 Dim slope_d As Double '坡比分母 'Dim dltX As Double 'Dim dltY As Double Dim op As String Dim tmp '标注坡比 Dim biaoAng As Double Dim biaoStr As String Dim biaoPoint As Point3d '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：I 1/0.5,600\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：I 1/0.5,600\" Exit Function End If op = readPara(comPara, 3) toH = Calc(readPara(comPara, 2)) slope = readPara(comPara, 1) If op = \"\" Then op = \"R\" If UCase(op) = \"L\" Or UCase(op) = \"R\" Then If InStr(slope, \"/\") &lt;&gt; 0 Then '判断是否是1/20格式 '用 1:20表求的坡比 tmp = Split(slope, \"/\") If UBound(tmp) = 1 Then slope_h = tmp(0) slope_d = tmp(1) DltY = toH - curPoint.Y DltX = DltY * slope_d / slope_h If UCase(op) = \"L\" Then DltX = 0 - Abs(DltX) Else DltX = Abs(DltX) End If toPoint.X = curPoint.X + DltX toPoint.Y = toH CreateLine curPoint, toPoint If DltX &gt; 0 And DltY &lt; 0 Then biaoAng = -Atn(slope_h / slope_d) If DltX &gt; 0 And DltY &gt; 0 Then biaoAng = Atn(slope_h / slope_d) If DltX &lt; 0 And DltY &lt; 0 Then biaoAng = Atn(slope_h / slope_d) If DltX &lt; 0 And DltY &gt; 0 Then biaoAng = -Atn(slope_h / slope_d) 'biaoStr = slope_h &amp; \":\" &amp; Format(slope_d, \"0.###\") biaoStr = \"1:\" &amp; Format(slope_d / slope_h, \"0.###\") biaoPoint.X = (curPoint.X + toPoint.X) / 2 biaoPoint.Y = (curPoint.Y + toPoint.Y) / 2 CrtText biaoStr, biaoPoint, biaoAng curPoint.X = toPoint.X curPoint.Y = toPoint.Y End If End If End IfCase \"A\"'A D.MMSS,H '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：A 45.2235,600\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：A 45.2235,600\" Exit Function End If toH = Calc(readPara(comPara, 2)) slope = readPara(comPara, 2) '指定角度 DltY = toH - curPoint.Y DltX = DltY / Tan(dms2rad(slope)) toPoint.X = curPoint.X + DltX toPoint.Y = toH CreateLine curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"@\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：@ 10,20\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：@ 10,20\" Exit Function End If toPoint.X = curPoint.X + Calc(readPara(comPara, 1)) toPoint.Y = curPoint.Y + Calc(readPara(comPara, 2)) CreateLine curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"@P\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：@ deltaX,Y\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：@ deltaX,Y\" Exit Function End If toPoint.X = curPoint.X + Calc(readPara(comPara, 1)) toPoint.Y = Calc(readPara(comPara, 2)) CreateLine curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"P@\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：P@ X,deltaY\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：P@ X,deltaY\" Exit Function End If toPoint.X = Calc(readPara(comPara, 1)) toPoint.Y = curPoint.Y + Calc(readPara(comPara, 2)) CreateLine curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"P\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：P 10,20\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：P 10,20\" Exit Function End If toPoint.X = Calc(readPara(comPara, 1)) toPoint.Y = Calc(readPara(comPara, 2)) CreateLine curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"COLOR\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：Color 3\" Exit Function End If Dim ctmp As Integer ctmp = readPara(comPara, 1) If ctmp &gt;= 0 And ctmp &lt;= 255 Then curColor = ctmp Else curColor = 0 End IfCase \"SCALE\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：SCALE 出图比例尺分母\" Exit Function End If curScale = readPara(comPara, 1) / 1000Case \"LEVEL\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：Level 设计线\" Exit Function End If Set curLevel = FindLevel(readPara(comPara, 1))Case \"WEIGHT\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：Weight 2\" Exit Function End If Dim wtmp As Integer wtmp = readPara(comPara, 1) If wtmp &gt;= 0 And wtmp &lt;= 255 Then curWeight = wtmp Else curWeight = 0 End IfCase \"STYLE\" Dim tmpLineStyle As LineStyle Dim tmpi As Long Dim Ltmp As Integer '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：Style 3\" Exit Function End If Ltmp = readPara(comPara, 1) tmpi = 0 For Each tmpLineStyle In ActiveDesignFile.LineStyles If Ltmp = tmpi Then Set curLineStyle = tmpLineStyle Exit For Else Set curLineStyle = ByLevelLineStyle End If tmpi = tmpi + 1 NextCase \"F(X)\"'读取函数表达式fxStr = readPara(comPara, 1)xFromStr = readPara(comPara, 2)xToStr = readPara(comPara, 3)xStepStr = readPara(comPara, 4)If Trim(fxStr) &lt;&gt; \"\" And IsNumeric(Trim(xFromStr)) And IsNumeric(Trim(xToStr)) And IsNumeric(Trim(xStepStr)) Then xFromVal = Val(Trim(xFromStr)) xToVal = Val(Trim(xToStr)) xStepVal = Val(Trim(xStepStr)) For cal_I = xFromVal To xToVal Step xStepVal codeStr = \"x=\" &amp; cal_I &amp; vbCrLf &amp; Trim(fxStr) resultStr = csCal.Calculate(codeStr) If InStr(resultStr, \"ERROR\") = 0 Then toPoint.X = cal_I toPoint.Y = Val(resultStr) CreateLine curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.Y Else DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \":\" &amp; ToErrorStr(resultStr) End If Next Else DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \":函数定义有误,语法:f(x) 函数表达式,变量初值,终值,步长\" End IfCase \"F(Y)\"'读取函数表达式fxStr = readPara(comPara, 1)xFromStr = readPara(comPara, 2)xToStr = readPara(comPara, 3)xStepStr = readPara(comPara, 4)If Trim(fxStr) &lt;&gt; \"\" And IsNumeric(Trim(xFromStr)) And IsNumeric(Trim(xToStr)) And IsNumeric(Trim(xStepStr)) Then xFromVal = Val(Trim(xFromStr)) xToVal = Val(Trim(xToStr)) xStepVal = Val(Trim(xStepStr)) For cal_I = xFromVal To xToVal Step xStepVal codeStr = \"y=\" &amp; cal_I &amp; vbCrLf &amp; Trim(fxStr) resultStr = csCal.Calculate(codeStr) If InStr(resultStr, \"ERROR\") = 0 Then toPoint.X = Val(resultStr) toPoint.Y = cal_I CreateLine curPoint, toPoint curPoint.X = toPoint.X curPoint.Y = toPoint.Y Else DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \":\" &amp; ToErrorStr(resultStr) End If Next Else DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \":函数定义有误,语法:f(x) 函数表达式,变量初值,终值,步长\" End IfEnd SelectEnd Function'创建坡比标注文本Sub CrtText(str As String, midpoint As Point3d, rAng As Double)Dim txtTmp As TextElementDim txtPoint As Point3dDim tSize As DoubletSize = onPaperSize * curScaleIf rAng &lt; 0 ThentxtPoint.X = midpoint.X - Len(str) * tSize / 2 * Abs(Cos(rAng)) + onPaperSize * curScaletxtPoint.Y = midpoint.Y + Len(str) * tSize / 2 * Abs(Sin(rAng)) + onPaperSize * curScaleElsetxtPoint.X = midpoint.X - Len(str) * tSize * Cos(rAng) / 2 - onPaperSize * curScaletxtPoint.Y = midpoint.Y - Len(str) * tSize * Sin(rAng) / 2 + onPaperSize * curScaleEnd IfSet txtTmp = CreateTextElement1(Nothing, str, txtPoint, Matrix3dFromAxisAndRotationAngle(2, rAng))Set txtTmp.TextStyle = adTextStyle(\"设计线标注\", \"宋体\", 0.4, 0.4)txtTmp.TextStyle.Height = tSizetxtTmp.TextStyle.Width = tSizetxtTmp.TextStyle.Color = curColortxtTmp.Level = FindLevel(curLevel.Name &amp; \"(坡比标注)\")ActiveModelReference.AddElement txtTmptxtTmp.RewritetxtTmp.RedrawEnd Sub'创建高程标注文本Sub CrtHText(str As String, spoint As Point3d, epoint As Point3d)Dim txtTmp As TextElementDim txtPoint As Point3dDim strH As DoubleDim strW As DoubleDim tSize As DoubleDim strSize As DoubleDim txtPoint2 As Point3dtSize = onPaperSize * curScalestrSize = (Len(str) + Len(preStr) - 1) * tSizeIf dst(spoint, epoint) &gt; strSize ThentxtPoint.X = (spoint.X + epoint.X - strSize) / 2txtPoint.Y = (spoint.Y + epoint.Y) / 2 + tSize + curScale * 0.5Set txtTmp = CreateTextElement1(Nothing, preStr &amp; str, txtPoint, Matrix3dIdentity)Set txtTmp.TextStyle = adTextStyle(\"设计线标注\", \"宋体\", 0.4, 0.4)txtTmp.TextStyle.Height = tSizetxtTmp.TextStyle.Width = tSizetxtTmp.TextStyle.Color = curColor'txtTmp.Color = curColortxtTmp.Level = FindLevel(curLevel.Name &amp; \"(高程标注)\")ActiveModelReference.AddElement txtTmptxtTmp.RewritetxtTmp.RedrawElseIf epoint.X &gt; spoint.X ThentxtPoint.X = epoint.X + curScale * 3txtPoint.Y = (spoint.Y + epoint.Y) / 2 + tSize + curScale * 0.5ElsetxtPoint.X = spoint.X + curScale * 5txtPoint.Y = (spoint.Y + epoint.Y) / 2 + tSize + curScale * 0.5End IfSet txtTmp = CreateTextElement1(Nothing, preStr &amp; str, txtPoint, Matrix3dIdentity)Set txtTmp.TextStyle = adTextStyle(\"设计线标注\", \"宋体\", 0.4, 0.4)txtTmp.TextStyle.Height = tSizetxtTmp.TextStyle.Width = tSizetxtTmp.TextStyle.Color = curColor'txtTmp.Color = curColortxtTmp.Level = FindLevel(curLevel.Name &amp; \"(高程标注)\")ActiveModelReference.AddElement txtTmptxtTmp.RewritetxtTmp.RedrawtxtPoint.Y = spoint.YtxtPoint2.X = txtPoint.X + strSizetxtPoint2.Y = spoint.YCreateShortLine txtPoint, txtPoint2, curLevel.Name &amp; \"(高程标注)\"End IfEnd Sub'创建偏距标注文本Sub CrtDText(spoint As Point3d, epoint As Point3d)Dim txtTmp As TextElementDim txtPoint As Point3dDim strH As DoubleDim strW As DoubleDim tSize As DoubleDim strSize As DoubleDim txtPoint2 As Point3dDim str As StringtSize = onPaperSize * curScalestr = Format(epoint.X, \"#.0##\")If epoint.X &gt;= 0 ThenstrSize = (Len(str) - 0.5) * tSizeElsestrSize = (Len(str) - 1) * tSizeEnd IfIf dst(spoint, epoint) &lt; 2 * tSize ThenIf epoint.X &gt; spoint.X ThentxtPoint.X = epoint.X + tSize + curScaletxtPoint.Y = epoint.Y - tSizeElsetxtPoint.X = spoint.X + tSize + curScaletxtPoint.Y = spoint.Y - tSizeEnd IfSet txtTmp = CreateTextElement1(Nothing, str, txtPoint, Matrix3dFromAxisAndRotationAngle(2, -Atn(1) * 2))Set txtTmp.TextStyle = adTextStyle(\"设计线标注\", \"宋体\", 0.4, 0.4)txtTmp.TextStyle.Height = tSizetxtTmp.TextStyle.Width = tSizetxtTmp.TextStyle.Color = curColor'txtTmp.Color = curColortxtTmp.Level = FindLevel(curLevel.Name &amp; \"(偏距标注)\")ActiveModelReference.AddElement txtTmptxtTmp.RewritetxtTmp.RedrawtxtPoint.X = txtPoint.X - tSize - curScaletxtPoint.Y = spoint.Y - tSizetxtPoint2.X = txtPoint.XtxtPoint2.Y = spoint.Y - strSizeCreateShortLine txtPoint, txtPoint2, curLevel.Name &amp; \"(偏距标注)\"Elsestr = Format(spoint.X, \"#.0##\")If spoint.X &gt;= 0 ThenstrSize = (Len(str) - 0.5) * tSizeElsestrSize = (Len(str) - 1) * tSizeEnd IftxtPoint.X = spoint.X + tSize + curScaletxtPoint.Y = spoint.Y - tSizeSet txtTmp = CreateTextElement1(Nothing, str, txtPoint, Matrix3dFromAxisAndRotationAngle(2, -Atn(1) * 2))Set txtTmp.TextStyle = adTextStyle(\"设计线标注\", \"宋体\", 0.4, 0.4)txtTmp.TextStyle.Height = tSizetxtTmp.TextStyle.Width = tSizetxtTmp.TextStyle.Color = curColor'txtTmp.Color = curColortxtTmp.Level = FindLevel(curLevel.Name &amp; \"(偏距标注)\")ActiveModelReference.AddElement txtTmptxtTmp.RewritetxtTmp.RedrawtxtPoint.X = txtPoint.X - tSize - curScaletxtPoint.Y = spoint.Y - tSizetxtPoint2.X = txtPoint.XtxtPoint2.Y = spoint.Y - strSizeCreateShortLine txtPoint, txtPoint2, curLevel.Name &amp; \"(偏距标注)\"str = Format(epoint.X, \"#.0##\")If epoint.X &gt;= 0 ThenstrSize = (Len(str) - 0.5) * tSizeElsestrSize = (Len(str) - 1) * tSizeEnd IftxtPoint.X = epoint.X + tSize + curScaletxtPoint.Y = epoint.Y - tSizeSet txtTmp = CreateTextElement1(Nothing, str, txtPoint, Matrix3dFromAxisAndRotationAngle(2, -Atn(1) * 2))Set txtTmp.TextStyle = adTextStyle(\"设计线标注\", \"宋体\", 0.4, 0.4)txtTmp.TextStyle.Height = tSizetxtTmp.TextStyle.Width = tSizetxtTmp.TextStyle.Color = curColor'txtTmp.Color = curColortxtTmp.Level = FindLevel(curLevel.Name &amp; \"(偏距标注)\")ActiveModelReference.AddElement txtTmptxtTmp.RewritetxtTmp.RedrawtxtPoint.X = txtPoint.X - tSize - curScaletxtPoint.Y = spoint.Y - tSizetxtPoint2.X = txtPoint.XtxtPoint2.Y = spoint.Y - strSizeCreateShortLine txtPoint, txtPoint2, curLevel.Name &amp; \"(偏距标注)\"End IfEnd SubFunction dst(ap As Point3d, bp As Point3d) As Doubledst = Sqr((bp.X - ap.X) ^ 2 + (bp.Y - ap.Y) ^ 2)End FunctionFunction doCommForCal(comString As String) As BooleanDim comStr As StringDim comPara As StringDim comStrTmp As StringDim toPoint As Point3d Dim DltX As Double Dim DltY As Double Dim toH As Double Dim slope As String '函数计算Dim fxStr As StringDim resultStr As StringDim xFromVal As DoubleDim xToVal As DoubleDim xStepVal As DoubleDim xFromStr As StringDim xToStr As StringDim xStepStr As StringDim cal_I As DoubleDim codeStr As String comStrTmp = comStringDo While InStr(comStrTmp, \" \") &lt;&gt; 0comStrTmp = Replace(comStrTmp, \" \", \" \")LoopcomStr = UCase(readCommand(comStrTmp, 1)) '读取命令comPara = readCommand(comStrTmp, 2) '命令中的参数comPara = Replace(UCase(comPara), \"%X%\", curPoint.X)comPara = Replace(UCase(comPara), \"%Y%\", curPoint.Y)Select Case comStrCase \"S\" '设计起点 '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：S 10,20\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：S 10,20\" Exit Function End If curPoint.X = Calc(readPara(comPara, 1)) curPoint.Y = Calc(readPara(comPara, 2)) ListvCoor curPoint.X, curPoint.YCase \"H\" '水平线 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：H 10\" Exit Function End If toPoint.X = curPoint.X + Calc(readPara(comPara, 1)) toPoint.Y = curPoint.Y ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"V\" '竖线 '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数不正确 语法：V 10\" Exit Function End If toPoint.Y = curPoint.Y + Calc(readPara(comPara, 1)) toPoint.X = curPoint.X ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"I\" '坡比 Dim slope_h As Double '坡比分子 Dim slope_d As Double '坡比分母 Dim op As String Dim tmp If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：I 1/0.5,600\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：I 1/0.5,600\" Exit Function End If op = readPara(comPara, 3) toH = Calc(readPara(comPara, 2)) slope = readPara(comPara, 1) If op = \"\" Then op = \"R\" If UCase(op) = \"L\" Or UCase(op) = \"R\" Then If InStr(slope, \"/\") &lt;&gt; 0 Then '判断是否是1/20格式 '用 1:20表求的坡比 tmp = Split(slope, \"/\") If UBound(tmp) = 1 Then slope_h = tmp(0) slope_d = tmp(1) DltY = toH - curPoint.Y DltX = DltY * slope_d / slope_h If UCase(op) = \"L\" Then DltX = 0 - Abs(DltX) Else DltX = Abs(DltX) End If toPoint.X = curPoint.X + DltX toPoint.Y = toH ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.Y End If End If End IfCase \"A\"'A D.MMSS,H '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：A 45.2235,600\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：A 45.2235,600\" Exit Function End If toH = Calc(readPara(comPara, 2)) slope = readPara(comPara, 2) '指定角度 DltY = toH - curPoint.Y DltX = DltY / Tan(dms2rad(slope)) toPoint.X = curPoint.X + DltX toPoint.Y = toH ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"@\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：@ 10,20\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：@ 10,20\" Exit Function End If toPoint.X = curPoint.X + Calc(readPara(comPara, 1)) toPoint.Y = curPoint.Y + Calc(readPara(comPara, 2)) ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"@P\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：@ deltaX,Y\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：@ deltaX,Y\" Exit Function End If toPoint.X = curPoint.X + Calc(readPara(comPara, 1)) toPoint.Y = Calc(readPara(comPara, 2)) ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"P@\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：P@ X,deltaY\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：P@ X,deltaY\" Exit Function End If toPoint.X = Calc(readPara(comPara, 1)) toPoint.Y = curPoint.Y + Calc(readPara(comPara, 2)) ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"P\" '简单检查语法 If readPara(comPara, 1) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数1不正确 语法：P 10,20\" Exit Function End If '简单检查语法 If readPara(comPara, 2) = \"\" Then DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \" 参数2不正确 语法：P 10,20\" Exit Function End If toPoint.X = Calc(readPara(comPara, 1)) toPoint.Y = Calc(readPara(comPara, 2)) ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.YCase \"F(X)\"'读取函数表达式fxStr = readPara(comPara, 1)xFromStr = readPara(comPara, 2)xToStr = readPara(comPara, 3)xStepStr = readPara(comPara, 4)If Trim(fxStr) &lt;&gt; \"\" And IsNumeric(Trim(xFromStr)) And IsNumeric(Trim(xToStr)) And IsNumeric(Trim(xStepStr)) Then xFromVal = Val(Trim(xFromStr)) xToVal = Val(Trim(xToStr)) xStepVal = Val(Trim(xStepStr)) For cal_I = xFromVal To xToVal Step xStepVal codeStr = \"x=\" &amp; cal_I &amp; vbCrLf &amp; Trim(fxStr) resultStr = csCal.Calculate(codeStr) If InStr(resultStr, \"ERROR\") = 0 Then toPoint.X = cal_I toPoint.Y = Val(Format(resultStr, \"0.0####\")) ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.Y Else DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \":\" &amp; ToErrorStr(resultStr) End If Next Else DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \":函数定义有误,语法:f(x) 函数表达式,变量初值,终值,步长\" End IfCase \"F(X)\"'读取函数表达式fxStr = readPara(comPara, 1)xFromStr = readPara(comPara, 2)xToStr = readPara(comPara, 3)xStepStr = readPara(comPara, 4)If Trim(fxStr) &lt;&gt; \"\" And IsNumeric(Trim(xFromStr)) And IsNumeric(Trim(xToStr)) And IsNumeric(Trim(xStepStr)) Then xFromVal = Val(Trim(xFromStr)) xToVal = Val(Trim(xToStr)) xStepVal = Val(Trim(xStepStr)) For cal_I = xFromVal To xToVal Step xStepVal codeStr = \"x=\" &amp; cal_I &amp; vbCrLf &amp; Trim(fxStr) resultStr = csCal.Calculate(codeStr) If InStr(resultStr, \"ERROR\") = 0 Then toPoint.X = Val(Format(resultStr, \"0.0###\")) toPoint.Y = cal_I ListvCoor toPoint.X, toPoint.Y curPoint.X = toPoint.X curPoint.Y = toPoint.Y Else DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \":\" &amp; ToErrorStr(resultStr) End If Next Else DesignLineFrm.Echo = \"行：\" &amp; comRows &amp; \":函数定义有误,语法:f(x) 函数表达式,变量初值,终值,步长\" End IfEnd SelectEnd FunctionSub ListvCoor(X As Double, Y As Double)DesignLineFrm.vCoorList = DesignLineFrm.vCoorList &amp; \",\" &amp; X &amp; \"|\" &amp; YEnd SubFunction calH(vp() As String, X As Double) As StringDim i As LongDim iCount As LongDim xyDim xy2Dim strTp As StringiCount = UBound(vp)For i = 1 To iCount - 1 xy = Split(vp(i), \"|\") xy2 = Split(vp(i + 1), \"|\") If (X &gt; xy(0) And X &lt; xy2(0)) Then strTp = X &amp; vbTab &amp; Format((xy2(1) - xy(1)) / (xy2(0) - xy(0)) * (X - xy(0)) + xy(1), \"0.000\") If InStr(calH, strTp) = 0 Then calH = calH &amp; strTp &amp; vbCrLf ElseIf (X &lt; xy(0) And X &gt; xy2(0)) Then strTp = X &amp; vbTab &amp; Format((xy(1) - xy2(1)) / (xy(0) - xy2(0)) * (X - xy2(0)) + xy2(1), \"0.000\") If InStr(calH, strTp) = 0 Then calH = calH &amp; strTp &amp; vbCrLf ElseIf X = xy(0) Then strTp = X &amp; vbTab &amp; Format(xy(1), \"0.000\") If InStr(calH, strTp) = 0 Then calH = calH &amp; strTp &amp; vbCrLf ElseIf X = xy2(0) Then strTp = X &amp; vbTab &amp; Format(xy2(1), \"0.000\") If InStr(calH, strTp) = 0 Then calH = calH &amp; strTp &amp; vbCrLf End IfNextEnd FunctionFunction calX(vp() As String, Y As Double) As StringDim i As LongDim iCount As LongDim xyDim xy2Dim strTp As StringiCount = UBound(vp)For i = 1 To iCount - 1 xy = Split(vp(i), \"|\") xy2 = Split(vp(i + 1), \"|\") If (Y &gt; xy(1) And Y &lt; xy2(1)) Then strTp = Y &amp; vbTab &amp; Format((xy2(0) - xy(0)) / (xy2(1) - xy(1)) * (Y - xy(1)) + xy(0), \"0.000\") If InStr(calX, strTp) = 0 Then calX = calX &amp; strTp &amp; vbCrLf ElseIf (Y &lt; xy(1) And Y &gt; xy2(1)) Then strTp = Y &amp; vbTab &amp; Format((xy(0) - xy2(0)) / (xy(1) - xy2(1)) * (Y - xy2(1)) + xy2(0), \"0.000\") If InStr(calX, strTp) = 0 Then calX = calX &amp; strTp &amp; vbCrLf ElseIf Y = xy(1) Then strTp = Y &amp; vbTab &amp; Format(xy(0), \"0.000\") If InStr(calX, strTp) = 0 Then calX = calX &amp; strTp &amp; vbCrLf ElseIf Y = xy2(1) Then strTp = Y &amp; vbTab &amp; Format(xy2(0), \"0.000\") If InStr(calX, strTp) = 0 Then calX = calX &amp; strTp &amp; vbCrLf End IfNextEnd FunctionPrivate Function ToErrorStr(ByVal X As String) As String'错误处理If Mid(X, 1, 6) = \"ERROR#\" ThenDim ErrorN As IntegerDim ErrorStr As StringDim N As IntegerDim i As Integeri = InStr(X, \",\")If i = 0 ThenErrorN = Mid(X, 7)N = -1ElseErrorN = Mid(X, 7, i - 7)N = Val(Mid(X, i + 1))End IfSelect Case ErrorNCase 1ErrorStr = \"缺少左括号(\"Case 2ErrorStr = \"缺少右括号)\"Case 3ErrorStr = \"表达式中含有非法字符\"Case 4ErrorStr = \"表达式语法错误\"Case 5ErrorStr = \"无效的函数参数\"Case 6ErrorStr = \"溢出\"Case 7ErrorStr = \"表达式为空\"Case 8ErrorStr = \"类型不匹配\"Case 9ErrorStr = \"字符串引号不配对\"Case 10ErrorStr = \"缺少必选参数\"Case 11ErrorStr = \"除数为零\"Case 12ErrorStr = \"#号不配对\"Case 13ErrorStr = \"非法的日期\"Case 14ErrorStr = \"缺少期待的表达式\"Case 15ErrorStr = \"变量名非法\"Case 16ErrorStr = \"变量名太长\"Case 17ErrorStr = \"非法语句\"Case ElseErrorStr = \"未知错误\"End SelectIf N &gt; 0 ThenToErrorStr = ErrorStr &amp; \"，在第\" &amp; Trim(N) &amp; \"句\"ElseToErrorStr = ErrorStrEnd IfElseToErrorStr = XEnd IfEnd Function" }, { "title": "MicroStation XM 断面处理程序源码-模块-mapSubFuncModels", "url": "/posts/mstn-xm-vba-code-mapSubFuncModels-bas/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-03-09 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 模块名：mapSubFuncModels.basAttribute VB_Name = \"mapSubFuncModels\"'此模块是包含中间过程或函数'Sub DrawPoint(dpNum As Long, dpX As Double, dpY As Double, dpH As Double)'Dim elePoint As PointElement'End SubFunction ChkSideLen(p1X As Double, p1Y As Double, p2X As Double, p2Y As Double, p3X As Double, p3Y As Double, ln As Double) As BooleanDim s1 As DoubleDim s2 As DoubleDim s3 As Doubles1 = (p2X - p1X) * (p2X - p1X) + (p2Y - p1Y) * (p2Y - p1Y)s2 = (p3X - p2X) * (p3X - p2X) + (p3Y - p2Y) * (p3Y - p2Y)s3 = (p1X - p3X) * (p1X - p3X) + (p1Y - p3Y) * (p1Y - p3Y)ChkSideLen = FalseIf s1 &lt;= ln * ln And s2 &lt;= ln * ln And s3 &lt;= ln * ln Then ChkSideLen = TrueEnd Function'等高线B样条化封闭线处理Sub SplineLevelLine_closed(cv As Single, cz As Integer, WaterEle As Double, MainLineColor As Integer, CountLineColor As Integer, WaterLineColor As Integer, E2D3D As String) Dim oBsplineCurve As New BsplineCurve Dim Ee As ElementEnumerator Dim LineEle As LineElement 'Dim linePnts() As Point2d Dim CurLineEle As Double Dim LVertices() As Point3d Dim indx As Long Dim oBsplineCurveElement As BsplineCurveElement Dim mLvlGrp As NamedGroupElementDim clvlGrp As NamedGroupElementIf ActiveModelReference.GetNamedGroup(\"mainlevelline\") Is Nothing ThenSet mLvlGrp = ActiveModelReference.AddNewNamedGroup(\"mainlevelline\")ElseSet mLvlGrp = ActiveModelReference.GetNamedGroup(\"mainlevelline\")End IfIf ActiveModelReference.GetNamedGroup(\"countlevelline\") Is Nothing ThenSet clvlGrp = ActiveModelReference.AddNewNamedGroup(\"countlevelline\")ElseSet clvlGrp = ActiveModelReference.GetNamedGroup(\"countlevelline\")End If On Error Resume Next Set Ee = ActiveModelReference.GraphicalElementCache.Scan Do While Ee.MoveNext If Ee.Current.Type = 4 And (Not Ee.Current.HasXData(\"surmap_points\")) And Trim(Ee.Current.Level.Name) = \"三角网\" Then Set LineEle = Ee.Current 'linePnts = LineEle.GetVertices If LineEle.StartPoint.X = LineEle.EndPoint.X Then If LineEle.VerticesCount &lt; 6 Then While LineEle.VerticesCount &lt; 6 If cz = 3 Then Set LineEle = InsertVertics(LineEle, cv) LineEle.Rewrite End If If cz = 2 Or cz = 1 Then Set LineEle = InsertVerticsCenter(LineEle) LineEle.Rewrite End If Wend Else If cz = 3 Then Set LineEle = InsertVertics(LineEle, cv) LineEle.Rewrite End If If cz = 2 Then Set LineEle = InsertVerticsCenter(LineEle) LineEle.Rewrite End If End If LVertices = LineEle.GetVertices If E2D3D = \"2D\" Then CurLineEle = LineEle.StartPoint.Z For indx = LBound(LVertices) To UBound(LVertices) LVertices(indx).Z = 0 Next End If oBsplineCurve.SetPoles LVertices 'LineEle.GetVertices oBsplineCurve.Closed = True oBsplineCurve.Order = 6 Set oBsplineCurveElement = CreateBsplineCurveElement1(Nothing, oBsplineCurve) If LineEle.StartPoint.Z &gt; WaterEle Then If (LineEle.StartPoint.Z Mod (dgxDist * 5)) = 0 Then oBsplineCurveElement.Level = FindLevel(\"等高线计曲线\") oBsplineCurveElement.Color = CountLineColor oBsplineCurveElement.LineWeight = 1 oBsplineCurveElement.LineStyle = ActiveDesignFile.LineStyles(\"0\") SetElementXdata oBsplineCurveElement, \"surmap_countlevelline\", msdXDatumTypeString, CurLineEle Else oBsplineCurveElement.Level = FindLevel(\"等高线首曲线\") oBsplineCurveElement.Color = MainLineColor oBsplineCurveElement.LineWeight = 0 oBsplineCurveElement.LineStyle = ActiveDesignFile.LineStyles(\"0\") SetElementXdata oBsplineCurveElement, \"surmap_mainlevelline\", msdXDatumTypeString, CurLineEle End If Else If (LineEle.StartPoint.Z Mod (dgxDist * 5)) = 0 Then oBsplineCurveElement.Level = FindLevel(\"等深线计曲线\") oBsplineCurveElement.Color = WaterLineColor oBsplineCurveElement.LineWeight = 1 oBsplineCurveElement.LineStyle = ActiveDesignFile.LineStyles(\"3\") SetElementXdata oBsplineCurveElement, \"surmap_countlevelline\", msdXDatumTypeString, CurLineEle Else oBsplineCurveElement.Level = FindLevel(\"等深线首曲线\") oBsplineCurveElement.Color = WaterLineColor oBsplineCurveElement.LineWeight = 0 oBsplineCurveElement.LineStyle = ActiveDesignFile.LineStyles(\"3\") SetElementXdata oBsplineCurveElement, \"surmap_mainlevelline\", msdXDatumTypeString, CurLineEle End If End If ActiveModelReference.AddElement oBsplineCurveElement oBsplineCurveElement.Rewrite If oBsplineCurveElement.HasXData(\"surmap_countlevelline\") Then clvlGrp.AddMember oBsplineCurveElement clvlGrp.Rewrite End If If oBsplineCurveElement.HasXData(\"surmap_mainlevelline\") Then mLvlGrp.AddMember oBsplineCurveElement mLvlGrp.Rewrite End If oBsplineCurveElement.Redraw msdDrawingModeNormal ActiveModelReference.RemoveElement LineEle End If End If LoopEnd Sub'等高线B样条化开曲线处理Sub SplineLevelLine_open(cv As Single, cz As Integer, WaterEle As Double, MainLineColor As Integer, CountLineColor As Integer, WaterLineColor As Integer, E2D3D As String) Dim oBsplineCurve As New BsplineCurve Dim Ee As ElementEnumerator Dim LineEle As LineElement 'Dim linePnts() As Point2d Dim oBsplineCurveElement As BsplineCurveElement 'Dim cntPoint(5) As Point3d 'Dim Vertics() As Point3d Dim CurLineEle As Double Dim LVertices() As Point3d Dim indx As Long Dim mLvlGrp As NamedGroupElementDim clvlGrp As NamedGroupElementIf ActiveModelReference.GetNamedGroup(\"mainlevelline\") Is Nothing ThenSet mLvlGrp = ActiveModelReference.AddNewNamedGroup(\"mainlevelline\")ElseSet mLvlGrp = ActiveModelReference.GetNamedGroup(\"mainlevelline\")End IfIf ActiveModelReference.GetNamedGroup(\"countlevelline\") Is Nothing ThenSet clvlGrp = ActiveModelReference.AddNewNamedGroup(\"countlevelline\")ElseSet clvlGrp = ActiveModelReference.GetNamedGroup(\"countlevelline\")End If On Error Resume Next Set Ee = ActiveModelReference.GraphicalElementCache.Scan Do While Ee.MoveNext If (Ee.Current.Type = 4 Or Ee.Current.Type = 3) And (Not Ee.Current.HasXData(\"surmap_points\")) And Trim(Ee.Current.Level.Name) = \"三角网\" Then Set LineEle = Ee.Current 'linePnts = LineEle.GetVertices If LineEle.StartPoint.X &lt;&gt; LineEle.EndPoint.X Then If LineEle.VerticesCount &lt; 6 Then While LineEle.VerticesCount &lt; 6 Set LineEle = InsertVerticsCenter(LineEle) LineEle.Rewrite Wend Else If cz = 3 Then Set LineEle = InsertVertics(LineEle, cv) LineEle.Rewrite End If If cz = 2 Then Set LineEle = InsertVerticsCenter(LineEle) LineEle.Rewrite End If End If LVertices = LineEle.GetVertices If E2D3D = \"2D\" Then CurLineEle = LineEle.StartPoint.Z For indx = LBound(LVertices) To UBound(LVertices) LVertices(indx).Z = 0 Next End If oBsplineCurve.SetPoles LVertices 'LineEle.GetVertices oBsplineCurve.Closed = False oBsplineCurve.Order = 6 Set oBsplineCurveElement = CreateBsplineCurveElement1(Nothing, oBsplineCurve) 'If E2D3D = \"2D\" Then SetElementXdata oBsplineCurveElement, \"surmap_elevation\", msdXDatumTypeString, CurLineEle If LineEle.StartPoint.Z &gt; WaterEle Then If (LineEle.StartPoint.Z Mod (dgxDist * 5)) = 0 Then oBsplineCurveElement.Level = FindLevel(\"等高线计曲线\") oBsplineCurveElement.Color = CountLineColor oBsplineCurveElement.LineWeight = 1 oBsplineCurveElement.LineStyle = ActiveDesignFile.LineStyles(\"0\") SetElementXdata oBsplineCurveElement, \"surmap_countlevelline\", msdXDatumTypeString, CurLineEle Else oBsplineCurveElement.Level = FindLevel(\"等高线首曲线\") oBsplineCurveElement.Color = MainLineColor oBsplineCurveElement.LineWeight = 0 oBsplineCurveElement.LineStyle = ActiveDesignFile.LineStyles(\"0\") SetElementXdata oBsplineCurveElement, \"surmap_mainlevelline\", msdXDatumTypeString, CurLineEle End If Else If (LineEle.StartPoint.Z Mod (dgxDist * 5)) = 0 Then oBsplineCurveElement.Level = FindLevel(\"等深线计曲线\") oBsplineCurveElement.Color = WaterLineColor oBsplineCurveElement.LineWeight = 1 oBsplineCurveElement.LineStyle = ActiveDesignFile.LineStyles(\"3\") SetElementXdata oBsplineCurveElement, \"surmap_countlevelline\", msdXDatumTypeString, CurLineEle Else oBsplineCurveElement.Level = FindLevel(\"等深线首曲线\") oBsplineCurveElement.Color = WaterLineColor oBsplineCurveElement.LineWeight = 0 oBsplineCurveElement.LineStyle = ActiveDesignFile.LineStyles(\"3\") SetElementXdata oBsplineCurveElement, \"surmap_mainlevelline\", msdXDatumTypeString, CurLineEle End If End If ActiveModelReference.AddElement oBsplineCurveElement oBsplineCurveElement.Rewrite If oBsplineCurveElement.HasXData(\"surmap_countlevelline\") Then clvlGrp.AddMember oBsplineCurveElement clvlGrp.Rewrite End If If oBsplineCurveElement.HasXData(\"surmap_mainlevelline\") Then mLvlGrp.AddMember oBsplineCurveElement mLvlGrp.Rewrite End If oBsplineCurveElement.Redraw msdDrawingModeNormal ActiveModelReference.RemoveElement LineEle End If End If LoopEnd Sub'查找并设置文本样式格式'参数:样式名、字体名、高度、宽度'若样式不存在则创建，若存在则设置Function adTextStyle(txtStyleName As String, txtFontName As String, txtStyleHeight As Single, txtStyleWidth As Single) As TextStyleDim aTextStyle As TextStyleSet aTextStyle = ActiveDesignFile.TextStyles.Find(txtStyleName)If aTextStyle Is Nothing ThenSet aTextStyle = ActiveDesignFile.TextStyles.Add(Nothing, txtStyleName)aTextStyle.Height = txtStyleHeightaTextStyle.Width = txtStyleWidthaTextStyle.Font = FindFontByName(txtFontName)'Else'aTextStyle.Height = txtStyleHeight'aTextStyle.Width = txtStyleWidth'aTextStyle.Font = FindFontByName(txtFontName)End IfSet adTextStyle = aTextStyleEnd FunctionFunction FindFontByName(fFontName As String) As FontDim fFonts As FontsDim fFont As FontSet FindFontByName = NothingSet fFonts = ActiveDesignFile.FontsFor Each fFont In fFontsIf fFont.Name = fFontName Then Set FindFontByName = fFontNextEnd FunctionSub LoadPoints(DtaFileName As String, fileFormat As String, zj As String, pXs As Integer, pntColor As Integer, rmkColor As Integer)Dim PointsFileName As String '地形碎部点文件名Dim pntLevel As LevelDim FileNumber As IntegerDim pX As DoubleDim pY As DoubleDim pH As DoubleDim pNum As StringDim pNumTmp As LongDim pInfo As StringDim InfoStr As StringDim ps As StringDim PntEleId As StringDim LblEleId As String'读取数据文件一行Dim DataLine As String'展点标注Dim cbText As TextElementDim cbTextPos As Point3d'标注小数位数Dim cbPoints As Integer'小平面法生成三角Dim xpmPoints(1) As Point3dDim xpmLine As LineElementOn Error GoTo extDim dxGroup As NamedGroupElementDim dxPn As NamedGroupElementDim dxLvl As NamedGroupElementDim dxPointsCount As LongDim DtaLine As StringdxPointsCount = 0Dim fw As StringDim fw2If ActiveModelReference.GetNamedGroup(\"dxpoints\") Is Nothing ThenSet dxGroup = ActiveModelReference.AddNewNamedGroup(\"dxpoints\")ElseSet dxGroup = ActiveModelReference.GetNamedGroup(\"dxpoints\")End IfIf ActiveModelReference.GetNamedGroup(\"dxpointname\") Is Nothing ThenSet dxPn = ActiveModelReference.AddNewNamedGroup(\"dxpointName\")ElseSet dxPn = ActiveModelReference.GetNamedGroup(\"dxpointName\")End IfIf ActiveModelReference.GetNamedGroup(\"dxpointElevation\") Is Nothing ThenSet dxLvl = ActiveModelReference.AddNewNamedGroup(\"dxpointElevation\")ElseSet dxLvl = ActiveModelReference.GetNamedGroup(\"dxpointElevation\")End IfIf ActiveModelReference.HasXData(\"surmap_fw\") Then fw = getModelXdata(ActiveModelReference, \"surmap_fw\", msdXDatumTypeString) If Trim(fw) &lt;&gt; \"\" Then fw2 = Split(fw, \",\") If UBound(fw2) &gt; 1 Then miniN = fw2(0) miniE = fw2(1) miniH = fw2(2) maxN = fw2(3) maxE = fw2(4) maxH = fw2(5) End If Else maxN = 0 maxE = 0 maxH = 0 miniN = 1E+20 miniE = 1E+20 miniH = 1E+20 End IfElse maxN = 0 maxE = 0 maxH = 0 miniN = 1E+20 miniE = 1E+20 miniH = 1E+20End IftPoints = 1cbPoints = pXsPointsFileName = DtaFileNameFileNumber = FreeFilepNumTmp = 0If Trim(PointsFileName) &lt;&gt; \"\" Then Open PointsFileName For Input As #FileNumber While Not EOF(FileNumber) Select Case fileFormat Case \"psenh\" pNumTmp = pNumTmp + 1 Line Input #FileNumber, DataLine If Trim(DataLine) &lt;&gt; \"\" Then pNum = Trim(readData(DataLine, 1, 5)) pInfo = Trim(readData(DataLine, 2, 5)) pX = Trim(readData(DataLine, 3, 5)) pY = Trim(readData(DataLine, 4, 5)) pH = Trim(readData(DataLine, 5, 5)) End If Case \"psneh\" pNumTmp = pNumTmp + 1 Line Input #FileNumber, DataLine If Trim(DataLine) &lt;&gt; \"\" Then pNum = readData(DataLine, 1, 5) pInfo = Trim(readData(DataLine, 2, 5)) pX = readData(DataLine, 4, 5) pY = readData(DataLine, 3, 5) pH = readData(DataLine, 5, 5) End If Case \"penh\" pNumTmp = pNumTmp + 1 Line Input #FileNumber, DataLine If Trim(DataLine) &lt;&gt; \"\" Then pNum = readData(DataLine, 1, 4) pX = readData(DataLine, 2, 4) pY = readData(DataLine, 3, 4) pH = readData(DataLine, 4, 4) End If Case \"pneh\" pNumTmp = pNumTmp + 1 Line Input #FileNumber, DataLine If Trim(DataLine) &lt;&gt; \"\" Then pNum = readData(DataLine, 1, 4) pX = readData(DataLine, 3, 4) pY = readData(DataLine, 2, 4) pH = readData(DataLine, 4, 4) End If Case \"enh\" pNumTmp = pNumTmp + 1 pNum = Format(pNumTmp, \"0\") Line Input #FileNumber, DataLine If Trim(DataLine) &lt;&gt; \"\" Then pX = readData(DataLine, 1, 3) pY = readData(DataLine, 2, 3) pH = readData(DataLine, 3, 3) End If Case \"neh\" pNumTmp = pNumTmp + 1 pNum = Format(pNumTmp, \"0\") Line Input #FileNumber, DataLine If Trim(DataLine) &lt;&gt; \"\" Then pX = readData(DataLine, 2, 3) pY = readData(DataLine, 1, 3) pH = readData(DataLine, 3, 3) End If End Select If pX &lt;&gt; -666.666 And pY &lt;&gt; -666.666 And pH &lt;&gt; -666.666 Then '取得地形图范围 If pX &gt; maxE Then maxE = pX If pY &gt; maxN Then maxN = pY If pH &gt; maxH Then maxH = pH If pX &lt; miniE Then miniE = pX If pY &lt; miniN Then miniN = pY If pH &lt; miniH Then miniH = pH 'SetModelXdata ActiveModelReference, \"surmap_fw\", msdXDatumTypeString, Format(miniN, \"0.0######\") &amp; \",\" &amp; Format(miniE, \"0.0######\") &amp; \",\" &amp; Format(miniH, \"0.0######\") &amp; \",\" &amp; Format(maxN, \"0.0######\") &amp; \",\" &amp; Format(maxE, \"0.0######\") &amp; \",\" &amp; Format(maxH, \"0.0######\") '展点小平面法生成三角 xpmPoints(0).X = pX xpmPoints(0).Y = pY xpmPoints(0).Z = pH xpmPoints(1).X = pX xpmPoints(1).Y = pY xpmPoints(1).Z = pH Set xpmLine = CreateLineElement1(Nothing, xpmPoints) xpmLine.Level = FindLevel(\"地形点标记\") xpmLine.Color = pntColor 'xpmLine.LineWeight = 1 ActiveModelReference.AddElement xpmLine PntEleId = DLongToString(ActiveModelReference.GraphicalElementCache.GetLastValidElement.id)' InfoStr = pNum &amp; \"|\" &amp; pNumTmp &amp; \"|\" &amp; pInfo &amp; \"|\" &amp; PntEleId' SetElementXdata xpmLine, \"surmap_points\", msdXDatumTypeString, InfoStr '\"pnt\"' xpmLine.Rewrite' xpmLine.Redraw' dxGroup.AddMember xpmLine cbTextPos.X = xpmPoints(0).X + 2 * curScale cbTextPos.Y = xpmPoints(0).Y + 2 * curScale cbTextPos.X = xpmPoints(0).X If zj = \"dh\" Then Set cbText = CreateTextElement1(Nothing, pNum, cbTextPos, Matrix3dIdentity) Else Set cbText = CreateTextElement1(Nothing, Format(xpmPoints(0).Z, \"0.\" &amp; String(cbPoints, \"0\")), cbTextPos, Matrix3dIdentity) End If ActiveModelReference.AddElement cbText LblEleId = DLongToString(ActiveModelReference.GraphicalElementCache.GetLastValidElement.id) SetElementXdata cbText, \"surmap_pointlabel\", msdXDatumTypeString, pNumTmp &amp; \"|\" &amp; PntEleId Set cbText.TextStyle = adTextStyle(\"地形点标注\", \"WORKING\", 0.4, 0.4) cbText.TextStyle.Height = 2 * curScale cbText.TextStyle.Width = 2 * curScale cbText.Level = FindLevel(\"地形点标注\") cbText.TextStyle.Color = rmkColor cbText.Rewrite cbText.Redraw InfoStr = pNum &amp; \"|\" &amp; pNumTmp &amp; \"|\" &amp; pInfo &amp; \"|\" &amp; LblEleId SetElementXdata xpmLine, \"surmap_points\", msdXDatumTypeString, InfoStr '\"pnt\" xpmLine.Rewrite xpmLine.Redraw dxGroup.AddMember xpmLine If zj = \"dh\" Then dxPn.AddMember cbText Else dxLvl.AddMember cbText End If If dxPointsCount = 500 Then dxGroup.Rewrite dxPointsCount = 0 If zj = \"dh\" Then dxPn.Rewrite Else dxLvl.Rewrite End If End If dxPointsCount = dxPointsCount + 1 tPoints = tPoints + 1End If Wend '设计地形范围 SetModelXdata ActiveModelReference, \"surmap_fw\", msdXDatumTypeString, Format(miniN, \"0.0######\") &amp; \",\" &amp; Format(miniE, \"0.0######\") &amp; \",\" &amp; Format(miniH, \"0.0######\") &amp; \",\" &amp; Format(maxN, \"0.0######\") &amp; \",\" &amp; Format(maxE, \"0.0######\") &amp; \",\" &amp; Format(maxH, \"0.0######\")dxGroup.RewriteIf zj = \"dh\" ThendxPn.RewriteElsedxLvl.RewriteEnd If Close #FileNumberElse MsgBox \"请选择地形数据文件!\"End Ifext:End Sub'绘三角网Sub DrawTriangles(selStyle As Integer) Dim StartPoint As Point3d Dim Point As Point3d, point2 As Point3d Dim lngTemp As Long Dim triEe As ElementEnumerator Dim triEe2 As ElementEnumerator Dim triModel As ModelReference Dim tmpLine As LineElement Dim LastEleId As Long Dim triId As Long Dim sEle As Element Dim dxGrp As NamedGroupElement Dim oScanCriteria As ElementScanCriteria Set oScanCriteria = New ElementScanCriteria Dim dtmGrp As NamedGroupElement'miniE = 1E+20'miniN = 1E+20'miniH = 1E+20Dim fw As StringDim fw2If ActiveModelReference.GetNamedGroup(\"dtm\") Is Nothing ThenSet dtmGrp = ActiveModelReference.AddNewNamedGroup(\"dtm\")ElseSet dtmGrp = ActiveModelReference.GetNamedGroup(\"dtm\")End IfIf ActiveModelReference.HasXData(\"surmap_fw\") Then fw = getModelXdata(ActiveModelReference, \"surmap_fw\", msdXDatumTypeString) If Trim(fw) &lt;&gt; \"\" Then fw2 = Split(fw, \",\") If UBound(fw2) &gt; 1 Then miniN = fw2(0) miniE = fw2(1) miniH = fw2(2) maxN = fw2(3) maxE = fw2(4) maxH = fw2(5) End If Else maxN = 0 maxE = 0 maxH = 0 miniN = 1E+20 miniE = 1E+20 miniH = 1E+20 End IfElse maxN = 0 maxE = 0 maxH = 0 miniN = 1E+20 miniE = 1E+20 miniH = 1E+20End If LastEleId = ActiveModelReference.GraphicalElementCache.GetLastValidElement.CacheIndex Set triModel = ActiveModelReferenceIf selStyle = 1 Then'自动选择全部地形点If ActiveModelReference.GetNamedGroup(\"dxpoints\") Is Nothing Then oScanCriteria.ExcludeAllLevels oScanCriteria.IncludeLevel FindLevel(\"地形点标记\") Set triEe = triModel.GraphicalElementCache.Scan(oScanCriteria) Do While triEe.MoveNext If triEe.Current.Type = msdElementTypeLine And triEe.Current.HasXData(\"surmap_points\") Then Set tmpLine = triEe.Current If tmpLine.StartPoint.X &gt; maxE Then maxE = tmpLine.StartPoint.X If tmpLine.StartPoint.Y &gt; maxN Then maxN = tmpLine.StartPoint.Y If tmpLine.StartPoint.Z &gt; maxH Then maxH = tmpLine.StartPoint.Z If tmpLine.StartPoint.X &lt; miniE Then miniE = tmpLine.StartPoint.X If tmpLine.StartPoint.Y &lt; miniN Then miniN = tmpLine.StartPoint.Y If tmpLine.StartPoint.Z &lt; miniH Then miniH = tmpLine.StartPoint.Z triModel.SelectElement triEe.Current End If LoopElse Set dxGrp = ActiveModelReference.GetNamedGroup(\"dxpoints\") dxGrp.SelectElements msdMemberTraverseSimpleEnd IfElse'手动选择部分地形点 Set triEe = triModel.GetSelectedElements Do While triEe.MoveNext If triEe.Current.HasXData(\"surmap_points\") Then Set tmpLine = triEe.Current If tmpLine.StartPoint.X &gt; maxE Then maxE = tmpLine.StartPoint.X If tmpLine.StartPoint.Y &gt; maxN Then maxN = tmpLine.StartPoint.Y If tmpLine.StartPoint.Z &gt; maxH Then maxH = tmpLine.StartPoint.Z If tmpLine.StartPoint.X &lt; miniE Then miniE = tmpLine.StartPoint.X If tmpLine.StartPoint.Y &lt; miniN Then miniN = tmpLine.StartPoint.Y If tmpLine.StartPoint.Z &lt; miniH Then miniH = tmpLine.StartPoint.Z Else triModel.UnselectElement triEe.Current End If LoopEnd If SetModelXdata ActiveModelReference, \"surmap_fw\", msdXDatumTypeString, Format(miniN, \"0.0######\") &amp; \",\" &amp; Format(miniE, \"0.0######\") &amp; \",\" &amp; Format(miniH, \"0.0######\") &amp; \",\" &amp; Format(maxN, \"0.0######\") &amp; \",\" &amp; Format(maxE, \"0.0######\") &amp; \",\" &amp; Format(maxH, \"0.0######\") CadInputQueue.SendCommand \"mdl load facet\", False CadInputQueue.SendCommand \"FACET TRIANGULATE XYPOINTS\"' 坐标以主单位计 StartPoint.X = 0 StartPoint.Y = 0 StartPoint.Z = 0#' 给当前命令传送一个数据点 Point.X = StartPoint.X Point.Y = StartPoint.Y Point.Z = StartPoint.Z CadInputQueue.SendDataPoint Point, 1 triId = ActiveModelReference.GraphicalElementCache.GetLastValidElement.CacheIndex If LastEleId &lt;&gt; triId Then Set sEle = ActiveModelReference.GraphicalElementCache.GetLastValidElement sEle.Level = FindLevel(\"三角网\") sEle.Color = 9 sEle.Rewrite sEle.Redraw dtmGrp.AddMember sEle dtmGrp.Rewrite End IfEnd Sub'创建断面桩号标注文本Sub CrtStageText(str As String, midpoint As Point3d, rPoint As Point3d)Dim txtTmp As TextElementDim txtPoint As Point3dDim tSize As DoubleDim rAng As DoubletSize = 2 * curScale 'onPaperSize * curScalerAng = Azimuth(midpoint.X, midpoint.Y, rPoint.X, rPoint.Y)If rAng &lt; 0 ThentxtPoint.X = midpoint.X + tSize * Cos(rAng)txtPoint.Y = midpoint.Y + tSize * Sin(rAng)ElseIf rAng &gt; 0 ThentxtPoint.X = midpoint.X - Len(str) * tSize * Cos(rAng) / 2 + tSize * Cos(rAng)txtPoint.Y = midpoint.Y - Len(str) * tSize * Sin(rAng) / 2 + tSize * Sin(rAng)ElsetxtPoint.X = midpoint.X - Len(str) * tSize * Cos(rAng) / 2 + tSize * Cos(rAng)txtPoint.Y = midpoint.Y - Len(str) * tSize * Sin(rAng) / 2 + tSize * Sin(rAng)End IfSet txtTmp = CreateTextElement1(Nothing, str, txtPoint, Matrix3dFromAxisAndRotationAngle(2, rAng))txtTmp.TextStyle.Height = tSizetxtTmp.TextStyle.Width = tSizetxtTmp.Color = curColortxtTmp.Level = FindLevel(\"断面布置线\")ActiveModelReference.AddElement txtTmptxtTmp.RewritetxtTmp.RedrawEnd SubFunction InsertVertics(Ele As LineElement, cvp As Single) As LineElementDim vCnt As LongDim indx As LongDim eleVertics() As Point3dDim insertPoints() As Point3dDim LineEle As LineElement Set LineEle = Ele vCnt = LineEle.VerticesCount eleVertics = LineEle.GetVertices ReDim insertPoints(vCnt - 1) For indx = 0 To vCnt - 2 insertPoints(indx).X = eleVertics(indx).X + (eleVertics(indx + 1).X - eleVertics(indx).X) * cvp insertPoints(indx).Y = eleVertics(indx).Y + (eleVertics(indx + 1).Y - eleVertics(indx).Y) * cvp insertPoints(indx).Z = eleVertics(indx).Z + (eleVertics(indx + 1).Z - eleVertics(indx).Z) * cvp LineEle.InsertVertex 3 * indx + 1, insertPoints(indx) insertPoints(indx).X = eleVertics(indx).X + (eleVertics(indx + 1).X - eleVertics(indx).X) * (1 - cvp) insertPoints(indx).Y = eleVertics(indx).Y + (eleVertics(indx + 1).Y - eleVertics(indx).Y) * (1 - cvp) insertPoints(indx).Z = eleVertics(indx).Z + (eleVertics(indx + 1).Z - eleVertics(indx).Z) * (1 - cvp) LineEle.InsertVertex 3 * indx + 2, insertPoints(indx) Next' LineEle.Redraw msdDrawingModeNormal' LineEle.RewriteSet InsertVertics = LineEleEnd FunctionFunction InsertVerticsCenter(Ele As LineElement) As LineElementDim vCnt As LongDim indx As LongDim eleVertics() As Point3dDim insertPoints() As Point3dDim LineEle As LineElement Set LineEle = Ele vCnt = LineEle.VerticesCount eleVertics = LineEle.GetVertices ReDim insertPoints(vCnt - 1) For indx = 0 To vCnt - 2 insertPoints(indx).X = eleVertics(indx).X + (eleVertics(indx + 1).X - eleVertics(indx).X) * 0.5 insertPoints(indx).Y = eleVertics(indx).Y + (eleVertics(indx + 1).Y - eleVertics(indx).Y) * 0.5 insertPoints(indx).Z = eleVertics(indx).Z + (eleVertics(indx + 1).Z - eleVertics(indx).Z) * 0.5 LineEle.InsertVertex 2 * indx + 1, insertPoints(indx) ' insertPoints(indx).X = eleVertics(indx).X + (eleVertics(indx + 1).X - eleVertics(indx).X) * (1 - cvp)' insertPoints(indx).Y = eleVertics(indx).Y + (eleVertics(indx + 1).Y - eleVertics(indx).Y) * (1 - cvp)' insertPoints(indx).Z = eleVertics(indx).Z + (eleVertics(indx + 1).Z - eleVertics(indx).Z) * (1 - cvp)' LineEle.InsertVertex 3 * indx + 2, insertPoints(indx) Next' LineEle.Redraw msdDrawingModeNormal' LineEle.RewriteSet InsertVerticsCenter = LineEleEnd Function'读取数据文件某一行指定列的数据指定参数Function readData(dta As String, pos As Integer, FieldCount As Integer) As StringDim rparaDim Status As StringDim DataTmp As StringDim dlimiter As String dlimiter = \"\" DataTmp = dta If InStr(DataTmp, \",\") &lt;&gt; 0 Then DataTmp = Replace(DataTmp, \" \", \"\") dlimiter = \"\" rpara = Split(DataTmp, \",\") ElseIf InStr(DataTmp, \" \") &lt;&gt; 0 Then rpara = Split(DataTmp, \" \") dlimiter = \" \" ElseIf InStr(DataTmp, vbTab) &lt;&gt; 0 Then rpara = Split(DataTmp, vbTab) dlimiter = vbTab Else Status = \"error\" End IfIf Status &lt;&gt; \"error\" Then If pos - 1 &lt;= UBound(rpara) And pos - 1 &gt;= 0 And Trim(rpara(pos - 1)) &lt;&gt; \"\" Then readData = rpara(pos - 1) Else readData = \"-666.666\" End IfElse readData = \"-666.666\"End IfEnd FunctionSub ChangeShape(ele1 As ShapeElement, ele2 As ShapeElement)Dim Vcnt1 As IntegerDim Vcnt2 As IntegerDim Vers1() As Point3dDim Vers2() As Point3dDim Spoints(3) As Point3dDim Dpoints(3) As Point3d'Dim Dpoints2(3) As Point3dDim i_index As IntegerDim j_index As IntegerDim newShpVers(3) As Point3dDim k As IntegerDim sm As BooleanDim dp1 As Point3dDim dp2 As Point3dDim NewTri As ShapeElementDim triGrp As NamedGroupElementSet triGrp = ActiveModelReference.GetNamedGroup(\"triangles\")Vcnt1 = ele1.VerticesCountVcnt2 = ele2.VerticesCountVers1 = ele1.GetVerticesVers2 = ele2.GetVerticesFor i_index = 0 To Vcnt1 - 2 Spoints(i_index) = Point3dFromXYZ(0, 0, 0)For j_index = 0 To Vcnt2 - 2If Vers1(i_index).X = Vers2(j_index).X And (Vers2(j_index).Z &lt;&gt; -666666.666) And (Vers1(i_index).Z &lt;&gt; -666666.666) Then Spoints(i_index) = Vers1(i_index) End IfNextNextFor i_index = 0 To UBound(Spoints) - 1For j_index = 0 To UBound(Vers1) - 1If Vers1(j_index).X = Spoints(i_index).X Then Vers1(j_index) = Point3dFromXYZ(0, 0, 0)NextNextFor i_index = 0 To UBound(Spoints) - 1For j_index = 0 To UBound(Vers2) - 1If Vers2(j_index).X = Spoints(i_index).X Then Vers2(j_index) = Point3dFromXYZ(0, 0, 0)NextNextFor i_index = 0 To UBound(Vers1) - 1If Vers1(i_index).X &lt;&gt; 0 Then dp1 = Vers1(i_index)NextFor i_index = 0 To UBound(Vers2) - 1If Vers2(i_index).X &lt;&gt; 0 Then dp2 = Vers2(i_index)NextFor i_index = 0 To UBound(Spoints)If Spoints(i_index).X &lt;&gt; 0 Thenk = 0newShpVers(k) = Spoints(i_index)newShpVers(k + 1) = dp1newShpVers(k + 2) = dp2newShpVers(k + 3) = Spoints(i_index)Set NewTri = CreateShapeElement1(Nothing, newShpVers)NewTri.Level = FindLevel(\"三角网\")NewTri.Color = 4NewTri.LineStyle = ActiveDesignFile.LineStyles(\"0\")ActiveModelReference.AddElement NewTriNewTri.RewriteNewTri.Redraw msdDrawingModeNormal If Not (triGrp Is Nothing) Then If triGrp.GetMember(NewTri) Is Nothing Then triGrp.AddMember NewTri End IfEnd IfNext If Not (triGrp Is Nothing) Then triGrp.Rewrite End IfActiveModelReference.RemoveElement ele1ActiveModelReference.RemoveElement ele2End SubFunction DelLineZ(Ele As LineElement) As LineElementDim vCnt As IntegerDim indx As LongDim LineEle As LineElementSet LineEle = Ele vCnt = LineEle.VerticesCount For indx = 1 To vCnt - 1 LineEle.Vertex(indx).Z = 0 LineEle.Rewrite Next Set DelLineZ = LineEleEnd FunctionSub ExportPoints(DtaFileName As String, fileFormat As String, SelMethod As Integer)Dim PointsFileName As String '地形碎部点文件名Dim FileNumber As IntegerDim pX As DoubleDim pY As DoubleDim pH As DoubleDim pNum As StringDim pNumTmp As LongDim ps As StringDim DataLine As StringOn Error GoTo extDim dxGrp As NamedGroupElementDim tmpLine As LineElementDim triModel As ModelReferenceDim oScanCriteria As ElementScanCriteriaFileNumber = FreeFile Set triModel = ActiveModelReference Open DtaFileName For Output As #FileNumberIf SelMethod = 1 Then'自动选择全部地形点If ActiveModelReference.GetNamedGroup(\"dxpoints\") Is Nothing Then oScanCriteria.ExcludeAllLevels oScanCriteria.IncludeLevel FindLevel(\"地形点标记\") Set triEe = triModel.GraphicalElementCache.Scan(oScanCriteria) Do While triEe.MoveNext If triEe.Current.Type = msdElementTypeLine And triEe.Current.HasXData(\"surmap_points\") Then Set tmpLine = triEe.Current pNumTmp = pNumTmp + 1 pNum = pNumTmp pX = tmpLine.StartPoint.X pY = tmpLine.StartPoint.Y pH = tmpLine.StartPoint.Z Select Case fileFormat Case \"psenh\" DataLine = pNum &amp; \",,\" &amp; pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH Case \"psneh\" DataLine = pNum &amp; \",,\" &amp; pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH Case \"penh\" DataLine = pNum &amp; \",\" &amp; pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH Case \"pneh\" DataLine = pNum &amp; \",\" &amp; pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH Case \"enh\" DataLine = pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH Case \"neh\" DataLine = pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH End Select Print #FileNumber, DataLine End If LoopElse triModel.UnselectAllElements Set dxGrp = ActiveModelReference.GetNamedGroup(\"dxpoints\") dxGrp.SelectElements msdMemberTraverseSimple Set triEe = triModel.GetSelectedElements Do While triEe.MoveNext If triEe.Current.HasXData(\"surmap_points\") And triEe.Current.Type = msdElementTypeLine Then Set tmpLine = triEe.Current pNumTmp = pNumTmp + 1 pNum = pNumTmp pX = tmpLine.StartPoint.X pY = tmpLine.StartPoint.Y pH = tmpLine.StartPoint.Z Select Case fileFormat Case \"psenh\" DataLine = pNum &amp; \",,\" &amp; pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH Case \"psneh\" DataLine = pNum &amp; \",,\" &amp; pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH Case \"penh\" DataLine = pNum &amp; \",\" &amp; pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH Case \"pneh\" DataLine = pNum &amp; \",\" &amp; pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH Case \"enh\" DataLine = pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH Case \"neh\" DataLine = pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH End Select Print #FileNumber, DataLine End If Loop triModel.UnselectAllElementsEnd IfElse'手动选择部分地形点 Set triEe = triModel.GetSelectedElements Do While triEe.MoveNext If triEe.Current.HasXData(\"surmap_points\") And triEe.Current.Type = msdElementTypeLine Then Set tmpLine = triEe.Current pNumTmp = pNumTmp + 1 pNum = pNumTmp pX = tmpLine.StartPoint.X pY = tmpLine.StartPoint.Y pH = tmpLine.StartPoint.Z Select Case fileFormat Case \"psenh\" DataLine = pNum &amp; \",,\" &amp; pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH Case \"psneh\" DataLine = pNum &amp; \",,\" &amp; pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH Case \"penh\" DataLine = pNum &amp; \",\" &amp; pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH Case \"pneh\" DataLine = pNum &amp; \",\" &amp; pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH Case \"enh\" DataLine = pY &amp; \",\" &amp; pX &amp; \",\" &amp; pH Case \"neh\" DataLine = pX &amp; \",\" &amp; pY &amp; \",\" &amp; pH End Select Print #FileNumber, DataLine End If Loop triModel.UnselectAllElementsEnd IfClose #FileNumberext:End SubSub DelLevelLine() Dim oScanCriteria As ElementScanCriteria Set oScanCriteria = New ElementScanCriteria Dim lvlEe As ElementEnumerator Dim mLvlGrp As NamedGroupElement Dim clvlGrp As NamedGroupElement If ActiveModelReference.GetNamedGroup(\"mainlevelline\") Is Nothing Then oScanCriteria.ExcludeAllLevels oScanCriteria.IncludeLevel FindLevel(\"等高线首曲线\") Set lvlEe = ActiveModelReference.GraphicalElementCache.Scan(oScanCriteria) Do While lvlEe.MoveNext If lvlEe.Current.Type = msdElementTypeBsplineCurve Then ActiveModelReference.RemoveElement lvlEe.Current End If LoopElse ActiveModelReference.UnselectAllElements Set mLvlGrp = ActiveModelReference.GetNamedGroup(\"mainlevelline\") mLvlGrp.SelectElements msdMemberTraverseSimple CadInputQueue.SendCommand \"DELETE ELEMENT\"End If If ActiveModelReference.GetNamedGroup(\"countlevelline\") Is Nothing Then oScanCriteria.ExcludeAllLevels oScanCriteria.IncludeLevel FindLevel(\"等高线计曲线\") Set lvlEe = ActiveModelReference.GraphicalElementCache.Scan(oScanCriteria) Do While lvlEe.MoveNext If lvlEe.Current.Type = msdElementTypeBsplineCurve Then ActiveModelReference.RemoveElement lvlEe.Current End If LoopElse ActiveModelReference.UnselectAllElements Set mLvlGrp = ActiveModelReference.GetNamedGroup(\"countlevelline\") mLvlGrp.SelectElements msdMemberTraverseSimple CadInputQueue.SendCommand \"DELETE ELEMENT\"End IfEnd SubSub LableLevelLine(lEle As LineElement) Dim oScanCriteria As ElementScanCriteria Dim lvlEe As ElementEnumerator Dim bspLine As BsplineCurveElement Dim interPoints1() As Point3d Dim interPoints2() As Point3d Dim interPointsM() As Point3d Dim lblI As Long Dim CurElevation As String Dim NewEle1 As Element Dim NewEle2 As Element Dim oeColor As Integer Dim Lpoints(1) As Point3d Dim cLine1 As LineElement Dim cLine2 As LineElement Dim lblWidth As Single Dim clvlGrp As NamedGroupElement Dim etxtEle As TextElement Dim lblScale As String Dim cScale As Single On Error Resume Next '提取绘图比例 lblScale = LoadScalePara(ActiveDesignFile.DefaultModelReference, \"(C)SurMap.com Parameter\") If lblScale = \"\" Then cScale = 500 / 1000 Else cScale = lblScale / 1000 End If If ActiveModelReference.GetNamedGroup(\"countlevelline\") Is Nothing Then Set clvlGrp = ActiveModelReference.AddNewNamedGroup(\"countlevelline\") Else Set clvlGrp = ActiveModelReference.GetNamedGroup(\"countlevelline\") End If Set oScanCriteria = New ElementScanCriteria oScanCriteria.ExcludeAllLevels oScanCriteria.IncludeLevel FindLevel(\"等高线计曲线\") Set lvlEe = ActiveModelReference.GraphicalElementCache.Scan(oScanCriteria) Do While lvlEe.MoveNext If lvlEe.Current.Type = msdElementTypeBsplineCurve Then Set bspLine = lvlEe.Current If bspLine.HasXData(\"surmap_countlevelline\") Then CurElevation = getElementXdata(bspLine, \"surmap_countlevelline\", msdXDatumTypeString) ElseIf bspLine.StartPoint.Z &lt;&gt; 0 Then CurElevation = bspLine.StartPoint.Z Else CurElevation = 0 End If lblWidth = cScale * Len(CurElevation) Lpoints(0).X = lEle.StartPoint.X + lblWidth * Cos(Azimuth(lEle.StartPoint.X, lEle.StartPoint.Y, lEle.EndPoint.X, lEle.EndPoint.Y) + 3.1415926 / 2) Lpoints(0).Y = lEle.StartPoint.Y + lblWidth * Sin(Azimuth(lEle.StartPoint.X, lEle.StartPoint.Y, lEle.EndPoint.X, lEle.EndPoint.Y) + 3.1415926 / 2) Lpoints(1).X = lEle.EndPoint.X + lblWidth * Cos(Azimuth(lEle.StartPoint.X, lEle.StartPoint.Y, lEle.EndPoint.X, lEle.EndPoint.Y) + 3.1415926 / 2) Lpoints(1).Y = lEle.EndPoint.Y + lblWidth * Sin(Azimuth(lEle.StartPoint.X, lEle.StartPoint.Y, lEle.EndPoint.X, lEle.EndPoint.Y) + 3.1415926 / 2) Set cLine1 = CreateLineElement1(Nothing, Lpoints) ActiveModelReference.AddElement cLine1 cLine1.Rewrite Lpoints(0).X = lEle.StartPoint.X + lblWidth * Cos(Azimuth(lEle.StartPoint.X, lEle.StartPoint.Y, lEle.EndPoint.X, lEle.EndPoint.Y) - 3.1415926 / 2) Lpoints(0).Y = lEle.StartPoint.Y + lblWidth * Sin(Azimuth(lEle.StartPoint.X, lEle.StartPoint.Y, lEle.EndPoint.X, lEle.EndPoint.Y) - 3.1415926 / 2) Lpoints(1).X = lEle.EndPoint.X + lblWidth * Cos(Azimuth(lEle.StartPoint.X, lEle.StartPoint.Y, lEle.EndPoint.X, lEle.EndPoint.Y) - 3.1415926 / 2) Lpoints(1).Y = lEle.EndPoint.Y + lblWidth * Sin(Azimuth(lEle.StartPoint.X, lEle.StartPoint.Y, lEle.EndPoint.X, lEle.EndPoint.Y) - 3.1415926 / 2) Set cLine2 = CreateLineElement1(Nothing, Lpoints) ActiveModelReference.AddElement cLine2 cLine2.Rewrite interPoints1 = bspLine.GetIntersectionPointsOnIntersector(cLine1, Matrix3dIdentity) interPoints2 = bspLine.GetIntersectionPointsOnIntersector(cLine2, Matrix3dIdentity) interPointsM = bspLine.GetIntersectionPointsOnIntersector(lEle, Matrix3dIdentity) If UBound(interPoints1) = UBound(interPoints2) Then For lblI = LBound(interPoints1) To UBound(interPoints1) oeColor = bspLine.Color Set etxtEle = CrtElevationText(CurElevation, interPoints1(lblI), Azimuth(interPoints1(lblI).X, interPoints1(lblI).Y, interPoints2(lblI).X, interPoints2(lblI).Y), cScale, oeColor) clvlGrp.AddMember etxtEle interPoints1(lblI).Z = 0 interPoints2(lblI).Z = 0 interPointsM(lblI).Z = 0 bspLine.PartialDelete NewEle1, NewEle2, interPoints1(lblI), interPoints2(lblI), interPointsM(lblI), msdView1 bspLine.Redraw msdDrawingModeTemporaryErase ActiveModelReference.RemoveElement bspLine NewEle1.Color = oeColor NewEle1.Level = FindLevel(\"等高线计曲线\") ActiveModelReference.AddElement NewEle1 NewEle1.Rewrite clvlGrp.AddMember NewEle1 NewEle2.Color = oeColor NewEle2.Level = FindLevel(\"等高线计曲线\") ActiveModelReference.AddElement NewEle2 NewEle2.Rewrite clvlGrp.AddMember NewEle2 clvlGrp.Rewrite Next End If ActiveModelReference.RemoveElement cLine1 ActiveModelReference.RemoveElement cLine2 End If Loop ActiveModelReference.RemoveElement lEleEnd Sub'创建计曲线高程标注文本Function CrtElevationText(str As String, midpoint As Point3d, rAng As Double, cScale As Single, txtColor As Integer) As TextElementDim txtTmp As TextElementDim txtPoint As Point3dDim tSize As DoubletSize = 3 * cScaletxtPoint.X = midpoint.X + cScale * 1.5 * Cos(rAng + 3.1415926 / 2) '- Len(str) * tSize / 2 * Abs(Cos(rAng)) '+ 3 * 0.5 'curScaletxtPoint.Y = midpoint.Y + cScale * 1.5 * Sin(rAng + 3.1415926 / 2) 'Len(str) * tSize / 2 * Abs(Sin(rAng)) + 3 * cScale 'curScaleSet txtTmp = CreateTextElement1(Nothing, str, txtPoint, Matrix3dFromAxisAndRotationAngle(2, rAng))Set txtTmp.TextStyle = adTextStyle(\"设计线标注\", \"宋体\", 0.4, 0.4)txtTmp.TextStyle.Height = tSizetxtTmp.TextStyle.Width = tSizetxtTmp.TextStyle.Color = txtColortxtTmp.Level = FindLevel(\"等高线计曲线\")ActiveModelReference.AddElement txtTmptxtTmp.RewritetxtTmp.RedrawSet CrtElevationText = txtTmpEnd FunctionSub CreateShortLineProfile(spoint As Point3d, epoint As Point3d, LevelName As String)Dim Lpoints(1) As Point3dDim cLine As LineElementLpoints(0) = spointLpoints(1) = epointSet cLine = CreateLineElement1(Nothing, Lpoints)cLine.Level = FindLevel(LevelName)cLine.Color = 5cLine.LineStyle = ActiveDesignFile.LineStyles(\"4\")cLine.LineWeight = 1ActiveModelReference.AddElement cLinecLine.RewritecLine.RedrawEnd SubFunction ChkEleExist(id As DLong, appName As String, LevelName As String) As BooleanDim ckEe As ElementEnumeratorDim ckScanCri As ElementScanCriteriaSet ckScanCri = New ElementScanCriteriaChkEleExist = FalseckScanCri.ExcludeAllLevelsckScanCri.IncludeLevel FindLevel(LevelName)Set ckEe = ActiveModelReference.GraphicalElementCache.Scan(ckScanCri)Do While ckEe.MoveNextIf DLongComp(ckEe.Current.id, id) = 0 ThenChkEleExist = TrueExit DoEnd IfLoopEnd FunctionSub SectionInit()If SectionLoaded = False ThenCommandState.StartDefaultCommandCadInputQueue.SendCommand \"MDL SILENTLOAD SECTION;\", FalseSendKeys (\"%{F4}\")SectionLoaded = TrueEnd IfEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-模块-SubFuncForCell", "url": "/posts/mstn-xm-vba-code-subfuncforcell-bas/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-03-08 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 模块名：SubFuncForCell.basAttribute VB_Name = \"SubFuncForCell\"Public CellLibAttached As BooleanSub AttachCellLib(CellLibName As String) AttachCellLibrary CellLibName, msdConversionModeAlways If IsCellLibraryAttached Then CellLibAttached = True Else CellLibAttached = False End IfEnd SubSub AddPointCell(actModel As ModelReference, cellName As String, cellPoint As Point3d, cellColor As Integer, CellLevel As String, relatedPointID As DLong)Dim adCell As CellElementDim adLinePoint1 As Point3dDim adLinePoint2 As Point3dDim adEle As TextElementDim adName As TextElementSet adCell = CreateCellElement3(cellName, cellPoint, True)actModel.AddElement adCelladCell.Color = cellColorSet adCell.Level = FindLevel(CellLevel)SetElementXdata adCell, \"surmap_controlpoint\", msdXDatumTypeString, DLongToString(relatedPointID)adCell.RewriteadCell.RedrawadLinePoint1.X = cellPoint.X + 2adLinePoint1.Y = cellPoint.YadLinePoint1.Z = 0adLinePoint2.X = cellPoint.X + 5adLinePoint2.Y = cellPoint.YadLinePoint2.Z = 0CreateShortLineCell adLinePoint1, adLinePoint2, CellLevel, cellColor, 1, 0DelPointLabel actModel, relatedPointIDEnd SubFunction GetPointName(pId As DLong) As StringDim LineEle As ElementDim pntInfo As StringDim pntInfos If ChkEleExist(pId, \"surmap_points\", \"地形点标记\") Then Set LineEle = ActiveModelReference.GetElementByID(peditLastPointID) pntInfo = getElementXdata(LineEle, \"surmap_points\", msdXDatumTypeString) pntInfos = Split(pntInfo, \"|\") GetPointName = pntInfos(0) Else GetPointName = \"\" End IfEnd FunctionSub CreateShortLineCell(spoint As Point3d, epoint As Point3d, LevelName As String, lColor As Integer, lStyle As Integer, lWeight As Integer)Dim Lpoints(1) As Point3dDim cLine As LineElementLpoints(0) = spointLpoints(1) = epointSet cLine = CreateLineElement1(Nothing, Lpoints)cLine.Level = FindLevel(LevelName)cLine.Color = lColorcLine.LineStyle = ActiveDesignFile.LineStyles(lStyle)cLine.LineWeight = lWeightActiveModelReference.AddElement cLinecLine.RewritecLine.RedrawEnd SubSub DelPointLabel(mdlIn As ModelReference, pId As DLong)Dim labelId As DLongDim LabelEle As ElementDim pntById As ElementDim pntInfo As StringDim pntInfos If ChkEleExist(pId, \"surmap_points\", \"地形点标记\") Then Set pntById = mdlIn.GetElementByID(pId) pntInfo = getElementXdata(pntById, \"surmap_points\", msdXDatumTypeString) pntInfos = Split(pntInfo, \"|\") labelId = DLongFromString(pntInfos(3)) If ChkEleExist(labelId, \"surmap_pointlabel\", \"地形点标注\") Then Set LabelEle = mdlIn.GetElementByID(labelId) mdlIn.RemoveElement LabelEle End If End IfEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-模块-StartUpModel", "url": "/posts/mstn-xm-vba-code-StartUpModel-bas/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-03-07 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 模块名：StartUpModel.basAttribute VB_Name = \"StartUpModel\"'将读取CPU和硬盘序列号的Reg.DLL放在指定位置Private Declare Function GetCPUID Lib \"reg.mvba\" () As StringPrivate Declare Function ReadPhysicalDrive Lib \"reg.mvba\" () As StringPrivate Declare Function CreateSerialNumber Lib \"reg.mvba\" () As StringPrivate Declare Function GetMD5Str Lib \"reg.mvba\" (ByVal str As String) As String'Private Declare Function Des Lib \"D:\\SerDLL\\reg.dll\" () As Long'The following code is from a Code Module. It simplycreates an instance of the class that has the WithEvents declaration.Dim oOpenClose As clsOpenCloseSub SetupHooks() Set oOpenClose = New clsOpenCloseEnd SubPublic Sub OnProjectLoad()Call SetupHooksEnd SubSub Init()Dim CpuInfo As StringDim HdInfo As StringDim RegCodeStr As StringDim MD5Str As StringDim RegFilePath As StringDim RegFile As New clsIniFileDim regStatus As BooleanDim ReadBit(12) As IntegerDim i As IntegerDim j As IntegerDim RegChr As StringReadBit(0) = 5ReadBit(1) = 4ReadBit(2) = 7ReadBit(3) = 6ReadBit(4) = 6ReadBit(5) = 8ReadBit(6) = 5ReadBit(7) = 4ReadBit(8) = 8ReadBit(9) = 4ReadBit(10) = 6ReadBit(11) = 9ReadBit(12) = 5regStatus = FalseSectionLoaded = FalseCpuInfo = GetCPUID()HdInfo = Trim(ReadPhysicalDrive())MD5Str = GetMD5Str(CpuInfo &amp; HdInfo)If Right(Application.Path, 1) &lt;&gt; \"\\\" ThenRegFilePath = Application.Path &amp; \"\\\"ElseRegFilePath = Application.PathEnd IfRegFile.INIFileName = RegFilePath &amp; \"regfile.ini\"RegCodeStr = RegFile.GetIniKey(\"注册信息\", \"注册码\")For i = 0 To UBound(ReadBit)j = ReadBit(i)RegChr = Mid(MD5Str, j, 1)If Mid(RegCodeStr, i + 1, 1) = RegChr ThenregStatus = TrueElseregStatus = FalseEnd IfNextIf regStatus ThenRegOk = True'RegCom.Visible = FalseElse'RegCom.Visible = TrueRegOk = FalseEnd IfEnd Sub" }, { "title": "MicroStation XM 断面处理程序源码-模块-menu", "url": "/posts/mstn-xm-vba-code-menu-bas/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, XM, 代码", "date": "2008-03-06 00:00:00 +0800", "snippet": "MicroStation XM VBA编写的工程测量断面处理程序，与目前的MicroStation CE不兼容，需稍作调整方可在CE中运行。代码中大部分代码和功能、过程与目前高版一样，可以参考使用。 模块名：menu.basAttribute VB_Name = \"menu\"Sub LoadPointsCom()loadPointsFrm.ShowEnd SubSub ExportPointsCom()ExportPointFrm.ShowEnd SubSub MakeDTMCom()TrianglesFrm.ShowEnd SubSub DTMEditCom()If RegOk ThenDtmEditFrm.ShowElseRegFrm.ShowEnd IfEnd SubSub MakeProfileCom()If RegOk ThenmapProfileSet.ShowElseRegFrm.ShowEnd IfSectionInitEnd SubSub MakeLevelCom()mapLevelFrm.ShowSectionInitEnd SubSub LabelLevelLineCom() CommandState.StartPrimitive New clsSelectElementEnd SubSub delLevelLineCom()DelLevelLineEnd SubSub ProfilesListCom()ViewModelFrm.ShowEnd SubSub DrawProfilesCom()LineFileFrm.ShowEnd SubSub ProfileLineInfoCom()LineInfoFrm.ShowEnd SubSub DesignLinesCom()If RegOk ThenDesignLineFrm.ShowElseRegFrm.ShowEnd IfEnd SubSub SetOriginCom()soFrm.ShowEnd SubSub SetParaCom()SetParaFrm.ShowEnd SubSub OnlineHelpCom()Shell \"explorer http://www.surmap.com/zt/ustationmap/\"End SubSub AboutMeCom()splashForm.ShowEnd SubSub RegistorCom()RegFrm.ShowEnd SubSub PointEditCom()PointEditFrm.ShowEnd Sub" }, { "title": "Launching VBA Applications As Initapps Or Dgnapps", "url": "/posts/mstn-vba-Launching-VBA-Applications-As-Initapps-Or-Dgnapps/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, 加载, 自动运行", "date": "2007-04-09 00:00:00 +0800", "snippet": " Running VBA Application as an Initapp Running VBA Application as a DgnappMicroStation V8 allows users to run MDL applications at the startup of MicroStation using the MS_INITAPPS environment variable, and at the opening of a new design file with the MS_DGNAPPS variable. The delivered Runmacro MDL application allows you similar functionality for MicroStation BASIC macros. Now with MicroStation VBA, you can also emulate these options for users running MicroStation V8 version 08.00.02.20 or higher.Running VBA Application as an InitappThere are two major steps involved in setting up your application for the startup of MicroStation V8. The first is to create a subroutine called OnProjectLoad(). This is the routine that gets called when MicroStation loads a MicroStation VBA project:Option ExplicitSub OnProjectLoad()' Start hereMsgBox \"MicroStation VBA Starting here\"End SubThe next step is to check the Auto-Load option on in the VBA Project Manager.Now every time you start MicroStation, your MicroStation VBA Project will load automatically.Running VBA Application as a DgnappSetting a MicroStation VBA application to run as a Dgnapp will require you to implement the IPrimitive and ILocate events. This involves calling an instance of your class to monitor for the opening and closing of a design file. The first step is to insert a class module into your project and call it OpenClose:Next, you will need to go to the top of your Module code and declare a global class variable as follows:Option ExplicitDim oOpenClose As OpenCloseThe “Option Explicit” statement implies that the user must define each variable’s datatype or you will receive an error when trying to run your code.Next, you want to create a new instance of the class object you just defined in your subroutine:Sub Main()Set oOpenClose = New OpenCloseEnd SubNow that we have created a new instance of the class, we need to link the class into the module to look for specific events. Go back to your class and type in the following statements:Option ExplicitDim WithEvents hooks As ApplicationPrivate Sub Class_Initialize()Set hooks = ApplicationEnd SubThe code you entered initializes the class to monitor events in MicroStation (in our case we want to look for opening and closing of the design files). Now we have to add the code for the events and for those operations we want to perform when the event occurs. The following code is used to monitor for the open event:Private Sub hooks_OnDesignFileOpened(ByVal dgnFileName As String)MsgBox \"Opening DGN file \" + dgnFileNameEnd SubThis event will get called by your VBA application every time a new design file is opened. The class will provide the “dgnFileName” variable for you to use. Now we need to write the code for the close event:Private Sub hooks_OnDesignFileClosed(ByVal dgnFileName As String)MsgBox \"Closing DGN file \" + dgnFileNameEnd SubNow that we have our logic written, the final step is to ensure that the Auto-Load option for this project is checked for the Autoload.mvba example, or else we would need to manually load and run the project ourselves.In review, we now know how to create and automate VBA applications for Initapps and Dgnapps. They are a convenient and time-saving method to running VBA applications in MicroStation V8.See Also" }, { "title": "READING AND WRITING TEXT FILES", "url": "/posts/mstn-vba-reading-writing-text-files/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, 文本文件, 文件读写", "date": "2007-04-01 00:00:00 +0800", "snippet": " Opening Files Open For Read Open For Write Reading from a text file Writing to a text file Closing files Putting it all togetherBeing able to read from and write to text files in VBA is useful for the import/export of coordinate data as well as other file and configuration parameters.Opening FilesTo work with a text file you will typically need to dimension three variables: A String variable for the file name Dim txtFileName As String A second String variable for the line of text to read/write Dim txtFileLine As String A Long variable for a file number required by VBA Dim txtFileNumber As LongAfter the variables are dimensioned the next step is to find an available file number to use for opening the file and the required file I/O. Use the VBA FreeFile function to assign the next available number.txtFileNumber = FreeFileOnce you have an available file number you can open the file.Open For ReadUse the For Input option of the open command to open a text file for reading. The file must exist prior to issuing the open statement or VBA will raise an error. Checking for the existence of a file, and error handling will be discussed in future tips.Open txtFileName For Input As #txtFileNumberOpen For WriteWhen opening a text file for writing you have two options. The For Output option will create a new file if it does not exist, or clear out the contents of the file if it does exist. The For Append option will also create a new file, but will add new lines on to the end of the file if it already exists.Open txtFileName For Output As #txtFileNumberOpen txtFileName For Append As #txtFileNumberReading from a text fileUse the following loop structure as a template for processing the entire file:Do While Not EOF(txtFileNumber)Line Input #txtFileNumber, txtFileLine'' Do something with the text here'LoopText files are accessed sequentially which means if you are only interested a particular line you will need to skip the lines you are not interested in to get to the line you a want. The following loop structure will help you accomplish this:For i = 1 to linesToSkipLine Input #txtFileNumber, txtFileLineNextLine Input #txtFileNumber, txtFileLine'' Do something with the text here'Writing to a text fileOnce you get your line of text formatted a simple print statement is all that’s needed to write to the file.Print #txtFileNumber, txtFileLineClosing filesOnce you are done interacting with the text file you will need to close it.` Close txtFileNumber`Putting it all togetherThe following subroutine illustrates one way to read text from an input file, modify the line, and then write it to an output file.Sub TextFileIO_Example() Dim txtFileName_IN As String Dim txtFileNumber_IN As Long Dim txtFileLine_IN As String Dim txtFileName_OUT As String Dim txtFileNumber_OUT As Long Dim txtFileLine_OUT As String txtFileName_IN = \"C:\\Temp\\TextFile_IN.txt\" txtFileName_OUT = \"C:\\Temp\\TextFile_OUT.txt\" txtFileNumber_IN = FreeFile Open txtFileName_IN For Input As #txtFileNumber_IN txtFileNumber_OUT = FreeFile Open txtFileName_OUT For Output As #txtFileNumber_OUT Do While Not EOF(txtFileNumber_IN) Line Input #txtFileNumber_IN, txtFileLine_IN txtFileLine_OUT = \"# \" &amp; txtFileLine_IN Print #txtFileNumber_OUT, txtFileLine_OUT Loop Close txtFileNumber_OUT Close txtFileNumber_INEnd Sub" }, { "title": "ToolSettings Key-Ins", "url": "/posts/mstn-vba-toolsettings-keyins/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, key-in, 代码", "date": "2007-03-10 00:00:00 +0800", "snippet": "The CadInputQueue.SendCommand and CadInputQueue.SendKeyin methods are easy ways for programmers to automate MicroStation tasks in their VBA macros. One problem that users encounter is how to adjust the Tool settings for a particular command. As it turns out there is a key-in command that can help with that as well.To find the Tool settings key-ins for an individual tool select the tool from the menu. In this example we are using Place Block. With the tool active open the Key-in window and enter the string: set item toolsettings but do not hit Enter. The available toolsettings key-ins for the active tool will be displayed in the far right list box. Those key-ins can be used in your macro with the SendKeyin method to ensure the toolsettings are configured correctly. With CadInputQueue 'Start place block tool .SendCommand \"place block icon\" 'set the block type to Orthogonal .SendKeyin \"set item toolsettings placeblocktype=0\" 'set the area to Solid .SendKeyin \"set item toolsettings elementarea=0\" 'set the fill type to Opaque .SendKeyin \"set item toolsettings elementfill=1\" 'set the fill color to 3 .SendKeyin \"set item toolsettings elementfillcolor=3\" End With" }, { "title": "Use Key-in Commands When Learning vba", "url": "/posts/mstn-vba-use-keyin-in-vba/", "categories": "编程开发, VBA-MicroStation", "tags": "MicroStation, VBA, key-in, 代码", "date": "2007-03-06 00:00:00 +0800", "snippet": "Non-programmers attempting to learn VBA can be easily overwhelmed by the complicated object definitions. While familiarizing yourself with VBA utilize MicroStation key-in commands as much as possible to ease the transition. Many MicroStation key-ins can be used in VBA using the CadInputQueue.SendKeyin method. As you become more proficient in VBA you can start replacing the key-in commands with more efficient MicroStation VBA methods.Consider the two macros below, ChangeToByLevel1 and ChangeToByLevel2. They both change all elements in the active model to the Default level and use ByLevel symbology. Most MicroStation users can understand the first macro as it uses all MicroStation key-in commands to accomplish the task. The second macro uses more complex MicroStation VBA methods to directly modify the elements.Sub ChangeToByLevel1() ' ' set desired symbology ' CadInputQueue.SendKeyin \"lv=default\" CadInputQueue.SendKeyin \"co=bylevel\" CadInputQueue.SendKeyin \"lc=bylevel\" CadInputQueue.SendKeyin \"wt=bylevel\" ' ' choose all the elements and change their symbology ' CadInputQueue.SendKeyin \"choose all\" CadInputQueue.SendKeyin \"change level\" CadInputQueue.SendKeyin \"change color\" CadInputQueue.SendKeyin \"change linestyle\" CadInputQueue.SendKeyin \"change weight\" CadInputQueue.SendKeyin \"choose none\"End SubSub ChangeToByLevel2() Dim es As ElementScanCriteria Dim ee As ElementEnumerator Dim lvDefault As Level Dim lsByLevel As LineStyle Dim elemArray() As Element Dim i As Long Dim iStart As Long Dim iEnd As Long ' ' set the output level and linestyle objects ' Set lvDefault = ActiveDesignFile.Levels.Find(\"Default\") Set lsByLevel = ByLevelLineStyle ' ' define the scan criteria ' Set es = New ElementScanCriteria es.ExcludeNonGraphical ' ' create the element array ' Set ee = ActiveModelReference.Scan(es) elemArray = ee.BuildArrayFromContents ' ' change the symbology of each element ' iStart = LBound(elemArray) iEnd = UBound(elemArray) For i = iStart To iEnd Set elemArray(i).Level = lvDefault elemArray(i).Color = -1 elemArray(i).LineWeight = -1 Set elemArray(i).LineStyle = lsByLevel elemArray(i).Rewrite Next End Sub" }, { "title": "测图坐标系与工程坐标系转换公式：", "url": "/posts/construction-coordination-sys/", "categories": "测量测绘, 公式", "tags": "坐标系, 公式", "date": "2006-10-03 00:00:00 +0800", "snippet": " 1、测图坐标系-&gt;工程坐标系公式： 2、工程坐标系-&gt;测图坐标系： 说明1、测图坐标系-&gt;工程坐标系公式：xp=(Xp-Xo)cos(a)+(Yp-Yo)sin(a)+xoyp=-(Xp-Xo)sin(a)+(Yp-Yo)cos(a)+yo2、工程坐标系-&gt;测图坐标系：Xp=Xo+(xp-xo)cos(a)-(yp-yo)sin(a)Yp=Yo+(xp-xo)sin(a)+(yp-yo)cos(a)说明Xp、Yp：待求点测图坐标xp、yp：待求点工程坐标Xo、Yo：工程坐标系原点测图坐标xo、yo： 工程坐标系原点工程坐标a：工程坐标系x轴在测图坐标系中的坐标方位角" }, { "title": "关于自动加载 AutoLISP 应用程序", "url": "/posts/lisp-auto-load-lisp-code-and-run/", "categories": "编程开发, AutoLISP", "tags": "帮助", "date": "2006-09-18 13:49:10 +0800", "snippet": " 添加到启动组 使用 CUI 加载 使用 acad.lsp 文件要自动加载 AutoLISP 例程，请将它们添加到 AutoCAD 启动组，或者使用 acad.lsp 文件加载它们。添加到启动组 运行 APPLOAD（命令）。 在启动组下，单击内容按钮。 单击添加按钮。 浏览到 LISP 文件的位置，选择它，然后单击打开按钮。 将所有 LISP 例程添加到启动组后，单击关闭按钮。 再次单击关闭以关闭“加载/卸载应用程序”对话框。使用 CUI 加载 运行 CUI（命令） 选择“acad.cuix”（或自定义局部 .cuix）。 选择 LISP 文件，然后单击鼠标右键。 从关联菜单中选择加载 LISP。 浏览到要添加的 LISP 的位置，然后选择该文件。 单击“应用并关闭”以退出 CUI 编辑器。使用 CUI 加载 LISP 例程使用 acad.lsp 文件AutoCAD 启动时总是会加载 acad.lsp 文件。 如果 acad.lsp 中定义了特殊函数 S::STARTUP，将会执行该函数。例如，每次运行 AutoCAD 时，都要加载两个名为 stair.lsp 和 wall.lsp 的 AutoLISP 例程。创建一个包含以下代码行的 acad.lsp 文件，并将其放在 AutoCAD 支持路径中。(defun s::startup ()(load \"STAIR.LSP\")(load \"WALL.LSP\"))如果 wall.lsp 和 stair.lsp 位于 AutoCAD 搜索路径中，它们将会自动加载。如果 AutoLISP 例程不在 AutoCAD 支持路径中，请在 acad.lsp 文件中包含完整路径。使用“/”或“\\”作为路径分隔符。在相同示例中，acad.lsp 文件应如下所示：(defun s::startup ()(load \"C:/PROG/LISP/STAIR.LSP\")(load \"C:\\\\PROG\\\\LISP\\\\WALL.LSP\"))如果这样定义 S::STARTUP 函数，当有其他应用程序也使用 S::STARTUP 函数时（例如某个第三方插件），可能会出现问题。为了确保兼容性，请在存在现有的 S::STARTUP 函数时附加代码。要执行此操作，请添加以下代码：(defun mystartup ()(load \"C:/PROG/LISP/STAIR.LSP\")(load \"C:\\\\PROG\\\\LISP\\\\WALL.LSP\"))(if s::startup(setq s::startup (append s::startup (quote ((mystartup)))))(defun s::startup () (mystartup)))注意：每次启动 AutoCAD 时，都会运行 acad.lsp 文件。每次打开图形时，都会运行 acaddoc.lsp 文件。" }, { "title": "关于加载 AutoLISP 应用程序", "url": "/posts/lisp-about-autolisp-load/", "categories": "编程开发, AutoLISP", "tags": "帮助", "date": "2006-09-18 13:49:10 +0800", "snippet": " 关于加载 AutoLISP 应用程序关于加载 AutoLISP 应用程序需要将 AutoLISP 文件加载到 AutoCAD，然后才能使用它们。AutoLISP 应用程序存储在可编辑的 ASCII 文本文件中，其扩展名为 .lsp。这些文件通常有一个标题部分，用于说明程序及其用法，以及其他特别说明。该标题可能还包括注释，用于记录关于使用该程序的作者和版权信息。注释以分号 (;) 开始。可以用文本编辑器或能生成 ASCII 文本文件的字处理器来查看和编辑这些文件。重要信息 从基于 AutoCAD 2014 的产品开始，当 SECURELOAD 系统变量设定为 1 或 2 时，自定义应用程序必须在安全模式下工作。在安全模式下进行操作时，程序限制为从“支持文件搜索路径”中的受信任位置加载和执行包含代码的文件；受信任的位置由 TRUSTEDPATHS 系统变量指定。有关详细信息，请参见“关于防止恶意代码”。AutoLISP 应用程序必须先加载后才能使用。可以用 APPLOAD 命令或 AutoLISP load 函数来加载应用程序。加载 AutoLISP 应用程序会将 AutoLISP 代码从 LSP 文件加载到系统内存中。如果 LSP 文件不位于“支持文件搜索路径”中，则必须在 Filename 参数中指定一个相对支持路径。Appload加载应用程序对话框用 load 函数加载应用程序需要在命令提示下输入 AutoLISP 代码。如果 load 函数执行成功，则在命令提示下显示文件中最后一个表达式的值。该值通常是文件中定义的最后一个函数的名称，或关于新加载的函数的用法说明。如果 load 函数执行失败，则返回一条 AutoLISP 错误消息。 load 失败的原因可能是文件的编码错误或是提供了错误的文件名。load 函数的语法为：(load filename [onfailure])此语法表示 load 函数具有两个参数： filename （必需）和 onfailure （可选）。在命令提示下加载 AutoLISP 文件时，通常只需提供 filename 参数。下例将加载 AutoLISP 文件 newfile.lsp。命令: (load \"newfile\").lsp 扩展名不是必需的。此格式对位于当前库路径中的任何 LSP 文件都有效。要加载不在库路径中的 AutoLISP 文件，必须提供完整的路径和文件名作为 filename 参数。命令: (load \"d:/files/morelisp/newfile\")注意指定目录路径时，必须用一个斜杠 (/) 或两个反斜杠 (\\) 作为分隔符，因为单个反斜杠在 AutoLISP 中具有特殊意义。" }, { "title": "关于 AutoLISP 应用程序", "url": "/posts/lisp-about-autolisp/", "categories": "编程开发, AutoLISP", "tags": "帮助", "date": "2006-09-18 13:39:10 +0800", "snippet": " 关于 AutoLISP 应用程序关于 AutoLISP 应用程序AutoLISP 基于简单易学而又功能强大的 LISP 编程语言。由于 AutoCAD 具有内置 LISP 解释器，因此用户可以在命令提示下输入 AutoLISP 代码，或从外部文件加载 AutoLISP 代码。AutoLISP 是用于自动执行设计任务的应用程序接口。当加载 AutoLISP 应用程序后，它在自己的名称空间中为每个打开的图形执行任务。名称空间是一个隔离的环境，用于避免特定于某一文档的 AutoLISP 应用程序与另一个图形中的程序在符号或变量名和值方面发生冲突。例如，当在每个打开的图形中执行代码时，如下代码行将为符号 a 设置不同的值。(setq a (getvar \"DWGNAME\"))AutoLISP 应用程序能够提示用户输入、直接访问内置 AutoCAD 命令，以及直接在图形数据库中修改或创建对象。通过创建 AutoLISP 程序，可以向 AutoCAD 添加专用命令或由工作流驱动的命令。实际上，某些标准 AutoCAD 命令是 AutoLISP 应用程序。用户可以选择进行试验：在命令提示下输入代码后可立即看到结果。这使 AutoLISP 语言容易试验，而不管用户的编程经验如何。AutoLISP 提供了三种文件格式的应用程序： 读取 LSP 文件 (.lsp) — 包含 AutoLISP 程序代码的 ASCII 文本文件。 读取 FAS 文件 (.fas) — 单个 LSP 程序文件的二进制编译版本。 读取 VLX 文件 (.vlx) — 一个或多个 LSP 文件和/或对话框控制语言 (DCL) 文件的编译集。注意：名称相似的 AutoLISP 应用程序文件的加载由它们的编辑时间决定。除非指定完整的文件名（包括文件扩展名），否则将加载最近编辑过的 LSP、FAS 或 VLX 文件。即使用户对编写 AutoLISP 应用程序不感兴趣，程序中也包含许多有用的程序。也可以从 Internet 或第三方开发商处下载 AutoLISP 应用程序。了解如何加载和使用这些程序有助于提高生产率。" }, { "title": "高斯克吕格投影换带计算(高斯正反算公式)", "url": "/posts/gauss/", "categories": "编程开发, 通用源码, VB", "tags": "高斯, 换带, 投影, 公式", "date": "2006-09-05 00:00:00 +0800", "snippet": "//高斯投影正、反算 //////6度带宽 54年北京坐标系 //高斯投影由经纬度(UnitD)反算大地坐标(含带号，Unit:Metres) void GaussProjCal(double longitude, double latitude, double *X, double *Y) {int ProjNo=0; int ZoneWide; ////带宽 double longitude1,latitude1, longitude0,latitude0, X0,Y0, xval,yval;double a,f, e2,ee, NN, T,C,A, M, iPI;iPI = 0.0174532925199433; ////3.1415926535898/180.0; ZoneWide = 6; ////6度带宽 a=6378245.0; f=1.0/298.3; //54年北京坐标系参数 ////a=6378140.0; f=1/298.257; //80年西安坐标系参数 ProjNo = (int)(longitude / ZoneWide) ; longitude0 = ProjNo * ZoneWide + ZoneWide / 2; longitude0 = longitude0 * iPI ;latitude0=0; longitude1 = longitude * iPI ; //经度转换为弧度latitude1 = latitude * iPI ; //纬度转换为弧度e2=2*f-f*f;ee=e2*(1.0-e2);NN=a/sqrt(1.0-e2*sin(latitude1)*sin(latitude1));T=tan(latitude1)*tan(latitude1);C=ee*cos(latitude1)*cos(latitude1);A=(longitude1-longitude0)*cos(latitude1);M=a*((1-e2/4-3*e2*e2/64-5*e2*e2*e2/256)*latitude1-(3*e2/8+3*e2*e2/32+45*e2*e2*e2/1024)*sin(2*latitude1)+(15*e2*e2/256+45*e2*e2*e2/1024)*sin(4*latitude1)-(35*e2*e2*e2/3072)*sin(6*latitude1));xval = NN*(A+(1-T+C)*A*A*A/6+(5-18*T+T*T+72*C-58*ee)*A*A*A*A*A/120);yval = M+NN*tan(latitude1)*(A*A/2+(5-T+9*C+4*C*C)*A*A*A*A/24+(61-58*T+T*T+600*C-330*ee)*A*A*A*A*A*A/720);X0 = 1000000L*(ProjNo+1)+500000L; Y0 = 0; xval = xval+X0; yval = yval+Y0; *X = xval;*Y = yval;}//高斯投影由大地坐标(Unit:Metres)反算经纬度(UnitD)void GaussProjInvCal(double X, double Y, double *longitude, double *latitude) {int ProjNo; int ZoneWide; ////带宽 double longitude1,latitude1, longitude0,latitude0, X0,Y0, xval,yval;double e1,e2,f,a, ee, NN, T,C, M, D,R,u,fai, iPI;iPI = 0.0174532925199433; ////3.1415926535898/180.0; a = 6378245.0; f = 1.0/298.3; //54年北京坐标系参数 ////a=6378140.0; f=1/298.257; //80年西安坐标系参数 ZoneWide = 6; ////6度带宽 ProjNo = (int)(X/1000000L) ; //查找带号longitude0 = (ProjNo-1) * ZoneWide + ZoneWide / 2; longitude0 = longitude0 * iPI ; //中央经线X0 = ProjNo*1000000L+500000L; Y0 = 0; xval = X-X0; yval = Y-Y0; //带内大地坐标e2 = 2*f-f*f;e1 = (1.0-sqrt(1-e2))/(1.0+sqrt(1-e2));ee = e2/(1-e2);M = yval;u = M/(a*(1-e2/4-3*e2*e2/64-5*e2*e2*e2/256));fai = u+(3*e1/2-27*e1*e1*e1/32)*sin(2*u)+(21*e1*e1/16-55*e1*e1*e1*e1/32)*sin(4*u)+(151*e1*e1*e1/96)*sin(6*u)+(1097*e1*e1*e1*e1/512)*sin(8*u);C = ee*cos(fai)*cos(fai);T = tan(fai)*tan(fai);NN = a/sqrt(1.0-e2*sin(fai)*sin(fai));R = a*(1-e2)/sqrt((1-e2*sin(fai)*sin(fai))*(1-e2*sin(fai)*sin(fai))*(1-e2*sin(fai)*sin(fai)));D = xval/NN;//计算经度(Longitude) 纬度(Latitude)longitude1 = longitude0+(D-(1+2*T+C)*D*D*D/6+(5-2*C+28*T-3*C*C+8*ee+24*T*T)*D*D*D*D*D/120)/cos(fai);latitude1 = fai -(NN*tan(fai)/R)*(D*D/2-(5+3*T+10*C-4*C*C-9*ee)*D*D*D*D/24+(61+90*T+298*C+45*T*T-256*ee-3*C*C)*D*D*D*D*D*D/720); //转换为度 DD*longitude = longitude1 / iPI; *latitude = latitude1 / iPI;}几个重要参数的意义：NN卯酉圈曲率半径，测量学里面用N表示 M为子午线弧长，测量学里用大X表示 fai为底点纬度，由子午弧长反算公式得到，测量学里用Bf表示R为底点所对的曲率半径，测量学里用Nf表示" }, { "title": "AutoLISP笔记-常用函数代码片断", "url": "/posts/autolisp-function-snippets/", "categories": "编程开发, 通用源码, AutoLISP", "tags": "AutoLISP, 字符串", "date": "2006-09-03 00:00:00 +0800", "snippet": " 1、字符串按指定分隔符分隔 2、字符串按指定分隔符分隔增强 3、获取日期 4、获取日间 5、指定点写入文本串 6、用系统关联软件打开文件1、字符串按指定分隔符分隔;;;功能：字符串按指定分隔符分隔;;;(split \"1,,255280.791,3743764.732,2786.206\" \",\");;;返回：(\"1\" \"\" \"255280.791\" \"3743764.732\" \"2786.206\")(defun split (str delim / LST POS) (while (setq pos (vl-string-search delim str)) (setq lst (append lst (list (substr str 1 pos)))) (setq str (substr str (+ 2 pos))) ) (if (&gt; (strlen str) 0) (append lst (list str)) lst ))2、字符串按指定分隔符分隔增强分隔符可以是字串，用于取文件名，用扩展名作为分隔符;;;(splitX \"C:\\\\Users\\\\....25～K1+013.52；EL.2776.73～EL.2804.74）.dat\" \".dat\");;;返回：(C:\\\\Users\\\\....25～K1+013.52；EL.2776.73～EL.2804.74）)(defun splitX (str delim / LST POS) (while (setq pos (vl-string-search delim str)) (setq lst (append lst (list (substr str 1 pos)))) (setq str (substr str (+ (+ pos (strlen delim)) 1))) ) (if (&gt; (strlen str) 0) (append lst (list str)) lst ))3、获取日期;;;功能：获取时间，要用到splitx自定义函数，返回“20170511”类型的字符串(defun date () (setq datetime (rtos (getvar \"cdate\") 2 6)) (car (splitx datetime \".\")))4、获取日间;;;功能：获取时间函数，要用到splitx自定义函数，返回“110253”类型的时间字符串(defun time () (setq datetime (rtos (getvar \"cdate\") 2 6)) (cadr (splitx datetime \".\")))5、指定点写入文本串;功能：在指定点写入文本串;用法：(_text (getpoint \"Pick\") \"3333\" 2 0)(defun _text (point string height rotation / space text) (setq\tacdoc (vla-get-activedocument (vlax-get-acad-object))\t\tspace (vlax-get-property\t\tacdoc\t\t\t\t(if (= 1 (getvar 'CVPORT))\t\t\t\t 'Paperspace\t\t\t\t 'Modelspace\t\t\t\t)\t\t ) ) (setq text (vla-addtext space string (vlax-3D-point point) height)) (vla-put-alignment text acalignmentmiddlecenter) (vla-put-textalignmentpoint text (vlax-3D-point point)) (vla-put-rotation text rotation) text)6、用系统关联软件打开文件;用法：(setq fl (getfiled \"创建面积统计文件\" (cond ( \\*file\\* ) ( \"\" )) \"txt;csv;xls\" 1));(_Open (findfile fl)) (defun _Open ( target / Shell result ) (if (setq Shell (vla-getInterfaceObject (vlax-get-acad-object) \"Shell.Application\")) (progn (setq result (and (or (eq 'INT (type target)) (setq target (findfile target))) (not (vl-catch-all-error-p (vl-catch-all-apply 'vlax-invoke (list Shell 'Open target)) ) ) ) ) (vlax-release-object Shell) ) ) result )" }, { "title": "How to string keyins together or create keyin scripts", "url": "/posts/mstn-keyins-string-script/", "categories": "MicroStation, 键入", "tags": "MicroStation, 脚本, key-in", "date": "2006-09-02 00:00:00 +0800", "snippet": " Action Strings Action Types Action Type Options Stringing Multiple Keyins Together Script FilesOriginal Article Date: January 2001Updated: August 2006Originally titled The Power of Keyins - Part 2 and published in the July 2000 issue of the MicroStation Manager Magazine, this tutorial covers how to create script files to streamline your workflows.The ability to string keyins together is often referred to as a keyin script or action string. Whatever terminology you use, it’s all a fairly easy to understand. In addition, by understanding the various options and components of action strings, you’lll be able to create very powerful scipts to streamline your workflow and minimize repetitive tasks. Let’s get started!Action StringsWhatever MicroStation does when you activate a tool, menu item or function key can be referred to as an Action String. In other words, there is always some kind of keyin that executes a set of instructions when one of these items is selected. A great example of an action string is the F8 function key which toggles the display of construction elements on or off with this keyin: set construct toggle; selview all; update all where…set construct toggle Is the actual command to turn the construction elements on or off.selview all Instructs MicroStation to apply the keyin to all views.update all Updates all the views.Action TypesThere are a variety of action types associated with tools, view controls, menu items and function keys. Note that some of these pre-date the current version of MicroStation and are shown with a (*). Action Type Syntax Description Command Entry Keyin E,[keyin] Whatever keyin is specified, it is always activated regardless of the state of the current tool. Terminated Keyin T,[keyin] A terminated keyin is one that prompts the user for additional information such as the radius of a circle, text, or an answer to a yes/no question. Unterminated Key-in K,[keyin] An un-terminated string of characters waits for the user to finish the string. Print Message M,ER[message] Prints the message on the left side of the status bar. Print Message M,ST[message] Prints the message on the right side of the status bar in MicroStation /J and in the Message Center in MicroStation V8. Print Message M,CF[message] Prints the message as the left side a MicroStation prompt. Print Message M,PR[message] Prints the message as the right side of a MicroStation prompt. Place Active Cell - Absolute C,[cellname] Sets the Active Cell to the specified cellname and activates the Place Cell Absolute. Place Active Cell - Relative R,[cellname] Sets the Active Cell to the specified cellname and activates the Place Cell Relative keyin. Tutorial (*) D,[tutorial] Activates the specified tutorial. User command (*) U,[ucm_num] Activates user command defined in the user command index file for [ucm_num] Primitive (*) P,[primitive] Activates keyin by its IGDS primitive name (*) MicroStation Pre-V8A couple of things to point out with Action Types:If no type is specified, then MicroStation assumes that it will be a command entry keyin (E).For some terrific examples of action strings, take a look at the sample tablet menu in this file: …\\workspace\\system\\menus\\dgn\\v8menu.dgn. You’ll want to navigate to the Command model and view the Command Text level.Action Type OptionsIn addition to the Action Types, there are several options which can be used following the E, T or K action types. These options can be positioned anywhere in a multiple action string and must be followed with a semi-colon. Option Description / A forward slash will cause MicroStation to wait for user input such as entering a value. /d Causes MicroStation to wait for a data point. /k Makes MicroStation wait for a keyin % This is the same as the forward slash except that MicroStation won’t display its normal prompts. Stringing Multiple Keyins TogetherThere are two ways of stringing keyins together. The first is to simply keyin them all in on one line and separate each keyin with a semi-colon. This is typically referred to as an action string. The other is to use a script file which is described below. Seriously, that’s all there is to it.Take this for example, this action string sets up your attributes and then selects the correct drawing tool.CO=3;LV=12;LC=2;WT=4;PLACE SMARTLINEWhere:CO=3 Sets the Active Colour to number 3LV=12 Sets the Active Level to 12LC=2 Sets the Active Line Style to 2WT=4 Sets the Active Weight to 4PLACE SMARTLINE Activates the Place Smartline toolAnd this example shows the use of the various action types. After setting up the active attributes, it places a circle with a 12 inch radius at a user-defined point:CO=7;LV=23;LC=0;WT=1;E,Place Circle Radius;T,12;M,Place Manhole;%d;nullWhere:CO=7 Sets the Active Colour to number 7LV=23 Sets the Active Level to 23LC=0 Sets the Active Line Style to 0WT=1 Sets the Active Weight to 1E,Place Circle radius A command keyin which activates the Place Circle Radius toolT,12 A terminated keyin that enters a radius of 12M,Place Manhole Displays a message in the status bar which reads “Place Manhole”%d MicroStation waits for a data point which defines the location of the manhole.NULL After the arc has been placed, MicroStation executes the NULL key-in so that no tool or view control is active.Script FilesSimply put, a script file is a list of MicroStation keyins stored in an external text file such as the following two examples. Note that in this case, you can enter each keyin on a separate line rather than stringing them all together on one line as described above.Script files can be executed a number of different ways:Run from the key-in window by keying in @script_file. For example, the keyin: @c:/temp/my_commands.txt will immediatly kick off the list of MicroStation commands found in the file c:\\temp\\my_commands.txt. Note, be certain to include the full path if the file is not in the current working directory.Run from a function key by simply editing a function key to execute the keyin: @script_file as described above.Run the script file at the startup of MircroStation by appending the -s[script_file] command line switch as shown below.Finally, you can run a script against multiple files by utilizing MicroStation V8’s Batch Process Utility. This utility lets your create and run a script that can be executed on either individual files or entire directories full of files. In this case, the script file is referred to as a command file…All in all it’s just the same thing.Whatever your need is for stringing multiple keyins together, there’s no doubt that utilizing script files will allow you to improve upon your workflows. Have fun!AskInga Article #37" }, { "title": "MicroStation基础之模型（Model）", "url": "/posts/mstn-model/", "categories": "MicroStation, 基础", "tags": "MicroStation, 模型", "date": "2006-03-03 00:00:00 +0800", "snippet": " 模型的类别和用途 模型的锁定与解锁此处的模型是指类似于AutoCAD中的绘图空间和图纸空间概念，不是指图形中的三维元素对象。模型的类别和用途DGN中的模型有三种类型： 设计(Design) 绘图(Drawing) 图纸(Sheet)一般来说，我们在设计模型中创建三维实体（可能是多个三维模型参考后组成总装模型）。将三维模型通过动态视图切图到绘图模型中，在绘图模型中进行标注。最后再以不同的出图比例将绘图模型参考到图纸模型中。这样的一个应用图示如下：还有简单的应用模式就是只用设计模型和图纸模型的。对于纯二维图纸，还有用户直接用设计模型绘制而后出图的。模型的锁定与解锁MicroStation中提供有键入命令Model Lock用来锁定当前模型，被锁定的模型无法编辑修改。该命令为隐藏命令，但键入后可以正确执行。解锁命令为Model Unlock，用于对当前加锁的模型解锁。这两个命令后面还可以跟模型名用来对非当前模型进行加解锁。如：Model Lock “My Created Model”或Model Unlock “My Created Model”。当然，如果模型名中不含有空格的话，可以在键入命令中去掉模型名两端的双引号。除了可以对模型加解锁以外，还可以对层进行加解锁。被锁定层上的元素不可编辑，但可以复制（居然可以在加锁的层上添加元素，这一点需要注意。但一旦添加了元素，该元素就不能编辑了）。层的加解锁可通过界面方便完成。如下图所示，在层管理器中打开层的Lock列（右击列头勾选Lock可实现），用鼠标在某层的该列处点击即可实现层锁的加和解功能。更低级别的加解锁是元素加解锁。同理，被加锁的元素不可编辑。可在元素信息对话框中对元素加解锁，如下图所示。当然，只有该元素未在加锁模型中且未在加锁层上时才能对元素加锁或解锁，否则，Locked选项为灰色，不可编辑。如果一个DGN文件本身是只读的（可通过Windows系统来设置和查看文件只读属性），则打开后所有内容都是只读的。还有就是如果DGN文件为可读写，但我们在用MicroStation打开时勾选了Open as Read-Only选项则整个文件也会是只读的。所以，如果发现一个元素无法删除或移动，可以从其被加锁的方面来分析：①含该元素的DGN文件设置了只读属性吗？②打开该DGN文件时勾选了Open as Read-Only吗？③元素所在的模型加锁了吗？④元素所在的层加锁了吗？⑤元素本身加锁了吗？当然，创建于TriForma平台的元素（如ABD中创建的元素）在MicroStation中也是不可编辑的，这是通过元素依赖技术来实现的，与以上五个原因无关。可在ABD中通过TFREMOVE命令先删除TriForma属性后再回到MicroStation中就能编辑了。其中的TF就是TriForma的缩写。Tri有“三”的意思，Forma有“体”的意思，合起来就是三维体的意思。" }, { "title": "Blog Theme Chirpy-Writing a New Post", "url": "/posts/blog-theme-chirpy-writing-a-new-post/", "categories": "系统软件, 网络", "tags": "blog", "date": "2006-01-02 22:10:00 +0800", "snippet": "This post will guide you how to write a post on Chirpy theme. Even if you have previous experience with Jekyll, this article is worth reading, because many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG] # TAG names should always be lowercase--- The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).&lt;author_id&gt;: name: &lt;full name&gt; twitter: &lt;twitter_of_author&gt; url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt; # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;] # for multiple entries---Having said that, the key author can also identify multiple entries. The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](2022-09-19-08-52-12.png){: width=\"700\" height=\"400\" }Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](2022-09-19-08-52-12.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right. Once the position is specified, the image caption should not be added. Normal position Image will be left aligned in below sample: ![Desktop View](/img/res/weixin_qd.jpg){: .normal } Float to the left ![Desktop View](/img/res/weixin_qd.jpg){: .left } Float to the right ![Desktop View](/img/res/weixin_qd.jpg){: .right } ShadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/img/res/weixin_qd.jpg){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\"&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\"&gt;Preview ImageIf you want to add an image to the top of the post contents, specify the attribute path, width, height, and alt for the image:---image: path: /path/to/image/file width: 1000 # in pixels height: 400 # in pixels alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. The above section “Size” also mentions this.Starting from Chirpy v5.0.0, the attributes height and width can be abbreviated: height → h, width → w. In addition, the img_path can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.Starting from Chirpy v5.2.0, the property for the preview image is changed to image.path. If upgrading the theme from a prior version, you will have to update posts’ metadata to use new image property.Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value``` The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %} This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts." }, { "title": "Blog Theme Chirpy-Text and Typography", "url": "/posts/blog-theme-chirpy-text-and-typography/", "categories": "系统软件, 网络", "tags": "blog", "date": "2006-01-02 19:33:00 +0800", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at once I saw a crowd,A host, of golden daffodils;Beside the lake, beneath the trees,Fluttering and dancing in the breeze.ListsOrdered list Firstly Secondly ThirdlyUnordered list Chapter Section Paragraph Task list TODO Completed Defeat COVID-19 Vaccine production Economic recovery People smile again Description list Sun the star around which the earth orbits Moon the natural satellite of the earth, visible by reflected light from the sunBlock Quote This line shows the block quote.Prompts An example showing the tip type prompt. An example showing the info type prompt. An example showing the warning type prompt. An example showing the danger type prompt.Tables Company Contact Country Alfreds Futterkiste Maria Anders Germany Island Trading Helen Bennett UK Magazzini Alimentari Riuniti Giovanni Rovelli Italy Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Images Default (with caption)Full screen width and center alignment Shadowshadow effect (visible in light mode) Left aligned Float to left “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.” Float to right “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.” Mermaid SVG gantt title Adding GANTT diagram functionality to mermaid apple :a, 2017-07-20, 1w banana :crit, b, 2017-07-23, 1d cherry :active, c, after b a, 1dMathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blockCommonThis is a common code snippet, without syntax highlight and line number.Specific LanguagesConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then echo \"The command was not successful.\"; #do the needful / exitfi;Specific filename@import \"colors/light-typography\", \"colors/dark-typography\"Reverse Footnote The footnote source &#8617; The 2nd footnote source &#8617; " }, { "title": "Visual Studio Code之Markdown编辑器增强", "url": "/posts/vscode-markdown-editor/", "categories": "编程开发, IDE", "tags": "IDE, 扩展, 插件", "date": "2006-01-02 00:00:00 +0800", "snippet": " 安装扩展Paste Image 设置Paste Image参数一直想找一个功能齐全的Markdown编辑器，最好是能粘贴图片并自动将图片保存到指定目录且在文中添加图片地址。经过耐心的寻找、安装试用，发现“Typora”非常不错。此软件对粘贴图片支持较好，而且是同步渲染预览。但在安装Visual Studio Code后在扩展插件的支持下，也能实现相同功能，而且VScode功能更多，界面更美观，非常满意。现就VScode完善Markdown编辑器功能进行的设置详述如下：Paste Image是一个截图粘贴的插件。用截图软件截图后，Ctrl+Alt+v粘贴到markdown文档上。安装扩展Paste Image设置Paste Image参数需要设置的主要参数为： Default Name：YMMDD-HHmmss Paste Image: Path 粘贴文件时存放图片的目标目录 Paste Image: Base Path 这个设置会影响到粘贴文件时候 (/image/xxxx.png) 路径的粘贴, 不然会显示 (../images/xxxx.png) Paste Image: Insert Pattern 粘贴到文档中的图片URIJekyll博客中的图片不能放在文档所在目录下并在Markdown中使用相对目录，这样在上传后图片不能显示。必须存放在博客根目录下的一个子目录中如“img”，并在文档中图片地址以“/img/”格式从根开始，若使用相对地址，会出现在首页显示图片而进入文档后又不显示的情况，这是因在进入文档后地址会相对地发生改变。针对此情况，图片只能存放在“_post”同级的“img”目录下，对此设置为：Default Name：“YMMDD-HHmmss”Paste Image: Path “../img/2019/”Paste Image: Base Path “/img/2019/”Paste Image: Insert Pattern “![${imageFileNameWithoutExt}](/img/2019/${imageFileName})”可在Markdown中直接使用HTML语句，如可将图片插入地址用HTML语句将Paste Image: Insert Pattern 设置以下值实现图片居中：&lt;div style=\"text-align:center;\"&gt;&lt;img src=\"/img/2019/${imageFileName}\"&gt;&lt;/div&gt;参数设置见下图：其它参数保持默认即可。Paste Image安装设置好后，用截图软件截图到剪贴板，回到VS code中用快捷键Ctrl+Alt+V即可将图片保存到文档下的“Images”目录下并同时将图片地址添加到文档中。唯一的遗憾是预览时不能显示图片，只能显示一个无效提示。" }, { "title": "Gitalk评论插件设置详解", "url": "/posts/GtalkSetting/", "categories": "系统软件, 网络", "tags": "blog", "date": "2006-01-02 00:00:00 +0800", "snippet": "Gitalk 是一个基于 Github Issue 和 Preact 开发的评论插件。为什么我要写这篇博文，是因我用Github搭建我的博客页面，在安装Gitalk插件时按网上文章介绍进行配置，在运行时总是出现错误：每篇文章都只突出解释了某一条设置，如有文章在说到“repo”变量时提到是库名，有一篇文章更是说是博客地址，这几种说法貌似也对，但严格来说却并不正确，而正确的设置是类似于“qin-dong.github.io”的库名。不管是带上.git的库地址还是带上https的博客地址都是不正确的。正确的设置如下：Gitalk评论效果参见本人github页面：" }, { "title": "Visual Studio Code blog platform", "url": "/posts/github-blog-platform/", "categories": "系统软件, 网络", "tags": "blog", "date": "2006-01-01 00:00:00 +0800", "snippet": " VSC Blog IDE PasteImage设置参数 PasteImage使用方法 VSC扩展VSC Blog IDE 安装Visual Studio Code，也可在Windows应用商店中安装； 安装用于VSC的git 安装Windows桌面版git 安装git 三个git均可同时安装，可在VSC内提交、也可在桌面版的git内提交 使用桌面版git克隆blog； 在VSC内将blog目录qin-dong.github.io设置为工作区主目录； 安装VSC扩展PasteImage，并进行相应设置 安装VSC扩展MarkDown All in One。PasteImage设置参数Base Path:${projectRoot}Default Name:Y-MM-DD-HH-mm-ssEncode Path:rulEncodeSpaceFile Path Confirm Imput Box Mode:onlyNameForce Unix Style Separator:Checked'Inser Patterm:${imageSyntaxPrefix}${imageFilePath}${imageSyntaxSuffix}'居中显示图像Inser Patterm:&lt;div style=\"text-align:center;\"&gt;&lt;img src=\"${imageFilePath}\"&gt;&lt;/div&gt;Name Prefix:nullname Suffix:nullPath:${projectRoot}/img/2022/Prefix:/Show File Path Confirm Imput Box:uncheckedSuffix:nullPasteImage使用方法 拷贝或截图到剪贴板 VSC内粘贴快捷键：Ctrl+Alt+VVSC扩展 PasteImage Markdown Preview Enhanced Markdown PDF Highlight Matching Tag Todo Tree AutoCAD AutoLISP Extension" }, { "title": "覃氏普舍堂综述", "url": "/posts/qins-pushetang/", "categories": "国学典籍, 历史", "tags": "覃氏", "date": "2005-09-09 08:56:00 +0800", "snippet": " 覃氏普舍堂综述 一、覃氏“普舍堂”源流 二、覃氏“普舍堂”派辈排行 三、覃氏“普舍堂”族谱 四、覃氏“普舍堂”祠堂 五、覃氏“普舍堂”典型世系 十二大房由来 六、“普舍堂”覃氏代表人物 普舍堂历史人物（按照派序排序） 民间有关于覃侯伯的传说 普舍堂现代人物（大致按照年龄排序） 覃吉豫 覃吉甫 覃福民 覃祥官 覃发池 覃发国 覃万德 覃万建 覃祥虎 覃万勤 覃万谋 覃鸿 覃照 覃进 覃涛 覃梅春 七、“普舍堂”覃氏文物、遗址、集聚地 八、历修族谱文献摘录 覃氏源流总序 前明老谱序 百字俚言 1、 训孝一则 2、 训弟（悌）一则 3、 训忠一则 4、 训信一则 5、 训礼一则 6、 训义一则 7、 训廉一则 8、 训耻一则 9、 训读一则 10、 训耕一则 派系汇一表 族长户首入祠模 家规总录（十条） 祖茔坟墓公山总赞（节选） 怀古诗（1—6作者：谷人） 覃氏谱序 修谱总序 克明公墓志 石砚记 白果树辨 化龙修谱传序 涉园先生序 润堂先生传 化龙先生序 涉园夫子传 九、湖北省长阳“普舍堂”覃氏文学 族人诗词选 覃氏普舍堂综述——《中华覃氏志·湖北卷》专稿 覃建军1（执笔）、 覃发祝2、 覃万庆3、 覃万建41四川大学、2长阳电力局、3长阳榔坪镇、4宜昌市政府 一、覃氏“普舍堂”源流根据光绪二十七年湖北长阳《普舍堂·覃氏族谱·源流总序》（二修谱）中的记载：“粤考人皇时，有皇覃氏。《禹贡》‘覃怀底绩’。周穆王时，有竺氏封此，因地为姓，暨《事类赋》云：‘覃姓老人拾西流树植此，后分二枝，有似佛国普树舍树者，大至数十围，子弟踏青，歌舞其下，其花自发，遂名为普舍树。’至梁有无克公为梁州刺史，遂家汉中。至唐天宝西巡，覃氏率千余人护驾，封十八洞掌印将军。迨汝先公袭职仕宋，子孙世守，屡建奇功，始得闻其略。明初添顺公纳土归附，庆历间【在乾隆年间因避讳乾隆帝的名字“弘历”，而改写为“庆历”。不是北宋的年号。】亦渐凌夷，中间或显或晦，大抵世居外藩，文章不少概见，盖亦史志所不及载者。自百川公移居黄陵庙（即今湖北省宜昌市夷陵区三斗坪镇黄陵庙），七世孙添玛徙长阳，建添玛观于此，其后始繁。明末胤宿、胤兰双凤齐飞，又因西蛮乱，无所建白，仅传兰公举人。时言添标大房居川，添顺二房驻防施州，而三房添玛入垠报恳，事在洪武初年，据亦失传。易三世而厚公、和公生畇、畛、畯、畴，析分长阳之后河，衍为九房【应有十二房】，分为内外，瓜瓞蔓延，猗与盛哉，非百川之汇东海吞沅、澧、沮、漳也哉。逮国朝定鼎，分逃四方，下至松枝【注：现松滋和枝江一带】、湖南，上至施州、永顺，音问不通，派序各别，概难收取。总之，代远年湮，文献无考，名未着于天，家谱未衍于先贤，其尚何所征信哉？其所征信者，特近地一脉耳。因考而志之，序而次之，后有志者踵其事，亦可知前人不暇修，而后人修之。”在《明前老谱序》中又言：“始祖蜀裔，峡州流寓。三百余年，贼乱明纪。族众逃窜，奔走流离。大清安定，去而复还。旧谱已失，新纂留参。合集考订，访缺补残。讨究数处，编序从祖。百川千绪，万派一源。”在族谱《前代家声》中有记载：“皇古时，远祖皇覃”；后汉时远祖覃万传系“陕西汉中府南郑县人氏。后汉，诸葛征蛮时，由部长授总管军职，升授十八洞蛮掌印总管军。”梁朝时，远祖覃无克系“梁州刺史，又云东宁刺史”、覃元先系“公孙克孙百年后复为宁州【注：今甘肃宁县】刺史。天宝十五年【注：唐朝756年】安禄山入寇，由陕西汉中府南郑县徙西蜀瞿塘关，或云汝先公领千余人迎驾入川，即落籍于此。”宋朝时汝先公“配向氏。公生大宋元符年戊寅岁，当五季世乱，前辈失传，莫知所考，公随长子住施州，享年八十九岁，自公以下历历可考矣。”汝先公长子白坚公“配唐氏。（祖籍）迁陕西汉中府南郑县人也，唐时天宝年间安禄山乱，徙居瞿塘（今四川夔州），历五季兵燹，前代失传莫知所考，至宋元符戊寅年生祖汝先焉，聘娶向氏，生长子白坚、次子白圭。公于庆元三年随长子住施州，享年八十九岁，卒于淳熙十三年，葬施州。伯祖覃白坚受宋行军总管之职。庆元三年因平蜀将吴曦乱有功封行军总管施州，而聘唐氏封太君焉。公生绍兴二年壬子，卒葬施州柳州城之后，其分居施南东乡、散毛唐崖今峝蠾壁，后居长阳、巴东、建始、石壁、招徕、盐井、麻旸、杆子哨等处，俱系本支。”之后又对“伯祖覃白坚”的子孙详细记载到善教和世奇、世美、世臣。《普舍堂·覃氏族谱·源流考证》是这样记载世祖的：一柱公的“生殁年月妣氏失考。子一：十厚。愚考公由瞿塘关徙居江南，约在宋南渡后，或系汝先公支派流落徐州，毫无依倚，遂以一至千万取派，已有为一世祖意后，遂由此发迹，存参。”三世祖百川公“生殁年月氏失考，配黎氏。子一：千绪。旧谓公系江西南昌府南昌县太平街大花栗树土地人氏。因江西填湖广遂迁老黄陵庙与庙僧相善，遂痘医于此。殁后葬庙左，断碣存焉，妣氏生殁年月坟墓未详。本祠以公始迁于此，遂以为始祖，约与白坚、白圭二公同时，遂配享为大宗。”谱书中记载了远祖迁徙的大致情况，即始居四川，从瞿塘关迁居江南，流落徐州又迁江西南昌府，再因江西填湖广到宜昌黄陵庙。从一世祖一柱公到第三世百川公，颠沛流离，从百川公落籍黄陵庙到第十二世添玛公共十代人，基本稳定在此一带，添玛公于洪武二年始迁长阳，发展到了现在的第三十六世，在长阳繁衍了二十五代、几万人。同治《咸丰县志》、《来凤县志》录《湖广通志》云：“施州漫水寨有木，名普舍树。普舍者，华言风流也。昔覃氏祖于东门关伐一异木，随流至那车，复生根而活，四时开百种花。覃氏子孙歌舞其下，花乃自落，取而簪之。他姓往歌，花不复落。尤为异也。”在研究鄂西土家族文化之关于摆手舞的论文和文献中也记载“覃姓老人拾西流树植此，后分二枝，有似佛国普树、舍树者，大至数十围，子弟踏青，歌舞其下，其花自发，遂名为普舍树”，并考证所记载的歌舞即鄂西流传至今的土家族摆手舞。在长阳土家族自治县经过“湖北省舞蹈家协会常务理事”、“中国舞蹈家协会会员”、被誉为“巴山舞之父”的覃发池（六房后裔）多年的挖掘、研究和整理成了著名的“巴山舞”。堂号命名为“普舍堂”，与传说关联，与民族文化和风俗源流联系紧密，可见其源远流长。《覃氏族谱》载：“愚考前数十辈，俱先朝土官【即土司王】，不国历世相传，只溯其本，其枝分派别，何以稽考。”一世祖一柱公，“原籍瞿塘关。由瞿塘关徙居江南，约在宋南渡后，或系汝先公支派流落徐州，毫无依靠，遂以一至千万取派。”一世祖一柱公住江南徐州府沛县大王庄。一柱公之子十厚公由徐州迁江西南昌府南昌县太平街大花栗树落业，后世江西填湖广。三世祖百川公遂迁老黄陵庙，“与庙僧相善，遂痘医于此”。三友坪覃氏祠堂以覃百川始迁黄陵庙为始祖，约与“光裕堂”覃氏白坚、白圭二公同时代人，配享大宗，《明前老谱序》中称白坚公为“伯祖”。四世祖千绪公生三子：万一、万二、万三。五世祖万一公，配胡氏，分居黄陵庙，生子三：长妙才、次妙修、三妙惠；覃万二，配李氏，系湖南澧州华阳王赘婿，故澧县至今仍有族人；覃万三，配赵氏，其后裔分布于枝江等处。六世祖妙才公，葬东湖县下牢溪天柱山，生子汝通。七世祖汝通公生三子：长子再兴公之后居东湖人丁极盛、次子再旺公之后居东湖未详、三子再洪公生二子铭和钏。九世祖钏公生子允祯、允祥。十世祖允祥公生子俊、纯。十一世祖覃纯公生添玛、添珠、添珊。十二世祖添玛公元末徙居长阳，于明洪武二年报垦，遂落三友坪，二弟添珊公之后分住红花套、松滋、枝江等处，三弟添珠之后居彝陵，人丁繁衍。三友坪覃氏以添玛公始入长阳，“奉为小宗，弟添珊、添珠配之，同宗添标、添顺相之。”“普舍堂覃氏”又称为“三友坪覃氏”，区别于渔峡口的“光裕堂白虎垄覃氏”、资坵的“中州堂 柿贝覃氏”和“离光堂 梓抧坪覃氏”。 三友坪现存留“添玛观”、覃氏祠堂遗址。“添玛观”始建于宜昌县黄陵庙附近，后在三友坪重建添玛观。二修谱中录有谷人所咏诗云：“添玛观怀古：高观凌云矗，楼台依翠微。与名同不朽（东湖有观亦此名），人世亦何希。薜荔沿三径，河山界四围。尚留丹灶在，挂锡向西飞。”两处“添玛观”可以证明“普舍堂”覃氏与宜昌县下牢溪覃家庙附近的覃氏系同祖同宗，根据下牢溪覃氏的族谱记载同属于覃万一公的后裔。据调查，他们的派序为：“……，洪德英昌、长发其祥、宗茂文圣、世科联芳，少修能举、整理纲常……”。随着各地修志工作的进展，相信“失散”了几百年的亲戚，彼此会有幸相认、相聚。在二修谱《卷首·前代家声》中，记载了皇古的皇覃公、后汉的万传公、梁朝的无克先元公、唐朝的襄尧 协舜 缵禹 汤池 修文 武备诸公、后唐的化成公、宋朝的汝先 白坚 白圭 仕魁 仕杰 友仁 友义 绪祖 福祖诸公，特别对明朝的添顺 添明 文孙贤孙 裕孙 绳武 纲武 禹玄 毅恭 毅宽 善政 善教 世奇 继勋、宗藩、东山等诸公的生平事迹记载详细，有的记载甚至比湖南《光裕堂  覃氏族谱》、长阳《光裕堂  覃氏族谱》的记载更详细准确。族谱中记载添玛公：“元末徙居长阳。修有添玛观，黄陵庙亦有添玛观，后仙去。子一：德贤。本祠以公始迁长阳，洪武二年报垦，遂落籍于此，奉为小宗。弟添珊、添珠配之，同宗添标、添顺相之。添珊，生殁妣氏未详。其后分住红花套、松滋、枝江等处。添珠，生殁年月妣氏未详。后居彝陵（今夷陵），人丁繁衍。”因此推断，普舍堂覃氏与光裕堂覃氏的远祖关系紧密，甚有可能同享一祖或认祖归宗结为兄弟。另立堂号为“普舍堂”，是取意《湖广通志》中覃氏老人与普舍树的传说。是否与百川公“与庙僧相善，遂痘医【即医治当时流行的恶性瘟疫俗称“出痘”的天花】”的善举相关联，这一点谱书未明载，但用“普舍”二字，寓意深远，显而易见。普舍堂后裔世世代代与人为善、和睦乡邻，行医、教书育人、乐善好施者甚众，与世代良好的教育感化甚有关系。普舍堂覃氏十三世祖德贤公生二子仁厚、仁和，十四世祖仁厚公生覃畇、覃畛，仁和公生覃畯、覃畴。十五世祖覃畇公生宪简（大房）、光简（二房）、明简（三房）、智简（四房）、威简（五房）、成简（七房）、爱子足简（十房），覃畛公生仪简（六房）、从简（八房）、儒简（九房），覃畯公生政简（十一房），覃畴公生太简（十二房）。族谱记载，明朝初年，畇公配邓氏、柳氏，“俗称偷尸公，生宪、光、明、智、威、成六人。葬凤凰山杜家村。”畛公配税氏，“（公）早逝，妣税孀守，赖畇公抚三子成立，仪、从、儒亦视伯如父。合子侄共庆十全之义，人才称极盛焉。妣坟在祠堂后，曰覃郭母墓。”畇公 畛公兄弟和睦，子侄手足情深，普舍堂覃氏在“简”字辈长房有“十大房”，与二房畯 畴二公之子政简太简合为“十二大房”，在一修谱时就已确定。现存二修族谱也是以十二大房各自收集整理和编印的。三修时依然沿袭十二大房的格局修谱。十六世宪简公同堂兄弟共有十二人，析分长阳贺家坪、榔坪，瓜瓞蔓延。宪简公为长房，生十一子“温、良、恭、俭、让、仪、俨、侃、侕、僖、伟”，祖居贺家坪、三友坪等处，人丁极盛，公葬老雾冲白果树下侯伯庙的沟对面坡上，称为“八字宪简墓”，1960年代修建莲丰水库时坟碑被毁，墓穴尚存。二房光简公，族谱记载“系陌越星下凡，因所为不道，火毙白果树下，时称：阴司侯伯，又云：白马先锋。庙祠在老屋冲树下，至今威灵犹存。”族谱记载“乏祠”，二修谱时把宪简公之曾孙即第十九世覃夏公过房承祧作为二房后继人，受侯伯荫庇，后裔人才辈出。关于阴侯伯的传说版本有好几个，已经被民间神化，石刻碑文和遗物存世有限，原在白果树下修有侯伯庙，1960年代初被毁，白果树干上火烧大窟窿痕迹历经近六百年至今清晰可见，仍树干挺拔、高耸入云、枝繁叶茂。三房明简公，据族谱记载远走重庆长寿县任官，后居三友坪渔泉溪，该房二修谱目前还没有找到。四房智简公生五子“绪、统、经、纶、纬”，葬三友坪，后人主居三友坪和西流溪，秭归有部分族人。五房威简公生六子“辉、忠、东、西、南、北”，祖居沙地、张家湾，后裔主居榔坪；另族谱记载有第十九世“贵臣公，配田氏，公葬下沙地墓坪。妣氏同穴。至今墓碑犹存，系明末万历年间刊立，碑上可辨，惟此。生三子旬才，勺才，守才。世传四川城都奉稽【记音。应为成都奉节】县覃氏望族代有宦家，皆后裔焉。先辈曾见其后裔临墓祭扫。”六房仪简公生九子“勲、烈、照、熙、及、奎、毕、九、升”，葬千岭头，后裔主居贺家坪和榔坪，人丁极盛，人才辈出，三百多年前开始，该房部分族人因在襄阳任官的族人牵引，也陆续迁徙到陕西，现在平利县和镇平县发展了几千人，还有一支在宜昌县龙泉镇繁衍生息了两百多年。七房成简公生四子“豪、进、伦、鹏”，住马坪。八房从简公生二子“雄、杰”，住腰带岭、千岭头。九房儒简公生一子“鳌”，住堰家坪、青岩沟、响谭园、杨家桥等。十房足简公生三子：忠、耀、辉（另说公生一子北，族人有异，不可细究），后住杜家村，山高路险、穷乡僻壤，但却是中国农村合作医疗的发祥地，被誉为“合作医疗之父”的覃祥官即为该房第三十世孙；谱书记载，两三百前该房也有祖公迁徙到奉节县，现在云阳奉节 巫溪发展的几千族人中，应亦有其后裔。十一房政简公生二子“才，旺”，后主居堰坪，人丁极盛。十二房太简公生五子“仁、义、礼、智、信”，后主居镇头河、傅家坪、长岭一带，人丁亦极盛。普舍堂覃氏，现在主要分布在长阳的贺家坪、榔坪、乐园、龙舟坪等地，后裔还广泛分布在武汉、宜昌、当阳、枝江、宜都以及湖南、陕西、重庆、宁夏、四川、山东等地。湖北、湖南、重庆、陕西、四川、山东等本族的姓“覃”都读“xún”。在普通话环境中才读“qín”。 二、覃氏“普舍堂”派辈排行根据一修、二修族谱和各地族人提供的族谱和碑文记载，现在流传的“普舍堂”派行是在二修时根据一修稿修改而定，加之族谱流传不广，族人在取名时用字有些差异，括号中为部分族人实际用过的派行字，录入如下：一、十、百、千、万、妙、汝、再、覃、允、覃、添、德、仁、覃、简、覃、希（朝或天或典）、覃（臣或汝或祖或楚）、大（才或国或汝或仲或元）、胤（守或上或尚）、元（廷或士或应）、世（九或以或楚）。一修谱时续派为：自卜千年盛、吉祥发万春、大（开）光宗祖德、谨（长）守朝延荣、富贵福泽永、加官禄位升、文章登华国、玉重蓝田兴，后四句或是：加官陆伟升、富贵荣华真、文章登上国、世锡服皇恩。这个一修谱序现在的重庆、陕西和宜昌县龙泉镇的族人仍在使用。二修谱时改为：自卜千年盛（或顺），吉祥发万春。鸿光宗祖德，长守朝廷荣。文章华国远，忠厚启家真。永怀原本重，修治绍明新。三修谱时还将适当有所调整和增加。 三、覃氏“普舍堂”族谱普舍堂一修谱于咸丰三年癸丑岁（公元1853年）告竣。会同主修族首：邑庠文生覃墨霖，派名千渲（大房）。副修族人：武生覃星垣，派名奎年（大房）。监修族人：覃遂年（大房）、覃盛望（大房）。由于年代久远，一修谱仅残留一本，残缺严重，字句难辨。重庆和陕西存留的老族谱手抄本是在保留一修谱的部分内容的基础上再修的。普舍堂二修谱于光绪二十六年岁次庚子（公元1900年）覃氏宗祠修谱工竣。总理修谱族人：邑庠文生覃化龙，派名祥鱼（六房）。纂修族人：文生覃熹寿，派名盛广（大房）。监修族人：文生覃俊臣，派名吉秀（大房）。协修族人：监生覃鸿章派名千挥（大房），监生覃清泉 派名盛琮（二房）、覃德年（大房）、（西流溪）覃盛超（大房）、覃盛配。采访族人：覃桂选、覃墨林。历年族长名目：覃盛岱（大房）、覃盛望（大房）、覃盛文、覃寿彭派名年高（二房）。住修：覃盛英（大房）、覃新年（大房）。二修族谱编为《卷首》和各房分谱，各房世系表和人物小传由各房分头主事，族谱未归结成集统一编印，存世量极少，旧谱大多遗失和散落，成套完整版本难收藏于一家。贺家坪镇大溪亮的覃春希保存有《卷首》、大房、二房、四房、六房共九本族谱，榔坪镇覃万庆保存有《卷首》、大房、二房、五房族谱共十本，榔坪镇长丰的覃春先保存有《卷首》、大房、二房、四房、六房族谱，榔坪镇千岭头的覃发源保存有七房族谱，榔坪镇乐园的覃发洋、覃发广保存有八房族谱，榔坪镇响谭园覃春庭、覃鸿毂父子保存有九房祖谱，乐园杜家村的覃祥庭保存有十房的族谱七本，贺家坪镇周家坪的覃万益、春映父子保存有十一房、十二房族谱，榔坪肤杨岭的覃春虎保存有十一房、十二房族谱和咸丰一修谱残本。其中流传最广的五房族谱是民国十一年即1922年在宜都石印的族谱，这个版本是在1900年进行二修族谱的基础上进行增补后再次印刷的，十房族谱到1925年才逐步完成二修信息的搜集和整理，皆属二修范畴，除五房族谱是石印版本外，其余族谱都是木刻或手抄版本，不仅传世量有限，且需勘误之处非常多。二修谱主要是在长阳县内采集整理绝大部分族人的信息，重庆、陕西、湖南和宜昌龙泉镇、房县等外地族人的信息没有采集。三修谱于2011年5月由四川大学覃建军（二房、万字辈）倡导重修，并担当领修和主编，覃万庆（五房）、覃发祝（十二房）担任副主编。覃万建（十二房）、覃万谋（六房）、覃春华（十一房）负责协调，覃发祝、覃春岗（五房）、覃发俊（十二房）负责资金管理。各房族人积极参与，计划争取花四到五年时间完成全国普舍堂三修谱完整版本。截至2012年元月由覃发祝、覃清江（六房，鸿字辈）花半年多时间翻山越岭找全了十一房的老族谱，覃建军（二房，万字辈，女）、覃晓燕（六房，鸿字辈，女）、覃海春（八房）、覃令（重庆云阳籍，五房，发字辈）、覃海波（又名覃孑，十二房，万字辈）、覃春映（十一房）、覃春玉（五房）、覃洪澜（十一房）等花费半年多的时间整理打印成册，目前各房新信息的搜集整理正在紧锣密鼓地进行。 四、覃氏“普舍堂”祠堂三友坪祠堂，位于贺家坪镇三友坪添玛观（一个山包）前。《覃氏族谱》在“祠基约据”文中记载：“咸丰二年【1852年】九月初一日，买覃淳年、泽年、源年【三人系大房千华公之子】祖遗地基瓦屋一向，坐落三友坪龙头山。”后通过族人不断集资扩建成土墙木架混合结构三层楼的两个丹墀的围院作为覃氏祠堂。1943年前后由时任族长的覃坚吾（二房，派名吉豫）负责在祠堂设立学堂，当时学校发展到有学生三四百人，从一楼到三楼都供给学校分别作为食堂、教室和寝室使用，后由肖昌凡、覃发展等接任校长。解放后改建成贺家坪镇三友坪村中心小学，现在原址上新建了砖混结构的楼房继续作为学校使用。覃氏普舍堂由于家族繁衍极盛，清朝末年族人又集资在榔坪的皮村建立分祠堂，规模宏大气派，供覃氏敬奉祖宗、商议族事等。皮村祠堂毁于1960—70年代。近年建设的沪蓉高速公路从祠堂遗址上通过，仅存祠堂旁两颗古树可以佐证。杜家村覃氏分祠堂建在乐园杜家村，距离“合作医疗之父”覃祥官的卫生室仅五十米之隔，曾多年作为村学堂使用，现仅存正堂，侧房和围院已拆，从房屋梁上的雕龙画凤等还可看出这里曾是宗祠，是族人祭祀、聚集的重要场所。 五、覃氏“普舍堂”典型世系十二大房由来一柱，由瞿塘关迁居江南————十厚，由江南至徐州创业后迁居江西————百川，由南昌县太平街大花栗村迁居夷陵黄陵庙，与庙僧相善，遂痘医于此。本祠以公始迁于此，遂以为始祖，约与白坚、白圭二公同时，遂配享为大宗。————千绪，配熊氏————万一，配胡氏；万二，配李氏，入赘湖南澧州华阳王府；万三，配赵氏，落籍枝江等处————妙才，配张氏；妙修、妙惠————汝通，配冉氏————再兴，配李氏，后居东湖；再旺，配朱氏，后居东湖；再洪，配屈氏————覃钏，配辛氏————允祥————添玛，元末徙居长阳报垦，奉为小宗。弟添珊、添珠配之，同宗添标、添顺相之————1、仁厚，配伍、齐氏，生二子畇、畛；2、仁和，生二子畯、畴————1、覃畇，配柳氏，生七子：宪简（大房）、光简(阴司侯伯，二房）、明简（三房）、智简（四房）、威简（五房）、成简（七房）、足简（十房）；覃畛，配税氏，生三子：仪简（六房）、从简（八房）、儒简（九房）。2、覃畯生政简（十一房），覃畴生太简（十二房）。 大房：宪简，配王、张、朱氏————七子覃俨————希举，配向氏————覃随，字何宗，配秦、李氏。公葬贺家坪老屋冲，碑坟完好。————大勳，配向、司、李、马氏。公葬当阳县河溶镇，妣司养育后裔，殁葬长阳白沙驿————胤吉，字天祚，配李氏————元俊，字子正，配魏氏————世功，字裔臣，配刘氏————自忠，字善道，配向氏————卜朝，字廷元，榜名卜勳，文庠，配谭、夏氏————千峰，配笱、刘氏————年发，配向氏————盛超，子鹏翔，配李氏————吉愈————祥点，字化育，配庾兴桂————覃发锐，字剑锋，配宗淑贞————志刚（万字辈），配王斌————昕禾（春字辈） 二房光简（侯伯）：宪简————七子覃俨————希举，配向氏————覃乔；覃夏，配向、郭氏。后裔过房到光简房承祧；覃随————大熙，配向氏，字义志，榜名缉之，庠生，殁葬秭归茅坪镇九里坪————胤选，配邓、汪氏，字余仲，抜贡————元文，配萧氏，字弘词，生于荆州府江陵县海子湖————世遇，配魏氏————自品，配向、张氏，字秩九————卜顺，配向、熊氏，字登第，职员————千焕，配林、顾氏，字克明，国学、太学生，坟碑俱在————年高，配李、王、黄、李、周氏，字寿彭，邑庠，族长————盛莹，配史、林氏，字充玉————五子吉时，配夏氏————三子祥麟，配蔡氏————发洪，配代仁梅————覃进（万字辈），配向芳————卓立（春字辈） 三房：添玛————仁厚，配伍、齐氏————覃畇，配柳氏————明简————待查 四房：智简————绪、统、经、纶、纬————希圣、希贤、希天————信息失传————四子大宪，配向、李氏————胤洲————元任，配陈氏————世松，配焦氏————自朝，配黄氏————卜勇，配李氏。葬贺家坪万寿桥————千万，配郑氏————年久，配徐氏————盛彭，配谭氏————吉银————祥浓————次子覃照（发字辈）————翼为（万字辈） 五房：威简，配田、李氏————覃东————典干，字希范————淮臣，配杨氏————祥才，配秦氏————守琦，配向氏————廷秀，配秦氏，字文华————楚祥，配李氏————三子自伶，配向氏————卜选，配李氏————千琢，配智、秦氏————元年，配田氏————盛桂，配萧氏————吉士，配粟氏，榜名占鳌，字霭亭，例授明经进士。五房二修谱编撰人————注祥，配朱桂花，字少霭。五房二修谱信息采集人————发晋，配张春年————万庆，配李彩琴、续谭红翠。三修谱副主编、五房和十房的主修————志春，壻覃春张————鸿王 五房重庆分支：威简，配田、李氏————覃俊————希尧————覃西(多一辈，信息待核查)————大才，配范氏————四子元道，配覃氏————三子仲璋，配李氏，字君助————四子应闱，配王氏，字光廷，坟碑俱在————以谟，配潘、张氏————自尧，配周氏————卜曠，配李氏————千崑，配左氏————年科————盛富，配全氏————吉全，配张菊珍————祥军，配黄道书————云发，配管红梅————万江 六房：仪简，配庄氏————次子覃烈————潇溪，配易氏，字楚才————天鸾————汝贡————次子上勤，配秦氏————士吉，配秦氏————九馗，配秦氏————次子自东，配秦氏————卜科，榜名开第，任襄阳府训导，葬东湖县；卜汉，配李氏，文庠；卜学，配李氏————卜学六子千瑛过继卜科承祧，配王氏，庠生————登年，配王氏，武庠————盛辉，配陈氏————吉美，配冯氏————祥顺，配姚氏————发庆，配施氏————万生，配范氏、吴文英————春希，配向丽京，六房三修谱主力————啸洪，配郑竹兰；晓燕，婿牛百龙，六房三修谱主力 七房：成简，配向氏————次子覃伦————信息失传————次子舜祖————国斌————五子上岳————次子士雄，配秦氏————以崇，配秦氏————次子自中，配秦氏————三子卜敏————千松，配秦氏————次子年华，配秦氏————顺明————吉东，配秦氏————次子祥玉，配秦氏————次子发举，配秦氏————万宝，配秦氏————春甲 八房：从简，配杜氏————覃杰————覃元————三子锡祖————国濋，配秦氏————次子上列，配秦氏————士治————以理，配秦氏————次子自任，配秦氏————四子卜燐，配李氏————次子千锦，配秦氏————年文，配秦、李氏————次子顺贵，配蒙氏————吉成，配谢、秦氏————祥冠，配秦氏，以书法盛名————次子发辕，配秦尚秀————三子万理，配谭仕翠————海春，配陈春晖。公生于1981年，工程师，八房三修主力————覃晨（鸿字辈） 九房：儒简，配邓氏————覃鳌，配李氏————天元，配秦氏————汝瑚，配李氏————仲尊————尚君————次子士孝————九畴，配李氏————自福，配李氏————卜吉，配李氏————次子千秀，配徐氏————次子年荣，配李氏————顺安，配李氏————次子吉寿，配李氏————祥官，配张氏————发文，配马氏————万清，配王氏————春山，配董氏————鸿盛 十房：足简————覃耀，配秦氏————楚良————元朝，配张、李、秦氏————三子仲烈，配李、秦氏————三子应瑜，配李氏————信息失传，待查————以继，配张氏————次子自华————卜典，配李氏————三子千斗，配秦氏————年金，配李氏————盛仑，配朱氏————吉铠，配李氏————祥河 十一房：政简，配向氏————覃才，配王氏，葬杜家村————朝远，配向氏————信息失传————仲极————上沼，配秦氏————次子士鹏，配李氏————九珠，配秦氏————次子自强，配秦氏，字天健，庠生————三子卜高，配秦氏————千宏，配秦氏————年鲲，配秦氏，郡庠拔麟，字南池————顺錬，配向氏————次子吉泽，配邹氏————次子祥楷，配秦氏————次子发林，配李、谭氏————万益，配张氏。退休教师，八十高龄，三修谱顾问————三子春映，配余琼，政简房三修谱主力————洪澜 十二房：太简，配袁氏————-三子覃礼，配陈氏————朝显，配李氏————覃纲，配杨氏————仲科，配程氏————上聘，配向氏————士月，配刘、向氏————九应，配向氏————自国，配秦氏————三子卜振，配秦氏————三子千让，配秦、李氏，邑庠————次子年保————顺炳，配秦氏————四子吉全，配秦氏————次子致祥，配李道菊————发祝，配覃世秀（中州堂），高级技师，三修谱副主编————秋萍 六、“普舍堂”覃氏代表人物普舍堂历史人物（按照派序排序）覃光简“阴司侯伯”：第十六世覃光简，畇公次子，普舍堂十二大房二房祖公，明末土司王。二修族谱记载：“系陌越星下凡，因所为不道，火毙白果树下，时称‘阴司侯伯’，又云‘白马先锋’。庙祠在老屋冲树下，至今威灵犹存。”穀人作诗《侯伯廟懷古》：我來江上路，怀古式英风。白马生前烈（声称白马先锋），丹书死后忠（死封阴侯伯）。苍山盘地峻，远水贯溪雄。古木依衰草，都随劫火空（白果树光绪丙戌烧毁，其根尚在）。民间有关于覃侯伯的传说 侯伯生得威风性烈，声如洪钟，虎背熊腰，力大无比，数百斤的石头，两臂挟着行走如飞，惊得路人瞠目结舌，他嘿嘿一笑，说，不过一石砚也！他玩耍过的石砚如今还躺在白果树下。光简虽武，宅子却修得雅气。屋前院里石狮两蹲，几百斤一个，他搬来耍去，轻似舞纱；屋后园里修竹丛生，幽静异常，某日有人见他竹园内群马四伏，人马威慑，老大宪简慑于严法，怕弟集结成匪，反叛朝庭败了族规门风，与族长商量，说，此人必杀也！免族人日后遭祸。族长说，他力大无穷，何以近身？宪简便附耳献计，说，不能直取，必如此如此矣！有人找到光简，说，您力大无比，远近扬名，族里没有谁不恭敬，但，不知您是否背得动河边的那棵白果树？光简率直，全然不知是计，说，试试又何妨！便打头走到白果树下。族人又说，莫如上桌，以便好下力。光简答应，族人迅如风卷地抬来备好的八仙桌，挨着树放妥。光简一弓腿，嘭地上了桌，又直着身子，让人紧紧地缚了，万般就绪，侯伯用力，树摇地动。族人惊恐，突然翻脸，掀滚八仙桌，光简两脚悬空，被牢牢吊捆在了白果树上。旋即有人抱来柴禾，架在白果树下，柴晒得干焦，一引即燃，顿时浓烟滚滚，烈火冲天，光简方知中计，烈火中叫道：“妈子触到地，我侯伯又成器”，族人只顾加柴，侯伯所乘之马俱焚，空中啸啸之声不绝于耳，屋后院内人马旋即气绝。人死马亡，树脚下留着一堆残骸，一阵风刮，铺天盖地卷去。树的主干被烧凹一块，后人担心风起树折，砌了石围，填土予以保护。后，白果树枝间果然隆起如乳状物，累累满树向地面延伸。有人说，这叫妈子（即乳头），哪一天乳头坠地，便是光简公复生之日，逐锯掉。光简死后，被封为“阴伯侯”，后人又在他殉难的树旁立庙，以供族人凭吊，并刻碑立传。于是，此处香客不绝，烟火袅绕，老屋冲和白果树也名声远扬。如今，白果树被列为重点文物保护单位。树下族人立碑记载：万古昭垂——世有非常之人不能建非常之功，及其既没（殁）而生气常在，天壤之间垂不朽于无穷者，惟我族之光简公，实不数数靓也。公生于前明，真有勇力。虽古之贲育不遏，园中有大石一方，计重数百斤，辄挟之墙外还立呼为“石砚”。又庭园修竹丛生，节关内俱隐藏人马，跃跃侍动，证之众语。谱记相传不谬，独惜先朝立法纂严，家人惧其造逆祸族，乃缚公于白果树上，与其乘马俱焚，空中啸啸之声不绝于耳，至是竹内所伏之马旋亦气绝。此树为公就义处，犹复生盘根错节，数百年于伢枝之间隆起如乳头状者，累累满树，说者谓“乳头坠地，公当复生”，非在天有灵，岂至此哉。厥后诏封阴侯伯，更为之立庙，崇祀以广其传，讵族人盛乔睐於罔□於其旁附生一株，围约二尺许者，妄施斧柯，公议罚金六十串，并提祠产百二十串鸠工砌培壁壅其遗迹，其断碣石砚亦易置庙侧，以垂久远。庶后之人触目警心，不至再蹈前辙也。是为序。碑修于中华民国十六年，族长覃俊臣、族人覃文光、覃吉耀、覃坚吾撰立。覃从简，明翰林，普舍堂八房第十六世。覃典荣，公亦名希武，系明末庠生。普舍堂五房第十八世。覃儒，明处士，太学生。普舍堂大房第十九世。覃慎：明朝建文已卯举人，知县，县志府志均有记载，现可查。普舍堂第十九世认族兄弟，查为“离光堂”覃氏，待核实。覃副：明朝知县，县志府志均有记载，现可查。普舍堂第十九世认族兄弟。覃浒：明朝岁贡。普舍堂第十九世认族兄弟。覃大力：明武举人，县志可查。普舍堂大房第二十世。覃大为：明岁贡，县志可查。普舍堂大房第二十世。覃大熙：明庠生。普舍堂二房第二十世。覃大定，明廪生。普舍堂大房第二十世。覃大宠，明国学，覃儒公长子，县志府志可查。普舍堂大房第二十世。覃大位，明诰授荣禄大夫，覃儒公次子，县志府志可查。普舍堂大房第二十世。覃大衡，明簧门贡生。普舍堂大房第二十世。覃大年，明武举人。普舍堂大房第二十世。覃胤兰：明朝庚午举人，由进士授翰林院编修，县志、《宜昌府志》（清·同治三年刊本）可查。志载“才学明敏，为后学宗，祀乡贤”。普舍堂八房第二十一世。“离光堂”覃氏也有记载为其祖公，待查辩。覃胤宾，明末廪贡生，避明末乱，教授半月山。普舍堂大房第二十一世。覃胤选，明拔贡，县志可查。普舍堂二房第二十一世。其孙第二十五世卜顺系职员。从卜顺公四子覃千焕成为国学、太学生起，门庭渐显，历十多代至今均人才辈出。覃胤宿，明翰林编修，见县明哲志。后裔待查。普舍堂第二十一世。覃世恪，国学，普舍堂大房第二十三世。族谱记载：“公年八十余，有‘盛世逸民’匾额雅称，富有，其子孙兄弟俱通显。”其长子自宽系廪生、次子自敏系庠生，其二弟世泽公长子自宏系清岁贡，以文学称，次子自毅系武庠。其三弟世禄公长子自西为清庠生、次子自东为荆州廪生。其四弟世嘉公之子自廉为庠生。堂弟世铉公长子自琪为邑庠。明清县志均有记载。后裔人才辈出。覃世显，公文庠，字彩臣。普舍堂大房第二十三世。覃自鸞，公庠生，字仲山，榜名发第。普舍堂大房第二十四世。覃自强，公庠生，字天健，榜名自明。普舍堂十一房房第二十四世。覃卜朝，公文庠，字廷元，榜名卜勳。配谭、夏氏。普舍堂大房第二十五世。葬贺佳坪。清康熙乙丑岁四月十五日生。覃卜科，公榜名开第，襄阳府儒学正堂。任襄阳府训导，享年九十五岁，葬东湖县（今宜昌县）。普舍堂六房第二十五世。六房族人迁徙陕西因其牵引。其二弟覃卜汉，系文庠生。堂兄弟卜举、卜仕均为庠生。覃卜拔，公印廷选贡生，候补儒学正堂。普舍堂八房第二十五世。覃卜任，公系庠生，普舍堂八房第二十五世。覃千渲，公文庠，字佑润，榜名墨霖。配邓氏。普舍堂大房第二十六世。一修谱主修、族首。覃千挥，公太学生，字鸿章。配高氏。普舍堂大房第二十六世。生于道光十八年戊戌岁五月十六日寅时，二修谱协修。覃千焕，国学，太学生，普舍堂二房第二十六世。生于乾隆五十九年甲寅岁二月初九丑时，逝于光绪十年甲申岁十二月十二日，享年91岁。坟碑俱在。【国学是在京师设立的国学就是国子监，也称太学，是古代最高学府。】千焕公长子年高系邑庠，为人恪谨严明，两次尊为族长；三子年永为郡庠，四子年春为职员。后辈代有人出，国学覃盛琼 盛璵、监生盛琮均为其后。覃千让，邑庠。公生于乾隆戊戌年冬月二十六日子时，亡于咸丰甲寅年又七月二十七日辰时，葬傅家坪古树岭。普舍堂十二房第二十六世。覃年鲲，乾隆年间郡庠拔麟，字南池。普舍堂十一房第二十七世。覃盛琼，公国学，字珮瑶。普舍堂二房第二十八世。覃盛璵，公国学，字玉如。生于咸丰元年辛亥年八月初三日亥时。普舍堂二房第二十八世。其次子吉甫为郡庠。覃盛琮，监生，号清泉。普舍堂二房第二十八世。二修谱协修。覃盛岱，公监生，字宗山，族长。覃盛峻，公武庠生，榜名登宣，字秀山。覃盛屾，公武庠生，字金山，榜名登高。系三兄弟，时为美谈。普舍堂六房第二十八世。覃盛达，公庠生。普舍堂六房第二十八世。迁居陕西平利县陕子坪。覃盛葵，武庠生，号向之，榜名香元。覃盛兰，武庠生，字生香，榜名登元。系兄弟，时为美谈。普舍堂六房第二十八世。覃吉士，公榜印占鳌，字蔼亭，例授明经进士。普舍堂八房第二十九世。覃焕吉，字文圃。覃贞吉，字乾臣。兄弟均系文庠。普舍堂六房第二十九世。覃福吉，字润堦，榜名锡三。覃荣吉，号锦堂，榜名锡九。兄弟均系文庠。普舍堂六房第二十九世。以上摘自《长阳县志》（民国二十五年纂修）、《宜昌府志》、《覃氏族谱·普舍堂》光绪二十七年版） 普舍堂现代人物（大致按照年龄排序）覃吉豫号坚吾，盛琼三子，生于1887年6月26日，亡于1952年8月2日，普舍堂二房后裔。葬于贺家坪漂水洞，有碑志。北京高等师范学校毕业后，考取日本工业学校、黄浦军校，均因父母阻止未读。斯时，正值军阀混战之时，与鲁迅、胡适之等许多有志之士，同为国家的兴亡所忧，认定救国救民必须提高民族的素质，因此回乡从教，发展教育，先任教于白沙驿小学，后创办中岭小学、三台市小学、三友坪小学，由于有远见卓识、举措英明，当时被族人推举接任族长，任内在整肃族容、解决族内纠纷、处理地方矛盾、关照族裔贫民冤情的代诉等方面皆秉公尽力、有求必应，尤为族中优秀贫困学子解决食宿资金供其就学，颇有口碑，1952年以前一直专心致力于发展地方教育事业。覃吉甫盛璵公次子，公郡庠，字仲山，号成章，生于光绪五年【1879年】六月十八日巳时，葬荆州，普舍堂二房后裔。为二修谱写序。毕业于北京高等会计学校。先后任广州烟酒专卖局主任会计、湖北省立第三师范学校（即孝感学院前身，2011年12月，更名为湖北工程学院）、湖北省立荆南师范庶务主任，娶周氏、佘氏。子覃祥钟，中共党员，1927年被国民党在武昌洪山杀害，坟莹在修武汉洪山公路时被毁，祥钟遗腹子覃发源多次去湖北省档案馆查询有关资料均未果，解放后，家属一直享受烈属待遇。孙覃发源颇有建树。覃发源，男，土家族，1927年农历6月26日出生于长阳贺家坪，普舍堂二房后裔。1949年毕业于湖北省立第六师范学校（后改名宜昌师范）。1950年参加教育工作，历任贺家坪三友坪、沿头溪小学教员，枝柘坪小学教导主任、校长，石洪小学校长，1956年任长阳二中教导主任、副校长，1959年任长阳师范副校长，1960年加入中国共产党。1962年任长阳教研室主任，1974年任长阳一中书记、校长，1978年任长阳师范校长。1984年担任长阳教育志主编，参编《长阳县志》，1990年退休。曾多次评为省、地（市）、县先进教育工作者，1985年被评为高级讲师（副高）。工作期间主要研究复式教学，主要著述有《花果石小学复式教学情况简介》，《教材满天星，教案几条筋——我的复式教学备课情况简介》《必须重视复式教学》，并先后发表在《湖北教育》、《中国教育报》。退休后开始诗词写作，先后在《长阳诗苑》、《长坂诗苑》、《三峡文艺》、《中国钓鱼》发表诗词200多首，其中部分作品被选人《中华诗词选刊》、“诗海拾贝”栏目。覃福民男，土家族，1929年生于长阳土家族自治县贺家坪，“普舍堂”二房后裔，“祥”字排行。大专文化。1956年任教长阳初级中学（现长阳一中），1958年被校长宣称为右派（无文字结论），是年五月被下放到九里坪农场劳动改造。1962年复职，任教于长阳九中（渔峡口）。1966年提出要求组织上重审本人的政治问题，被指为乘机翻案，精神与肉体遭受了极大的折磨。1971年再度被处理到农村劳动改造。1979年再次复职，任教于长阳二中。1981年调长阳五中任教导主任，至1987年退休。2011年出版诗集《感悟诗集》。覃祥官1933年农历9月26日出生在长阳县榔坪镇杜家村，普舍堂十房后裔。被誉为“中国农村合作医疗之父”，第四届湖北省人大代表。读过3年私塾，由于家贫便拜师学艺，烧窑做瓦带木工，样样活他都干过。1965年县中医进修班结业，到海拔1500多米的乐园公社(今榔坪镇乐园村)卫生所当医生。1968年下半年，一份反映长阳乐园合作医疗情况的调查报告，几经辗转送进了中南海。毛主席在看过报告后，亲笔写下了4个字：“此件照办”。1968年12月5日，《人民日报》头版头条转发了这篇题为《深受贫下中农欢迎的合作医疗制度》的调查报告，称赞覃祥官是“白求恩式的好医生”。农村合作医疗制度在全国95%以上的农村推广，全国5万多人前往乐园取经。1969年10月1日，覃祥官登上天安门城楼，与毛泽东等党和国家领导人一起参加庆祝国庆20周年的游行观礼。1974年秋，覃祥官随同国务院副总理王震访问日本，回国后受到毛主席的亲切接见（曾受到毛泽东主席三次接见）。1976年10月被破格从农民直接提拔到湖北省卫生厅副厅长，他去上任时，门卫将穿草鞋的他拦在门外，直到他掏出任命文件才放行。就这样，覃祥官成了一个在农村分口粮，在村里记工分的副厅级干部，人们习惯称之为“农民厅长”。1977年辞官还乡，重操旧业，他一边以乐园公社卫生院普通医生行医，一边参加大队的生产劳动。1981年3月，覃祥官被卫生部部长钱信忠聘为卫生部医学科委员会委员。后被选为长阳县委常委、宜昌地委委员、政协委员。1993年，他在甲子之年，新华社记者陈新洲、钟华林专程上乐园，采写了《“中国农村合作医疗之父”覃祥官》的文章，发表在《半月谈·内部版》上，算是对他一生的总结，他被赠予“农村合作医疗之父”称号。2003年，长阳县以其中国农村合作医疗发祥地的特殊身份，被纳入全国新型农村合作医疗试点县，覃祥官再次成为热点人物。如今，覃祥官亲手创办的中国第一家农村合作医疗卫生室就在他住家旁不远，这里曾迎送了全国各地的数万名参观者和数百名中外记者，珠江电影制片厂在此拍摄了大型彩色纪录片《合作医疗好》，新华社将其文字和图片向全国播发通稿，《人民画报》、《解放军画报》把它和主人的照片登在显著位置，《世界月刊·英文版》等外文期刊将其推向全世界。覃祥官一生都在积极为乡民谋福利，1998年“普九”时，他看到村里办学艰难，到省卫生厅求援筹集了3万元资金建设村小学。1998年农网改造，他找相关部门争取到一万多元资金，并主动让测量工作人员在自己家中吃住了一个多月。2005年，村里搞自来水管道建设，覃祥官协调解决了种种难题，让村民吃上“放心水”，还多方筹款修路架桥，带领乡亲把山高路险、穷乡僻壤的山路进行硬化而不辞辛劳；不论哪个村民家里有困难，他都会慷慨地给衣给粮给钱。2008年10月23日凌晨2点50分，覃祥官突发心脏病在乐园村家中去世，享年75岁。10月27日，细雨蒙蒙，天公动容，上午8点20分，覃祥官的追悼会和葬礼在乐园村举行，千余名土家族、汉族群众踏着泥泞从四里八乡赶来，满含泪水为这位传奇老人送行。国家卫生部农村卫生司送来花圈，湖北省卫生厅、宜昌市卫生局分别发来唁电。长阳县委、县人大、县政府、县政协领导及相关部门负责人驱车150多公里赶到乐园村，出席了追悼会，各大报纸和媒体进行了及时报道，他的去世让“合作医疗”又成为重新认识和总结医疗改革的重点论题。覃发池男，土家族，1943年出生在湖北省长阳土家族自治县榔坪镇冷水桥村一个山寨里，普舍堂六房后裔。巴山舞创始人，被誉为“巴山舞之父”，湖北省舞蹈家协会常务理事，中国舞蹈家协会会员，湖北省长阳土家族自治县文化馆馆长，民俗文化村村长。先后被国家体育总局授予“全国群众体育优秀辅导员”和“全国群众体育先进工作者”光荣称号。其先进事迹于1995年在中央电视台第一套节目“东方之子”栏目播出。1959年，覃发池读初中二年级，由于很有表演天赋，被选入县歌舞团。三个月后，他以优异的成绩被送到湖北艺术学院舞蹈科进修。1978年，覃发池作为一位普通的文化工作者，只身来到长阳县西部偏僻的乐元乡，蹲点搞农村文化工作，认真学习和研究土家族的“跳丧”、“哭嫁”等歌舞元素，精心提炼成“巴山舞”。他将舞蹈中的摆手、摆胯、弯腰等动作分解后进行规范，并取了好听的名字“风摆柳”、“喜鹊登枝”、“百凤朝阳”、“双龙摆尾”等。1981年，湖北省舞蹈家协会吸收覃发池为常务理事；1982年《舞蹈》杂志第三期发表了他的论文《新兴的群众自娱性舞蹈巴山舞》，引起了中国舞蹈界的高度重视，覃发池被吸纳为中国舞蹈家协会会员，还代表湖北省出席了在山东召开的“五省市民间舞蹈”交流。《舞蹈》杂志派出编辑赵景深到长阳调研，后来，他在《舞蹈》第六期中这样评价巴山舞：“长阳巴山舞的价值在于开拓，它的成功在于忠实，忠实于人民，忠实于历史。”1985年，湖北电影制片厂摄制了电影《锦绣长阳》，使巴山舞走上银幕。1990年，覃发池当选为湖北省舞蹈家协会副主席，并连任至今。1991年，湖北省委宣传部拨专款，由湖北舞协为覃发池编印出版了《长阳巴山舞》一书。由省文联主席周韶华题写书名。1991年“巴山舞”作为表演项目，参加了在广西南宁举办的全国第四届少数民族传统运动会。1992年6月，覃发池来到革命圣地延安，参加“新秧歌文化研讨会”。他的《从巴山舞的产生看民间舞蹈继承、创新》一文获优秀论文奖，并发表于《舞蹈艺术》一书。1994年，在清江美丽的西湾，电影《哭嫁女》在这里紧张地拍摄，覃发池早早地来到了现场，当故事中五个年轻的女子用一根绳子结束生命时，他领衔着200余人的跳丧队伍齐舞，舞姿铿锵，高亢悠扬，溅起了漫天沙暴，头饰都一色红绸带，像狂风中旋转的映山红。1995年6月4日，中央电视台《东方时空——东方之子》栏目播出了对覃发池的专访。1996年，湖北电影制片厂摄制了巴山舞纪录片，巴山舞开始走向全国；1997年，覃发池应中国香港市政局之邀，到沙田大会堂演出，“欢乐的毕兹卡”引起港人的浓厚兴趣。覃发池在沙田举办学术交流，进行了三场《土家文化源远流长》的学术报告，上千名中外大学生、教授、讲师们正襟危坐，提问有如连珠炮一般。2000年12月，他苦苦编导的巴山舞经历了群雄逐鹿后，荣获第十届中国“群星奖”广场舞蹈“金奖”。2001年4月29日，蜚声中外的“国际龙舟拉力赛”在大三峡的夷陵广场如期举行。在闭幕式上，唯一推出了终生难忘的狂欢“巴山舞之夜”，从中央到地方的六家电视台进行了现场直播。2001年7月，“中国长阳巴山舞”获准国家商标注册。2002年9月，国家体育总局将巴山舞作为体育健身广场舞蹈推向全国，神州刮起“巴山舞”旋风。2005年，国家体育总局派出专班来考察，把巴山舞列为全国八大新研发项目之一，在南京展示会上被排在第一，获得文化创新奖。代表作品有舞蹈《木瓜飘香》、《晚归》、《绿水荡舟》、《青龙摆尾》和《渔翁唱晚》等。（选自百度网《百度百科词条》，词条创建和编辑：骄阳荷飘，即四川大学覃建军女士）覃发国男，土家族，1949年10月出生，湖北省长阳土家族自治县榔坪镇人，“全省优秀法官”、荣记个人一等功、省“政法先进工作者”、“宜昌市劳动模范”、“全国模范法官”、省总工会授予“五一劳动奖章”。覃发国从事审判工作30余载，承办各类案件1620年件，接触原被告万余人，调解结案1150件，调解率高达70%，至今未办错一件案，写下了零发还重审、零全案改判的记录。2009年被载入市委组织部、党史办联合编撰的《宜昌当代历史人物》一书。从2004年起，《宜昌日报》、《湖北日报》、《人民法院报》分别以《不愧青天》、《土家山寨一杆秤》、《土家山乡绽奇葩》为题报道了他的先进事迹，引起了强烈的社会反响。2005年3月，他被省高级人民法院表彰为“全省优秀法官”，并荣记个人一等功。2007年1月被省委政法委授予“政法先进工作者”荣誉称号，同年4月被宜昌市人民政府授予“宜昌市劳动模范”称号。2008年2月被最高人民法院授予“全国模范法官”称号，同年4月被省总工会授予“五一劳动奖章”。（选自《百度百科词条》，词条创建和编辑：骄阳荷飘）覃万德男，土家族，1940年3月出生于长阳榔坪，大专文化，副研究员，高级政工师。普舍堂六房后裔。1961年参加工作，1970年加入中国共产党，曾历任榔坪区团委副书记、党委副书记、县委副书记、秭归县委副书记、长阳县政协副主席、县人大常委会副书记等职，2000年7月退休。古稀之年始学诗词，2012年8 月由中华诗词出版社出版诗词集《新韵习吟》。覃万建男，土家族，1953年9月19日（阴历）生，湖北长阳榔坪人，普舍堂十二房后裔，三修谱重要组织者。1972年12月参加工作，1976年12月加入中国共产党，中国纺织政治函授学院毕业，大专学历。1972年12月应届高中毕业参军入伍，在中国人民解放军宜昌县中队服役（1975年改为中国人民武装警察部队），历任战士、班长；1977年2月退伍回乡务农，当年12月被招工到湖北省一一五煤田地质勘探队当工人；1980年6月调宜昌市第一针织厂，历任机修车间钳工、党办干事、宣教科负责人、党办主任、政工部主任；1989年12月借调到宜昌市纺织工业公司宣教科工作；1990年8月调宜昌市委办公室任副科级秘书，1991年4月任信息科副科长，1994年任主任科员，1996年任信息科科长，2004年提拔为副县级调研员，2006年任宜昌市委督查室主任。光明磊落，正直做人，忠于职守，本份做事，为其终身奋斗的座佑铭。在部队入伍四年，先后6次获得连队嘉奖；在宜昌市第一针织厂工作10年，多次被评为先进工作者、厂级标兵、优秀党员。尤其是宣传工作深得上级好评，本人利用业余时间撰写新闻稿件被中央、省、市级报刊电台采用2000多篇，20多次被评为中国纺织报、湖北日报、湖北人民广播电台、宜昌市委宣传部等单位模范通讯员。尤其是在宜昌市委办公室从事17年信息工作和6年督查工作期间，围绕领导决策落实和改革、发展、稳定主题，立足基层实际，及时准确反映情况，采写信息被市委领导批示及中央办公厅、湖北省委办公厅采用3000多条，撰写有关信息、督查、反腐倡廉等工作文章多次被《秘书工作》、《秘书之友》、《中纺政工研究》等杂志刊用，多次被中央办公厅、省委办公厅表彰为党委信息先进工作者。覃祥虎1954年生人，本蔡氏子也。周岁失怙，越明年，随母更适覃氏大房后裔吉邵公，故改姓更名谓之。虎适年入伍，衔至少尉，念家中父母乏人照顾，招原恋人本邑医生、陈氏菊英至军中成亲，嘱陈归后，必常回家，以慰二老孤寂。1989年转业任本区粮管所主任，适时为父母送回点心及荤素菜肴，其养父嗜好烟酒，提前超量购回，二老吃穿用无一物一时短缺。冬备柴碳，夏置风扇。二老年逾古稀，虎毅然回家伺候。父病重，亲手喂汤药，日夜守护，未常解带。嘘寒问暖，言轻语柔，和颜悦色。父逝，隆重祭祀，磕头抱灵，扶丧安葬。母病，为之端茶递水，精做饭菜，洗衣洗脚，细心护理，不离左右。夫妻俩百事皆以孝为先，当地传为美谈，翁媪感叹，养儿当如祥虎；众感慨，我等当以之为楷模。确然“羊有跪养之恩，鸦有反哺之義。”为儿女者若不孝敬父母，禽兽何如哉；故为之文，以向后世。(族人覃泽民壬辰年秋供稿)覃万勤男，土家族，1956年出生于长阳县贺家坪，大专文化，普舍堂大房后裔。现任长阳土家族自治县文化体育局局长、党委副书记，多次获得省市县奖励。作为文化体育负责人，他领衔组织完成了第二届“廪君文化旅游艺术节”和“第六届中国长阳清江画廊横渡极限挑战赛”；精心策划并打造的大型民族风情歌舞《巴土恋歌》参加首届省少数民族文艺汇演中获得大奖，同时获得组织奖；与中央电视台共同举办了《中华情—巴土恋歌》；组织领导全县成功申报非物质文化遗产；在文化部、省人民政府举办的原生民歌大赛活动中，由文化局推荐的王明俊等参赛的民歌演唱节目获多人组合铜奖。覃万谋男，土家族，1956年2月出生于长阳榔坪，普舍堂六房后裔，三修谱主要组织者。1974年7月担任榔坪镇皮村大队医生，先后在宜昌县卫生学校学习、县卫生局、政协办公室工作。1989年9月至1991年9月在华中农业大学学习。1991年10月起历任磨市镇副镇长、长阳县委组织部组织科科长、长阳县土地管理局（国土局）书记、局长。2011年6月至今，任宜昌市国土资源局副调研员。覃鸿男，1962年8月19日出生于宜昌市，祖籍长阳县贺家坪三友坪村，普舍堂大房后裔，发字辈。现在三峡职业技术学院机械工程学院工作，任院党总支书记，副教授。1983年7月毕业于武汉理工大学机械制造工艺及设备专业，长期从事机械类专业课的教学工作。曾获国家实用专利一项。有多篇论文在各类期刊上发表。覃照男，出生于湖北枝江，普舍堂四房后裔，发字辈。曾任宜昌市教育局副局长，现任宜昌市政府副秘书长。覃进男，土家族，1970年11月出生于长阳贺家坪，普舍堂二房后裔，万字辈。研究生学历，在读博士。1993年毕业于湖北大学后，在三峡日报传媒集团(三峡日报社)工作至2012年，曾历任集团广告部主任、党委委员及副总编辑，现任宜昌市政府研究室（市政府发展研究中心）副主任。有《新媒体时代的舆论特征与产业前景》、《广告代理制的现代流变》、《地方媒体在国际突发事件报道中的作为与进步——国际突发事件报道“本地化”的认识、实践》、《主流媒体怎样疏导社会矛盾》等多篇论文公开发表。覃涛男，土家族，1978年5月出生于长阳榔坪镇乐园，普舍堂五房后裔，春字辈。2001年毕业于西南林业大学，曾任宜昌市西陵经济开发区建设局局长，现任开发区管委会副主任。覃梅春女，1981年12月出生于长阳榔坪，普舍堂十一房后裔。中共预备党员，现任广东恒亿集团行政总监、工会主席、团支部书记，共青团东坑镇第十一届委员会委员。于2008年5月被推选为东坑镇新莞人妇女学校校长。2011年被评为“东莞市优秀团干部”，同年4月被评为“2010年度东莞市青年岗位能手”，2012年被评为“2010-2011年度东莞市女职工建功立业女能手”、“2012年度东莞市十大优秀新莞人”。 七、“普舍堂”覃氏文物、遗址、集聚地长阳三友坪添玛观远景（覃发祝供稿）覃侯伯碑（覃发祝供稿）覃侯伯墓和碑（覃伟国摄影，站立者为覃建军）覃侯伯墓碑、白果树（四川大学覃建军2011年7月摄影，站立者为覃伟国）杜家村覃氏分祠堂（覃发祝供稿）三友坪覃氏祠堂，添玛观遗址位于三友坪小学校前对面山上。（覃发祝供稿） 覃马氏祖母墓（湖北省一级保护文物）丁母覃氏墓位于湖北省长阳土家族自治县榔坪镇秀峰桥村六组即三沿沟。墓建于清光绪二年（公元1876年），坐南朝北，长10.16米，宽7.06米，占地面积72平方米。封土底径4.1米，高1.7米，四周砌筑石垣，墓前立四柱三间三重牌坊式碑，通高4.5米，一层四柱阴刻楷书楹联，内嵌碑三通，碑文记墓主生平，二重柱刻花瓶、花卉，枋雕人物故事、花草及二龙戏珠图案，额间书“八仙”，三重柱浮雕金童玉女，枋间饰“双龙盘柱”，内书“圣旨旌表”。墓前置石鼓、石案、石香炉，四周设围栏，并可转通，正前门柱上饰石象，栏板内外均浮雕人物故事图案。该墓布局对称，人物形象生动逼真,石刻工艺精湛，为研究清江流域土家族丧葬习俗提供了珍贵的资料。该墓于2009年10月长阳进行第三次全国文物普查时调查发现，并予以登录，属古墓葬类，同年被遴选为第三次全国文物普查重要新发现（见国家文物局主编，科学出版社出版《2009年第三次全国文物普查重要新发现》）。（长阳文物保护中心罗建华、覃庆华供稿） 合作医疗之父覃祥官之墓碑，位于大吉岭的竹园荒（覃发祝供稿） 合作医疗之父覃祥官 重庆远祖覃应闱之墓碑（重庆大学覃令供稿）重庆远祖覃应闱之妻王氏之墓碑（重庆大学覃令供稿）三友坪覃盛昌之墓，立于清末（贺家坪覃万耀供稿）榔坪镇，覃氏集聚地（覃发祝供稿） 长阳榔坪覃氏集聚地（覃发祝供稿）国学、太学生覃千焕墓碑（四川大学覃建军供稿）普舍堂远祖覃随公墓碑，立于清初（四川大学覃建军供稿）普舍堂远祖覃随公墓碑附碑，立于1928年（四川大学覃建军供稿）榔坪覃吉成夫妇墓碑，立于清末（覃清江，鸿字辈供稿）贺家坪佑思湾铁路桥普舍堂第二十二世元宪公，配刘氏，字又思。公生于康熙年丁丑岁正月十五日，亡于乾隆年甲辰岁正月十九日亥时，葬又思湾。现名佑思湾，因元宪公之字而得名。（长阳电信局覃祥鹏拍摄）九房远祖九畴公墓碑，立于清中后期（覃海春供稿）普舍堂二修谱所定派序（四川大学覃建军供稿）普舍堂二修谱族谱（覃建军供稿）1 洪武初，移家报垦三世后析分于此，至今十余世，胶庠不断，皆此山之力也。图此以见地脉之长，前人创业维艰，后之守本在尤不易。爰为之赞曰：四山围峙，远水交流。中峰核立，环抱如洲。河山带砺，风台名留。2 赞曰：惟山青神，林林央央，惟祖青灵，郁郁苍苍。钟灵毓秀，山水并长，繄我祖德，百世流芳。2012年7月在长阳龙舟坪编委会第一次会议后合影前排左起：覃建军（万字辈）、覃发祝、覃万谋、覃吉友（重庆）、覃吉元（重庆）、覃祥春（重庆）、覃君华（春字辈）、王宏（原名覃鸿刚）后排左起：覃清江（鸿字辈）、覃万庆、覃发俊、覃万建、覃春岗、覃春华、覃春清在长阳榔坪镇编委会第二次会议后合影前排左起：覃春波（榔坪镇镇政府）、覃万庆、覃建军、覃汉民、覃万建、覃发祝、覃祥楚、覃春文、覃云岗后排左起：覃立光、覃万耀（六房）、覃发春、覃春清、覃春岗、覃发望、覃清江、覃春波（七房）、覃万雄 （摄影：覃烨）2012年7月在长阳贺家坪镇编委会第三次会议后合影前排左起：覃春希、覃祥庚、覃建军、覃发祝、覃泽民后排左起：覃发洲、覃万兵、覃小平（发字辈）、覃祥淦、覃万新（六房，西流溪）、覃春钰、覃万福、覃春映2012年7月到乐园大吉岭覃祥官故地采集十房族谱信息后与族谱收藏者合影左起：覃发单、覃清江、覃发祝、覃祥庭、覃建军、覃烨（鸿字辈）、覃万庆、覃春岗2012年7月长阳覃氏四个堂的代表合影前排左起：覃建国（中州堂）、覃发祝、覃建军、覃发俊、覃干（光裕堂）后排左起：覃四照（光裕堂）、覃守甫（中州堂）、覃春岗、覃德双（离光堂）、覃思刘畅（离光堂）、德双之子苏琛201207在宜昌左起：覃建军、覃照（发字辈）、覃长林（五峰光裕堂，覃远照之子）后排左起：覃晓燕（鸿字辈）、覃啸洪、覃春雷、覃万建、覃进（万字辈）八、历修族谱文献摘录 覃氏源流总序间当西至崆峒，北过涿鹿，见夫河汉之淼茫，江淮之濆薄，（氵畟）淢浕涢，龙鳞结络，未当不叹天地之包涵，万物之苍萃，为靡穷也，而其源则发于星海，其流遂汇于扶桑。始原滥觞，沫拢百川，因博观夫宇宙之大，民物之富，藉非伦之、序之、经之、纬之，而欲以蠡管之见、臆断之辞，妄测夫数百年以前，数十辈以后，岂可得哉？若我覃氏之谱，则更有难焉者。夫家之有谱，犹国之有史、县之有志也，非有宏通之才不能修，非有簪缨之盛不得修。而覃宗之世传，则樗栎耳，士庶耳，乌可言修？而当今之世，则孔亟矣。国家当多事之秋，生民值琐尾之时，际此不修，后将失传。愚故略而记之。粤考人皇时，有皇覃氏。《禹贡》“覃怀底绩”。周穆王时，有竺氏封此，因地为姓，暨《事类赋》云：“覃姓老人拾西流树植此，后分二枝，有似佛国普树舍树者，大至数十围，子弟踏青，歌舞其下，其花自发，遂名为普舍树”。至梁有无克公为梁州刺史，遂家汉中。至唐天宝西巡，覃氏率千余人护驾，封十八洞掌印将军。迨汝先公袭职仕宋，子孙世守，屡建奇功，始得闻其略。明初添顺公纳土归附，庆历间【在乾隆年间因避讳乾隆帝的名字“弘历”，而改写为“庆历”，此处分析应不是北宋仁宗赵祯的年号。】亦渐凌夷，中间或显或晦，大抵世居外藩，文章不少概见，盖亦史志所不及载者。自百川公移居黄陵庙，七世孙添玛徙长阳，建添玛观于此，其后始繁。明末胤宿、胤兰双凤齐飞，又因西蛮无所建白，仅传兰公举人。时言添标大房居川，添顺二房驻防施州，而三房添玛入垠报恳，事在洪武初年，据亦失传。易三世而厚公、和公生畇、畛、畯、畴，析分长阳之后河，衍为九房【注：应有十二房】，分为内外，瓜瓞蔓延，猗与盛哉，非百川之汇东海吞沅澧沮漳也哉。逮国朝定鼎，分逃四方，下至松枝、湖南，上至施州、永顺，音问不通，派序各别，概难收取。总之，代远年湮，文献无考，名未着于天，家谱未衍于先贤，其尚何所征信哉？其所征信者，特近地一脉耳。因考而志之，序而次之，后有志者踵其事，亦可知前人不暇修，而后人修之。后人修之而无以鉴之，将使后人而忘其前人，前人而不知有后人，如河汉之不竟其源，委江淮之不汇于龛赭也，岂第逊国之有史、县之有志也哉？功竣，爰弁其首，曰：祖武式毂，世载其英，堂构贻燕，云礽褆福。后裔孙涉园熹寿熏沐撰光绪二十七年（1901年）辛丑岁仲夏月吉日刊 前明老谱序始祖蜀裔，峡州流寓。三百余年，贼乱明纪。族众逃窜，奔走流离。大清安定，去而复还。旧谱已失，新纂留参。合集考订，访缺补残。讨究数处，编序从祖。百川千绪，万派一源。亲割不断，踈续复坚。族众疏离，祸免强悍。干糇戾声，诸父羞颜。文墨刀笔，兄弟莫堪。贵贱一德，贫富三反。贫贱疾富，富贵吝酸。剥族利己，族剥难安。如此存心，皆是祸端。友于庭内，无忝所生，阋墙有变，釜豆相煎。义以取利，仁以养闲，默默天理，明明检点。守法安分，官刑不犯，忠信笃敬，四海和欢。特立十训，遵守罔倦。世世子孙，仔细留参。光绪二十七年仲夏月吉日  立 百字俚言1、 训孝一则孝者，百行之原，万化之本。襁褓甫离，即知爱敬。一自成人，便离真性。箕帚垢谇，妻子私昵。高堂白发，视如行路，岂知庭帏，龙钟潦倒，饮食衣服，嗜欲爱憎，不体亲心。能勿深省，回忆子生，何如殷勤，不思报德，将忝所生。贫贱易简，富贵易离，强壮易忤，衰老易欺。人子知此，庶罔懈斯。2、 训弟（悌）一则弟【悌】者，人之初生，即有同胞。先我而来，罔非先导。年齿稍长，勿敢轻佻。隅坐随行，尊同师保。乡党之间，侮慢不少。或听妇言，骨肉煎熬。或因田财，欺凌衰老。教训不听，反眼相遭。稍有不逊，便非弟道。天地生物，并盲式好。荆棘戕贼，必薅茶蓼。同姓皆然，异姓更瞭。习与性成，教训宜早。3、 训忠一则忠者，人有实心，不尚虚伪。相倾相轧，便成奸细。处己以忠，隐怪不事。待人以忠，始终如一。出事君国，天颜咫尺。人对父兄，诚敬不渝。炼炼质如金，守身若玉。一有虞诈，便非君子。言行颠倒，面目鬼蜮。当言反笑，当笑反泣。移步换形，心非口是。被人识破，诅咒无益，凡教子弟，当自幼始。4、 训信一则信者，唯口起羞，出好与戎。诐辞知蔽，遁辞知穷。惟是枢机，言必由衷。一经反复，莫知西东。随口辨给，应对为工。事后征信，一派成空。如此为人，父母可哄。兄弟离散，朋友憎恿。皆由少小，不由心中。惟此圭玷，早为磨礲。守口若瓶，铿为洪钟。无信不立，不信不从。圣训昭然，用妄何庸？5、 训礼一则礼之威仪，有典有则。或进或退，或坐或作，衣冠瞻视，仪容各别。人有礼仪，象服是叶。人无礼仪，相鼠是绝。处身有礼，家规不忒。处世有礼，正是四国。金玉其相，周旋不惑。如尸如斋，三千三百。命子学礼，孟僖耻雪。古之圣贤，皆知法则。幼时无知，教以小学。曲礼一章，万世成格。6、 训义一则为人一生，莫大于义。富贵轻财，豪侠负气。横绝古今，充塞天地。百折不回，皆义所至。以义持身，常变不渝。以义制事，权衡可恃。悭吝刻薄，皆昧乎是。凡人居家，皆宜裁取，用财不伤，保全百世。施与不悖，恩怨无訾。君臣朋友，兄弟妻子，义之所在。始算交际，古人重此，声称洋溢。7、 训廉一则廉乃至宝，为人最难。凡属俗人，皆知图贪。家思富有，谋欲团圞。祗知婪取，以逞方便。谁知贻祸，声名败残。子孙微弱，报应循环。悖入悖出，众口讥讪。扑满贻讥，正欹警顽，何如守分？放眼纵观，贪为败媒，廉为福端。存心洁白，贫贱多安。象焚因齿，鼠硕畏残。临财不苟，天地皆宽。8、 训耻一则行巳有耻，于人大矣。指不若人，则知恶之。心不若人，胡竟昧此。优孟衣冠，仆隶贱役。一堕下贱，子孙莫洗。耻因奋生，功由耻励。圣域贤关，皆人造至。旁人指摘（责），尚知反噬。自甘下愚，梦寐不知。父母教训，抽身回避。妻孥解劝，怒目相视。狐裘缊袍，由也可与。倘能奋兴，转瞬即是。9、 训读一则覃氏一宗，数百年来。其名不彰，非无英材。子孙有志，须早安排。教妇初来，教子婴孩。尊师重道，好义轻财。诗书益心，文章外才。人泮采芹，气托明胎。贤书翰苑，各有正裁。脱白蜚声，摇山倒海。刀笔逞能，声势介怀。稍有芥蒂，便招祸灾。聪明子弟，及早取裁。莫因识字，乡里舆抬。10、 训耕一则祖宗世及，耕种营生，夜眠早起，东作西成。大富由命，小富由勤。种田打虎，积粪如金。国稞早完，千耦其耘。和睦乡里，管教儿孙。勿弄奸巧，莫使欺心。官刑莫犯，门户必谨。奸盗诈伪，俱非正经。闲气好忍，妇言勿听。居家勤俭，待客丰盈。阴德广布，嗣产莫争。一家骨肉，亲亲为本。 派系汇一表伏以乾坤初判，万汇品分，极枢碁列，山岳云屯，脉络不敦。秩序次第，难免纠纷。合万派以汇一源，采群言而钟一本。聿稽羲皇，降及汉明，汇分世系，荟萃物伦。序昭合穆，酌雅禀经。蜚声艺苑，勒名钟鼎。无或失次，卓尔前型。迄自元宋，派序未兴于时代，祖孙或降于单微。文章不着，云禩失归，豕亥莫传，鱼鲁胥误，倘非文献之传，曷稽掌乘之故。近惟化龙，倡始修谱，国典无征，风薇已古。才未杼于张，华词难征于祝瞽。支分派别，蔓延椒盈。人各一家，户各一名，各子其子，各亲其亲，宗次多失，谱贴未兴，云山旷隔，稽考无凭。九房而概，难一是万派而苦于群分。合编汇集，风驰云屯，旁搜远绍，广益增损，汇为一帙，合参考订，宗匠宿儒，斧以斯正，百世永垂，万载一本。不辞固陋，仰冀鉴怜，湟汗顿首，谨表以闻。稼堂族榖人顿首拜光绪二十七年（1901年）仲夏月中浣七日刊 族长户首入祠模箴曰： 国家重望，老成典型；流风余韵，矜式乡邻；矧在桑梓，妇孺共钦；祠宇巍峨，矩矱犹存；绳趋规步，楷模先民；慎尔威仪，是经是程。祠宇当春祭时，先须细心捡点，有怀必修，勿使崩塌。祭毕宜设高台，令族众纷集于下，着族中有齿德者登台，或讲圣谕十六条一章，使族众愚昧者，静听宣讲，稍明大义，庶不负世代祖宗教训之意。若有事，族长入祠理事，先须打扫安静之室，待族长歇息其中，着走传之人传集两造，各据理诉与各房户首静听、本房户首质讯，不许争竞喧哗，酌其理之近似者以备族长处置。词毕，启扉设公案、设两旁座位，两造香烛跪拜，禀告祖先，然后请族长升座，置祖牌于座上，虽前辈尊长各跪地质理，各房户首两旁坐听，不许稍有委屈。族长秉正明决，执刑者待立两厢，若崛强不服，先行家法，不准哗然争闹，侈口詈骂。已服，各书一寝事，纸笔存祠，以防事后翻悔；令两造再拜祖先，及谢各房户首。族长再拜祖先牌位，循循整肃而退，以示告毕之意。左右彻座，族长细心教训，使两造仍敦和好，无留芥蒂。退出，掩门阖扉，庶不致人竞吵嚷。粗俗蛮悍以昭慎重之意。 家规总录（十条）朝廷之化，基于宫闱，治国之道，本于齐家，是国为用才之地，家为蓄才之区也。使家无规则，中材以上或知蓄德，中材以下难免踚闲。欲子弟之言行克谨，则父兄之诰诫宜先。具有家规，胪列于左。 议立族长。以示统率，尤必立户首，以分责任。凡族中巨细事务，秉公持正，排难解纷，使之共敦孝友，斯宗族之仪型以着，子弟之表率克端。至族长新旧相乘，宜春祀时，户首合族公议，择取年尊望重、才德兼优着膺其任，庶不致狥情近利、畏势挟仇，有乖睦族之意。而户首凡遇细故，先据理冰释，必疑难重务，方可送祠以凭族长同众公处。其斯为専任则劳、分任则逸云尔。 议春秋享祀。预派值年首士，专掌祭奠，先期来祠，牌示同人，合族人整齐衣冠，临期集祠，不得籍情推诿，视为故事。凡祠内器具，悉数掌管，不至遗失，有借有还，失散令赔。祠外山林树木，坟茔柴草，不准乱砍。侵祀先灵，一有不合，首士先行理论，勿得狥情，否则聚族公义，或将祠内钱钞送官惩治，使人人警惧。 议教训子弟。首自孝悌。一有忤逆傲狠，不但庭帏难容，即属同宗，亦不可任其干犯。凡族中众儿孙，均宜各自务正业。一切酗酒局赌，干名犯义事件，俱属有玷宗祖，从重惩责，以警呆顽。至于委身皂隶，纵容私昵，亦属家规不整。嗣后如有不听教诫身为下贱者，死不准入祠。或无嗣子，希图吞产，或同姓为婚，均宜禁止，族众不准徇隐。 议和睦乡里。一团聚处，非父兄即子侄，非重婣即连戚，凡属同宗，自子孙视之，固有亲疏，自祖宗视之。总系一脉，即属异姓，年长一倍，则父事之；十年以长，则兄事之，必恩以相接，情以相通，有无相共，缓急相济。不可因支分派别，些小事故，遂生嫌疑，甚至匍匐公堂。致与讼累，以至破家。 议赴愬宗祠。是非曲直，凭族长处置。赴愬之人，先具投词，入祠禀白，听族长订期。是日传集各房户首公论，投词者随同本房户首入祠对质，事楚两造各书和息寝事后，须各释嗔恨，仍敦孝友，倘若迁怒族长，以为不公，本房户首押至祠堂重惩。至走传人等一切供给，着两造轻重备给，不得有违。各宜凛遵，特此预白。 议照守宗祠。必择族中洁净纯谨之人，着户首保举来祠，使之严出入、勤洒扫、伺香烛、细检点，勿令人寄放棺椁、纵放鸡犬，庶内外整肃、尘垢不生。若懒惰乖张、不理祠事，任族长革出，再议更换。 议祠内田产钱榖生息。须择公正有力之家，专任执掌。每逢春祭，算明账项，或同值年首士公放生息；至田地换庒收稞，必公同族众，查其人之可否，验之稞之好歹。若收存掌放之人交卸下手，凡帐内所欠之钱，着令赔出始卸，不准指东扯西，支展吞骗，如有侵蚀，查出加倍重罚，以警刁顽。 议教训子弟。诸凡家庭之间、伦常之重，俱不可有心干犯。不但父兄骨肉循分尽职，即如一草一木，若非己有，亦不可任意携取；至于以伯就弟、以叔就嫂，久奉例禁。妇不在贤，詈辱尊长，责在其夫，夫不能制，宜并带至祠，听族长教责，后族护短公同送官，以昭顺从之。意或女外嫁，不准久留母家，非有大故，不准藉势凌人；若无故被出，公徃理论，不得遽兴讼累。倘夫家毁毙，亦不必报官相验，藉命与人滥闹，致蹈他人恶习。至些须小事，须察实论理，莫贻外人訾议。兄弟子侄不肖，须凭族众公议处置，倘任意溺水吭喉，亦属不仁，父兄不得无罪。诸如此类，禁之宜严。 议族人纷蕃，俱各散处，闻见不齐，嗣后祠内所收稞租、积放钱账，不准借口公项，致使拖欠。稍有蓄积，公选族中之可以成事者不时存留生利，以防耗散，致令祠宇倒塌。若中有议论不合，须择从公有便于祠祀者从之，虽远近异论，不令管事者贴钱。庶祠事可管而祭祀不致废坠矣！ 议族谱之板，藏于祠内。逐年首士须经管其事，勿合散失。若印成部帙，不准毁坏。藏谱之家，须好为收拾，供置家龛侧。倘有火灾，先将此谱救出，失者倍罚，若后有人请板印刷，须告知执事者，发出印毕，即交还原处，恐防失散，有散典守与散失者同科。庶板可以存，不致虚耗之谱。  祖茔坟墓公山总赞（节选） 赞曰：伟矣山林，郁郁葱葱。于皇祖考，偃息其中。龙盘碁列，马鬣云封；夜月啼狖，秋风咏蛩；受兹介福，万世攸同！ 凤凰山者，明初畇公之墓也。始塟罗山，继迁三友坪郭家湾，终偷至此，其地名杜家村；四望云山耸峙，溪水环绕。始则上齐来龙，前齐河心，左右齐沟，岁久渐失。卜亷公率众定界，周围百丈。据存老屋冲。光绪十六年【1890年】，复率九房清界，茔内永不准砍伐。因铭曰：伟哉皇祖！煜铄规模，兴此崇丽，构兹成则，西极流精，北荒明月；龙盘丹水，虎踞后河；冥合天人，克符竣德；溯厥生初，鸿开骏业；羽翼九子，诸孙罗列；电掣风驱，广开阡陌；峻宇雕墙，雄据楚北。没惟三边，于彼山侧，高岗鸣凤，九皋唳鹤；芷馥兰馨，山矗径仄。太岁在寅，巴戎抗辙，截我山林，率我蟊贼，爰赫斯怒，传檄共阅，冠盖络绎，风动云掣，士无遗镞，壶浆远谒，收此横逆，丰碑永勒。伟哉皇祖，声灵赫铄！ 怀古诗（1—6作者：谷人） 添玛观怀古  五律一首 高观凌云矗，楼台依翠微。与名同不朽（东湖有观亦此名），人世亦何希。薜荔沿三径，河山界四围。尚留丹灶在，挂锡向西飞。 凤鹤山怀古    五律一首 峻绝畇公墓，嘉名凤鹤标。秋坟山鬼拜，夜月女萝招。径仄云生屦，溪深虎渡桥。当年言不朽，九派乐喧嚣。（俗称“偷户”则发此房） 侯伯庙怀古    五律一首 我来江上路，怀古式英风。白马生前烈（声称白马先锋），丹书死后忠（死封阴侯伯）。苍山盘地峻，远水贯溪雄。》古木依衰草，都随劫火空（白果树光绪丙戌烧毁，其根尚在）。 题清溪老屋    五律一首 骏业昭前代，江千旧有村。开窗招月饮，移砌动云根。夜黑猿僵树，天寒虎叩门。为怜幽逸士，无计避群喧。（此系开关老屋） 清溪怀古    五律一首 （清溪处士俨公之墓志铭也，碑圯复碑时见之）一径寻溪曲，幽居豁草莱。房齐随世变，山水逐人来。石磴欹远侧，秋花落更开。頺垣余败瓦，遗迹冷苍苔。（今皆毁叶） 题宗祠    五律一首 苍莽五龙头(地名五龙头山)，群先启壮谋。祠基高百代，香火擅千秋。未雨云生栋，非更月在楼。（祠宇辉煌如旧）至今歌燕翼，苹藻起新讴。  覃氏谱序 从来本固者，枝繁族大者烟众，祖孙递降，派序必分，谱有以序，则卑者乃不得踰尊，疏者乃不得踰戚。既始远高曾者之可分，亦伯仲叔季之不紊，尚何患椒聊蕃衍不能数典而知，以致名分凌躐也乎。是序谱之为繋也，亦大矣哉。即为我覃氏祖籍之来历，原系江南徐州府沛县大王庄土地生长人氏。至元世【1271年】始移江西南昌府南昌县太平街居数十余年。因大明洪武【1368-1398年】作号，族众星散，落籍湖广者有人，落籍四川者有人。大房添标则徙松滋，二房添顺则徙湖南永顺府，三房添玛则徙长阳，更有添珊徙黄陵庙，添珠徙红花套，此皆先辈祖公亲口相传，虽一柱公以上茫然不知，然以下则历历可考。自一柱公至畇公十有五世，遂有九大房之分。而我祖宪简公则居九房之长，自宪简公又传五世。至我祖大勲，则因明季兵燹，举家逃于河溶当阳县，复娶向、李氏，遂家于此，没后葬于苏家籍，碑迹可考。迄今亦孙子昌盛，其原配司氏因烽火既熄，旧宅犹存，独携其所生之三子胤吉、胤长、胤发复归长阳，即贺佳坪之老屋（土充）【音“冲”】而居焉。由是克昌，厥后长发其祥，子子孙孙世承无替，则所谓源之远者流自长，德之积者元自厚，信不诬也。兹因代远年湮，重修世系，爰记数语，以志不朽云。光绪元默摄提格岁春正月望日    族后裔  孙仲山吉甫谨撰  修谱总序 甚矣！世派久远者之难稽也，盖祖功宗德显晦有时，子孝孙贤过权各异，故我覃氏祠堂十二房分派流演繁盛。虽前有□朝公草创族谱，而于世代源流考据殊略焉。今仅就考据所巳及者，各即祖之名以着其绩，所未及者，望后辈之继起增修于无穷焉。顾宗祠之设，所以上治祖祢，下治子孙，旁治昆弟。即族谱之修，非徒稽察祖宗之世系，即昆弟子孙之散处者，或近附桑梓，或远离祖宗，自宜会萃而整齐之，方不乖敬宗收族之义。乃自去岁至今年，前后召会两次，而入祠堂修谱局者殊寥寥无几。则昆弟子孙之基址、名号且隔绝而无从询问，又何从而稽其各房之世系哉。今因族人□广公躬膺修理，予总参订之役，时当告竣，爰缀数言于编首，以俟将来，望各房勿忘水木之恩，勿自辟于文献之外，致令后之踵修者，愈不胜其稽察也。是为序。          世孙  海云化龙撰  克明公墓志 司郡泽之秋，垠阳覃生鹤芝仙，将为之父克明先生、暨母顾儒人修寿藏。邮寄数语请志于余，爰掇略以书之。先生讳千焕，身列成均，世居垠阳之货佳坪，乃祖乃父忠厚传家，及先生而家声愈振。先生至性过人，其所以事慈严友伯伸者，里人奉为楷模。分爨后，极意经营，得原配林孺人内助，遂以财甲一乡，继室顾孺人抚遗婴如己出，均教之成立。虽古贤母何以加焉，而其口碑载道。昭然耳目之前者，尤在救荒一事，且夫利者，人之所共贪也。荒年者，富人之所资以为利也。己酉岁，阴雨连绵，二麦不登，全楚薪桂炊玉。先生乃谋于顾孺人曰：“方今鸿雁嗷嗷，半菽不饱，如桑梓何？”顾孺人曰：“我有斗粮藏之从矣，以备荒年之需。”先生于是慨然减价，计口分售，历数月不倦。卒之待以举火者众，罄家中之所藏不足以济，又于巴邑之边疆雇人肩挑背负，取其值不求赢焉。秋成而后，所全活者不下数百家。其心盖从孝悌而推，其术又从经纶而出焉。宜乎身其康强，子孙真逢吉，而寿藏之所以修欤。此盖闻之予西席，黄垚坡即芝仙之师云，迄今庆衍螽斯，祥呈麟趾。先生之德不朽，先生之风真所谓山高水长矣。是为志。                     署宜昌府教授玉林陈振声拜撰  石砚记 天下事之可传者，藏之名山，垂诸后世，非传其迹，实传诸其人耳。予于清溪老屋见有古砚焉，规头矩尾，中有池然，其形微凹，大至数百钧，似非人力所可举者。问之曰“候伯光简之砚”。数百年后，置诸龛中，夫非人牲而物在，见物如见人者哉。微论于琴见文，于梦见公，即曹操之铜雀，石崇之金穴。下至闾阎之创造，祖宗作之，子孙守之，有一至者焉，再过则为墟矣，有再至三至者焉，又过则为墟矣。非有不敝之精神，经历劫而不变，垂百年而不朽，乌能积久常新哉？而公独以石砚犹存，岂公之精神钟于其砚者耶？而何去公之世，已数百年，即所谓上马蹬、下马台者，已渺不可追，而后世之追寻故迹者，见其屋宇之倾颓，基地之荒芜，亦百不存一焉。而砚亦埋没于荒烟蔓草间。今百世下，追想遗嶶，见其物之庞然大，莫不惊而讶之，以为不见公，见其物已可知公之伟。假今公而在世，其丰功骏烈，有不知何如之赫濯也者。是物以公传，公亦以物传矣。吾不为物悲，而转为公悲矣。然则斯砚之存，实公之大幸也夫。  白果树辨 世传白果树为候伯公焚身之所，而有与树俱活之说者。愚谓其树之存亡，原不系乎其人也。夫树之在公前也，不知其几千百年矣。当公焚身之日，树已大至十余围。而平昔优游其下，未当不望而爱之如普舍树。然一旦命公拔之，人虽至愚，谅不至此。 而公以盖世之雄，即力能胜之，亦必肃然敛手。而为公之父兄者，讵能挟公以必从。是公之不道，未始不可力为换回。假使率以义方，当有明革命之初，而与徐、常诸公比肩事主，其功烈必有与大树将军并垂不朽者。区区一树，何足与挈其短长。乃计不出此，而徒为此倾轧之计，以自缚于此树之下，一炬烈火，煨为烟烬，虽曰“除害”，深可怜惜。而徒闻临终嘱之曰“树亡与亡，树存亦存”，迨后人立庙于下，而树亦终不朽蠹，亦公在天之灵，有以寄托焉。孰意数百年后，至道光【1821—1850年】年间，而树依然复合，意者公其复生矣乎？乃迟之又久，而仍寂然也。但见其树中空可容一席余，而赘生枝节下垂如溜，亦公之愤气郁结而成者。与至丙戌，仍遭劫火，仅存丈余，不惟不见公，将并其树而湮没焉。而其先均谓其树之赘溜关乎盛衰，而至今又未见祸福之所存。吾故曰“其树之存亡，原不系乎其人也”。或曰值运会之盛，当开关之初，类多符命说者。遂诧而异之，以传于后世云。                   涉圆氏题        光绪二十七年辛丑岁仲夏月上浣二日  刊 化龙修谱传序吾族海云化龙者，苦志士也。入泮后，环堵萧然，家无担储，处之裕如也。逮长留心贸易而所至成市，屋宇岿然极大观焉。终迁青林口，修佃房若干间，而有心于修谱，亟商之予。予曰：噫嘻，亦甚矣哉。夫天下有心同而事异者，有迹同而势异者。吾祠之修，在咸丰初年，吾族墨林、星垣、遂年、盛望四公同心协力，苦化远募而祠宇成，其香火之费盖阙如焉。迨后熙照、德年、立三诸公继之。予亦维持调护于其间。祀事始不绝如缕，后殆无有谈及修谱者。去春，公极力周张，累席计议，不惜心力，愿倾囊而独任之。期年之间，孰知有志者事竟成也。予闻之，曰：噫嘻，亦甚矣哉。语云：莫为之前虽盛而弗显，莫为之后虽美而弗彰。微数前人岂能餍后人之心，微此一人岂能光前人之迹哉。而其事势之难易，同不同必有能辨之者。书以遗后之君子，后有作者，其同也耶？其不同也耶？噫！庠生润堂俊臣拜撰      光绪二十七年辛丑岁仲夏月下浣八日 涉园先生序自古能成大事者，不以繁而生畏，不以涣而生疑。吾族繁衍数千余家，涣处数百余里，非修族谱何由统摄哉？先代以来非尽漠不关心，盖亦有志未逮，犹待乎后人也。鱼叨祖德忝列胶庠，思继先志而独力难支。乃商之族祖广公，公深维木本水源之义，力任敬宗收族之劳，相与聚族而言，曰：“吾族人丁繁盛，俊秀踵舆，可知祖德之留遗者远也。谱牒一事，先人创之，后人不述可乎？凡食旧德者，盖共襄盛举。”众族人翕然，踊跃听命，爰博采旁搜，参互增损，汇为一书，付之剞劂，俾族中家藏一帙，得有稽察，不失统绪，则繁者不厌其繁，涣者不虞其涣。而广公玉成之功德，亦与斯谱并垂不朽矣。鱼属庸材，不能大有建白，幸因广公之鼎力附骥尾而益彰。爰于斯役告竣，而冠数言于简端，后之览者，亦可以得其梗概云。                世孙海云化龙拜撰      光绪二十七年辛丑岁仲夏月上浣八日  刊 润堂先生传先生讳吉秀，字俊臣，号润堂，姓覃氏，予契友也，为涉园公长子。其才智过人，有大节，少与同游，天姿独粹，入泮后仍奋志于远。到自辛甲科乡试明珠见遗，未偿其愿，即为尊大人理家政，勤经营，业歧黄，所谋百不失一，识者方之陶朱公焉。然其秉性冲和，涉世则矜而无争，洵乎彬彬之君子矣。昆季三，先生居长，友于兄弟，有姜家遗风。教嗣君及诸侄等皆有义方，现有从予游者，先生每来馆，即嘱严加督责，子弟有不事恒业者，一见先生莫不畏缩，其实先生无怒色，善言规之而已。交游间，重气谊，时以诗文会，且处事精详。闾里有争端就先生质之，或正气以化其嚣凌，或婉言以消其强悍，据理冰释，咸感佩而去。所谓增一族之光，重一乡之望者夫。    光绪辛丑，贵族化龙先生邀尊大人建修族谱，其搜罗世系，尊大人踊跃从公，而委婉以邀族房之乐于从事者，寔先生之力也，噫！非本仁孝之德，乌能如是乎？先生之善状，难以悉数。予才非绣虎，仅摭其寔，以传之云。华堂砚弟吴代荣拜撰                     光绪二十七年辛丑岁仲夏月上浣八日  刊 化龙先生序家乘与国志一也。夫国志之着，有能草创规模着明基址者。吾于其人韪之有能搜罗遗失、订正谬讹者，吾于其人韪之家乘何独？不然，而家乘难于国志，何也？修国志不乏文献，修家乘类多世系无考，此其难者一也。修国志犹有征收博集，修家乘每苦捐助无出，此其难者又一也。而有志者则无难泊乎？其成着千秋之盛业、擅百世之芳名，则又未尝不炳焉，与国志同风也。今乃与海云先生两祖孙遇之，夫覃氏之有家乘由来旧矣，然特其大略耳。至海云先生两祖孙同心修理，一则不惜心力搜、采、增、访，遂以成谱，一则不惜重赀辗转经营，付诸剞劂。阖族共事者无多，而二人竟以告成。予适过局，亲见其劳瘁。又统观家乘，不禁叹羡者久之。谓两先生曰：“斯举也，什百于文人学士之著作矣！吁亦盛矣哉！”予不揣固陋，用弁数言，以志向往云耳。廪生敬亭 弟李鸿渐拜撰      光绪二十七年辛丑岁仲夏月下浣一日  刊  涉园夫子传从来贤豪特起，缵承先绪，佑启后图者多矣。其精明足以慑群情，其浑厚足以孚众望。虽未获躬秉国钧，化洽邦国，而孝友传家，自堪千古者，亦复寥寥，予于涉园夫子得之焉。夫子讳盛广，字熹焘，涉园其号也。少列胶庠，世居三友坪之名区焉。予馆于斯，闻其幼嗜学，负才磊落，且得贤父兄之乐。至今年逾六旬，所谓无忧者，直不啻与文王媲美也。德配李孺人，温惠淑慎，案乐眉齐，嗣君三，俱属英俊，惟长君号润堂，早游泮水，继述甚善，其次肄武业儒，均远程可期。诸孙林立，英敏尤异，不惟无忧，而且得庭帏之至乐焉。然犹其余也，至秉性温厚，乡邻悉钦信之。凡有疑难事，或为排解、或为营救，远近咸无思不服也。岁辛丑，贵族有化龙先生倡修族谱，遂推夫子为总理。夫子即慷慨任事，不忘敬宗收族之诸创，修谱牒，搜罗世系，本本原原，悉斟酌尽善，其苦心孤谊【诣】善后为何如耶，是又志在敦伦，不仅以文章著述驰誉人间矣。予笔砚荒芜，不能掞藻摛华以扬令德，特以谊属相契，不禁少摭其寔，以传诸后世云。                         华堂契 晚吴代荣拜撰     光绪二十七年辛丑仲夏月上浣八日  刊 九、湖北省长阳“普舍堂”覃氏文学 长阳古寨出土明代碑刻 记述“火烧覃侯伯”2007年01月20日 10:23:56 来源：湖北日报报业集团http://www.hb.xinhuanet.com/newscenter/2007-01/20/content_9092498.htm日前，长阳县贺家坪镇白果树坪村一村民，开挖房屋地基时，挖出明、清两代碑刻7件。专家分析，这些碑刻可能与传说中的土家明代土司覃侯伯有关。据贺家坪镇文化站工作人员介绍，7件碑刻分别为记事碑、警示碑等，上面刻有“大明隆×”、“大清嘉庆”等字样，为明、清时代文物，其中还有一件极为少见的无字碑。另外，被发现的文物还包括砚台、青花瓷片、茶器、陶片、矛、捣臼等物。专家称，碑刻内容主要记述土家著名传说“火烧覃侯伯”事件。覃侯伯是传说中的土家明代土司，相传存有无字碑一块，此次发现的无字碑部分印证了有关史料及传说的真实性，反映了当时的民族关系、社会演变、文化经济等信息，具有较高的考古价值。（记者胡传林见习记者张乐 通讯员覃祥格）妈子树传奇http://bbs.cnhan.com/viewthread.php?action=printable&amp;tid=572421作者: 鸿子 时间: 2007-11-24在长阳土家族自治县贺家坪镇老雾冲生长着一棵300余年的白果古树，古树根围5米，树高25米，占地1.5亩。由于该树树干上长有多个树瘤，酷似女人的妈子（即奶子，乳房），因此，大家又叫他妈子树。树下立有阴侯伯庙。远看，银杏像一把撑开的大伞，侯伯庙像一个打坐的方外之人。白果为什么会长妈子？侯伯庙为什么建在树下？此事说来话长，先从覃家说起。话说明朝末年，国运日衰，民变不断，外患持续，明朝已经陷入风雨飘摇之境地。虽国运不济，但长阳覃姓一族，却是名门望族。自唐以来，族人屡有建树，后裔世袭土司之职，将军、总管辈出。二十八世，有老将军添玛于元末辞官还乡落籍于今贺家坪镇三友坪，即贺家坪“普舍堂”覃氏之祖。这贺家坪位于神州中部，自古就有施宜古道连通全国，是个人杰地灵的好地方。一年后，覃老将军小姨太产下一子，胖墩胖墩的，老将军自是非常欢喜。就在这一天，小姨太午时产子，外面太阳正猛，晒的人眼都不敢睁大。可偏偏有人不怕晒，一中年道士来到覃家院外，左看右看，远看近看，口中念念有词： 吾看山兮山巍峨， 吾看水兮水吟哦， 吾看屋兮紫气腾， 吾看人兮帝王客！ 茫茫宇宙人不觉， 不请贫道事难合……道士在院外朗朗有声，早有家丁禀报于内，老将军正在兴头上，道：“快请，快请！”道士步入中堂，又念一首： 石泉练碧入云中， 险纪荆南一线通。 天磴玲珑山璞玉， 地枢盘夹水游龙。 今日紫焰冲斗牛， 他时芳名入祠堂。原来，这道士姓张，天师也，云游四海多年，算得巴族将兴，要出一位像巴务相一样的奇男伟人，有心要帮衬一二。但见覃家气冲斗牛，但也有不足之处，遂说：“茫茫宇宙人不觉，不请贫道事难合”。话已经至此，老将军完全明白了张道士的来意，请张天师入密室，重金求解。张天师不语，只赐一“简”字，并要白果一枚。老将军便给儿子取名为覃光简，覃为姓，光为名，简为派。张天师于覃光简洗三之日径直出门而去，只说三年后再来，众人留也留不住。张天师一口气走到三友坪对门老雾冲，将白果掷于老鸦窝里，然后扬长而去。话说这老鸦窝建于九丈高的一株大树上，按常理来说，这白果不是被老鸦吃掉就是要发霉烂掉，是永世不得落地生根了。也是无巧不成书，这老鸦窝建在大树的大丫巴上，窝底就是树心，树已腐烂空心，白果竟然落到树心里去了。三月后竟顶翻鸦窝，露出了片片扇子般绿色的叶片。真是： 万物皆因果， 绝处也逢生； 随手一颗籽， 万代有福荫。 三年后，张天师果然如期前来，收覃光简为徒。一晃六年过去，覃光简已是文韬武略，好一个英武少年。张天师带着覃光简又开始云游四方。老将军知道张天师非寻常道士，也不阻拦。九年后，张天师与覃光简回到三友坪。这时，覃光简已是天文地理无所不晓，各地豪杰亦多结为兄弟。他身材高大，足足八尺有余，一次能吃下三十来斤肥猪肉，力大无穷，他双手各提一块大腰磨还能跑跳自如，已成非常之人，颇具君王之相。一日，张天师说：“徒儿，你已具封王拜相之才，再用九年练成神兵九万，方可举事，切记，切记。”覃光简问：“以何练兵？”张天师笑道：“就用你的名！”说完，自个云游去了。 覃光简参悟数日，终于明白这个“简”字的用意，其实就是： 院外两顷竹， 人马里边伏； 院内日月辉， 飞身照宇宙。覃光简明白了师傅的用意，遂自封侯伯，意为诸侯之长，每日念动真言，聚天下之精气，认真修练神兵。据说，长阳的竹子原来都是实心的，名实心竹，经覃侯伯一炼，就炼成了空心，每一节里可藏一兵一马。覃侯伯已长大成人，可忙坏了七大姑八大姨。她们忙着给覃侯伯张罗婚事，先后介绍了九门亲事，具是豪门望族。覃侯伯一一笑纳。九房妻室，个个近比昭君，远比西施，一般人看都看不过来。唉，人算不如天算，也是合该覃侯伯不能举大事，不想发生了一件惨事。一晃六年过去，眼看“月半”来临，九房妻室都说：“年小月半大，想念老母哒，想回娘家归宁省亲。”覃侯伯因为要炼神兵，不能抽身，就命九队家丁护送九位娘娘省亲。九位娘娘一路出发，准备漂丹水（长阳现称后河）、泊清江（长阳现称前河），再入长江至宜昌，然后天南海北分头回娘家。不想清江不像今日这样平静，那时滩多弯急浪高，九个娘娘的九条船全部遇险，九个娘娘都遇了难，八十一名家丁深知覃侯伯军事化管理，免不了要军法从事，连娘娘的尸首也不打捞，四散逃命去了。覃侯伯练兵已是为山九仞，九十九拜已经拜了九十拜了，忽然闻此变故，不免心生杂念：一是娇妻遇难，心头发痛，二是自己亲信家丁尚且如此，举事之时还哪有干将来抬轿帮衬呢？其实，他有所不知，张天师当日种下的白果树就是用来培养干将的，只待时日到来，白果树就会结出千粒白果，每个白果都会化作一员干将。据说白果原来是可以修炼成人的，只因覃侯伯练兵不成，这些果子也感觉白活了，都急成白色的了，所以后来人们就叫他们为白果。遭此变故后，覃侯伯每到练兵之时，就恍惚见到九位娘子坐着花轿前来。如此三番，覃侯伯每见花轿，就觉得是自己娘子前来，所以，谁家娶了媳妇，从来不分亲疏，也不管辈分上下，都得先跟他睡觉三到五天，然后才能和新郎入洞房；谁家生了娃儿，前三到五天奶水都得他先吃，然后，才能喂娃儿。覃侯伯竟成了一个人见人怕、个个讨厌的恶魔！后来发展到他不仅可以随便辱骂殴打家人邻居，就连覃氏祖宗、长辈、当地文武百官都不在话下，他以为他真是皇帝老儿呢！又有家中丫环将他栽竹修园，在其中暗藏人马跃跃欲试，欲将朝廷推翻重建的情况给走漏出去了。这事可不得了，一旦让朝廷知晓，便会株连九族，满门抄斩。覃氏家族数百户，几千人就会毁灭在他一个人手中。为保覃氏兴旺，族长夜晚亲自来竹园察看，但听得人马萧萧，似有千军万马。族长大惊，召开紧急会议，决定除掉覃侯伯。一天，老雾冲白果树旁一长者做寿，族长亲自前来邀约覃侯伯去祝寿。噼里啪啦的鞭炮声中，众多有脸面的人都连连给覃侯伯敬酒，趁他喝的醉哄哄而得意忘形时，族长激将他：“光简，你不但人聪明，而且力大无比，大家都想见识一下你到底有多大的力气。”“我的力气可大了，我可以举起道场边的大石磙。”“那可不行，石磙还不到800斤呢，你要是把门口这棵白果树背起来，叔叔赏你500两银子，还让你来当族长。”覃侯伯看看白果树，哈哈一笑道：“才缽子粗呀，还粗一半我也背得起来！好，我就先来当当族长！”于是，众人在树旁用砖石垒起七尺高的台子，把覃侯伯扶上去，用一根又粗又长的绳子把他一圈一圈牢牢捆在树上，准备妥当，只听他一声吆喝，树根断裂得叭叭直响，树枝剧烈地摇晃起来，眼看就要连根拔起。族长赶紧发话：“停！停！光简儿，这样背不威风，你看，这站在地上，人显得又矮又小的，不如抬两张大桌子来站在上面把树背起来，那才叫威武，有气势呢。”覃侯伯不知是计，挥挥手吩咐道：“抬桌子来。”众人抬来两张大方桌，靠着大树叠放着，让他站在上面的桌子上后，又用那根大粗绳子把他左一圈，右一道的紧紧捆在白果树的半中腰上，族长一声令下：“光简，再背。”覃侯伯铆足了劲儿，只听见一声断喝，桌子全部粉碎了，白果树没有动，而覃侯伯却成了上树的猴，上不着天，下不着地，任凭他怎么吆喝辱骂也没人理他。等骂够了，老族长喊道：“光简，你就别下来了，你作恶多端，败我族规，坏我族风，今天我要替天行道，除掉你这个畜生！”说完命人将早已准备好的干柴堆放在白果树下，点燃油亮子，引燃干柴，一把火将覃侯伯烧焦在白果树上。覃侯伯在断气之前，在树上大叫：“你们烧不死我的，白果树的妈子妥起地，我覃侯伯又成器……”大家有所不知，覃侯伯虽人高马大能力大，但他是不能离地的。离开了地面，搭不到地气，覃侯伯的法力也就没有了。原来张天师一共安排了三拨人马，覃侯伯练的是地兵，皇太极练的是空兵，还有一拨是天兵。后来皇太极凭借马上功夫建立了清朝。由于地兵没有练成，所以巴族复兴也还需要一段时日，由于天兵没有练成，所以直到21世纪的当今盛世“嫦娥”才飞到月球，此是后话，不表。刚刚烧焦覃侯伯，只听见人呼马啸之声不绝，竹内兵马也气绝身亡。竹子也因为此故，大伤了元气，每六十年就要衰老返园一次。刹时天空忽然乌云密布，倾盆大雨浇灭了大火和引燃的树叶。这棵断了些根的白果树不仅没有被大火烧死，而且日渐枝繁叶茂起来，后来果然在捆绑覃侯伯的树腰上生出了一个秃瘤，就象女人的妈子。树长妈子也长。原来覃侯伯和这棵白果树是有历史渊源的，今日一烧，他们就喝二为一了，人为树魂，树为人身。人们担心覃侯伯又成器，妈子每长一截，就有人用刀子削一截，更有人狠透了这个无恶不作的恶魔，竞拿那妈子来煮水喝。不曾想这不喝则已，一喝竞喝好了其中多年来的哮喘病，这一传十，十传百，越传越神奇。患病的人争相来割取树妈子，心想：覃侯伯这么凶，一定能把病魔战胜。如此反复割取，树上也不只一个妈子了，而是长了好些个。覃侯伯经火一烧，才清醒了，知道要成大事，必须以民为本、公正无私。但人身已无法复原，只能悬壶济世，医病消灾。所以现在白果树长的都很正，具正大之体，有君王之风，含和谐之韵。有诗为证： 本是君王命， 困于巴山中。 人放公正心， 树留和谐风。虽然现在人们知道覃侯伯永远不会成器了，但白果树能治病倒是真有科学依据的。现在这里开发成一处旅游景点，来此参观的人络绎不绝，树干上仍依稀可见当时火烧的痕迹，附近建有纪念火烧覃侯伯的庙宇及碑文。现在318国道、沪蓉高速公路、宜万铁路、忠武天然气管道都打这里经过。如今这棵数百年的白果树已属长阳县林业局挂牌保护的珍贵古树。交由老雾冲村民覃祥淦管理、经营，年产鲜白果300—500斤，成了覃祥淦家的摇钱树。（注：妈子是土家方言，妈子即奶子、乳房。） 族人诗词选 覃福民（1–3） 七律·闲散步（今韵） 枯坐书房生寂寞，步行江岸觅轻松。秋风微送桂香馥，寒露渐涂枫叶红。硕果枝头得意笑，渔翁船尾醉眼蒙。东山红日羞遮面，白鹭翱翔与我同。 [正宫]塞秋红（今韵） 晚霞散尽天色暗，群山如靛藏颜面，街灯燃放如白练，渔舸依山闲泊岸。平台晚散步，新月玩弓箭，凉风徐徐炎炎散。 梦呓 烂漫的野花在眼的引力和内的张力驱动下译放出诱人的浮华灵魂的脚心痒痒地踌躇不前隨着涟漪消失的风情在枝叶间说着梦话 覃发源（1–8） 自勉 人生苦短数十春，好自为之常自珍。退休仍然未退党，去职那能尽去心。位卑不忘常思国，年老尤应多惜阴。须识夕阳有限好，晚霞分秒贵如金。 自嘲 倏惚光阴已耋耄，无复枝头春意闹。小斋含饴享清福，大街遮颜带旧帽。专芯品读名诗词，信笔书写清平调。管他平水与打油，自己做圈自己套。 退休二十年 无官无责二十载，有苦有乐一身轻。三径竖下炼身手，九峰山巅看晚晴。将军吐绿映碧水，白马余晖万象生。嘻嘻哈哈不知老，呀呀咿咿学仄平。 自勉 叩壶低吟对西风，斫地高歌惊彩虹。八十春秋艰难度，一生劳碌好了空。岁暮木叶萧萧下，夕照晚霞淡淡红。来日无多须尽力，吟成一句也是功。 卜算子·退休二十年 十载弄孙欣，十载书中泡。淡淡平平了此身，唱晚和谐调。 人贵自知明，不用鸦鹊噪。老老实实读点书，半夜三更笑。 行香子·佷阳行 婉蜒清江，锦绣长阳，新时期、八面风光。烟波浩渺，咏唱悠扬。看佷山雾，巴山雨，桃山粱。 滴翠木瓜，枝果泛黄，农家院、金碧辉煌。“边穷老少”，已换新装。更新农民，新农业，新农庄。 破阵子·教师颂 子夜挑灯展卷，清晨濡墨铺笺。园里桃花开满树，转眼青丝挂暮颜。死生终结缘。甘作人梯垫背，不知苦乐酸甜。东逝长江波浪涌，斩浪劈波永向前。江山红万年。 竹枝词·老雾冲茶事（四首） （一）望老雾冲云雾遮，行行茶树满山阿。茶香缕缕飘冲外，惊动大车接小车。（二）阳春三月正飘香，阿妹采茶几满筐。喊个山歌发信号：阿哥快来帮我扛。（三）旧年茶号雾冲春，满口馨香沁肺心。细品杯中消困草，神清气爽好轻身。（四）春茶精制生白毫， 慢炒轻揉过细挑。揉进村姑甜美意， 引来顾客卷商潮。 覃万德（1–3） 七绝·桂堤（今韵）清江两岸桂花开，地北天南喜客来。绿叶黄花枝璀璨，闻香赏景乐开怀。 七绝·放风筝（今韵） 老叟牵绳平地走，花蝶起舞昊穹行。春风煦暖天伦享，霄汉巡游耀日星。 七绝·咏清江景观（今韵） 兰草谷瀑布兰花幽谷景观多，峭壁青山挂玉帛。百态千姿群竞秀，龙腾水啸涧翻波。巴王洞巴王洞景傍清江，钟乳奇石筑画廊。秀色舞厅容百众，深宫玉鼠闪银光。香炉石乘舟西进看夷城，壮士仙岩显峻形。百怪千奇石壁绣，香炉凝聚土家情。 覃建军（1–5） 茶园（20110121） 五彩天，七色地，春色连坡，层层烟云翠。映山朝阳青纱雾，多情茶物，常令山人醉！ 山路行，清歌随。爽风浅浅时光如逝水，夜露浸香苦苦追。相思一曲，不识旧人归。 归 苍苍幽山居，清清远水溪。笑语密林传，炊烟斜阳里。 柴埠溪（20100713） 万年千山造柴埠，群峦跌宕竞起伏，云漫雾绕绿峰间，清泉蜿蜒玉带舞。天宫画师运笔墨，魂留深山甘为俗，画卷散落化山川，风光仙境大峡谷。 米酒 糯米拌麯熬新酒，裹被热心泛浓香。满庭飘醇急品尝，失却斯文浇饥肠。儿时常咂阿妈酒，难抑情愫洗诗囊。他乡遥思父母恩，醉咏乡味比琼浆。 原创2010年7月10日补记：自己在家里用宜昌出产的米酒麯做出了老家口味的米酒（又叫醪糟、甜酒），在厨房煮时，爱人下班回家闻到醇香无比，从来不进厨房、饭来伸手的他，主动拿出碗筷，自己舀来一连喝了两碗，边喝边感叹而发“嗯，跟我妈妈做的一个味道！”，喝完后斜靠在沙发上满足惬意地慨然而叹“还是老家的味道好啊！”。 看人品 （原创 20100202） 烈火练出金美玉，薄冰履过掀天地。修德积善济世俗，行端言慎凭进取。宠辱不惊看炎凉，世态缝隙不做戏。妾妇赤子非伪饰，遗臭流芳随他议。 " } ]
